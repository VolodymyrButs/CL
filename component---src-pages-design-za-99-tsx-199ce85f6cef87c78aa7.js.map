{"version":3,"sources":["webpack:///./src/blocks/CommercialProposalFormBlock.tsx","webpack:///./src/blocks/ProjectStructureQuestion.tsx","webpack:///./src/blocks/Heros/PromoHeroNew.tsx","webpack:///./src/blocks/ProjectStructureWhy.tsx","webpack:///./src/pages/design-za-99.tsx"],"names":["FormWrapper","styled","div","backgroundColors","formPromo","mobileAfterBorder","colors","dark","FormTitle","text","displayWidth","tablet","desktop","svgStyle","css","HandshakeS","Handshake","PensileS","Pensile","ProposalS","Proposal","FormColumn","DivS","CommercialProposalFormBlock","placement","t","useTranslation","columns","tabletColumns","image","ProjectStructureWrapper","promotion","IconListStyled","IconListQuestion","HeroColumn","LeftSidebar","RightSidebar","white","Price","span","accentText","Big","TitleStyled","Title","indent","heroColumnTablet","ProjectStructureQuestion","id","data","i18n","projectStructureData","getDataByLanguage","allProjectStructureQuestionYaml","language","title","items","price","promo","fill","ProjectStructureQuestionDesktop","PromoHeroWraper","headerHeight","mobile","headerBg","PromoHeroColumn","ContainerStyled","Container","LampIconStyled","LampIcon","TitleWrapper","TitleH1","DesktopImageRight","sofaDesktopRight","DesktopImageLeft","Img","For","InputBlock","PromoHeroNew","imagesData","useStaticQuery","promoHeroData","allPromoHeroYaml","imageSofa","getImageByImageName","allImageSharp","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","buttonText","onFormSubmit","onFormSendStart","conversionType","eventCategory","register","errors","ref","minLength","required","err","phone","email","message","fluid","IconListWhy","heroColumnDesktop","ProjectStructureWhy","allProjectStructureWhyYaml","dangerouslySetInnerHTML","__html","MobileHeaderWraper","isMenuOpen","MobileMenu","BurgerButton","BottomIcons","PhoneLinkStyled","PhoneLink","Desktop","Wrap","WrapDesktop","iconStyles","ViberIconStyled","Viber","viber","TelegramIconStyled","Telegram","telegram","WhatsappIconStyled","Whatsapp","whatsapp","IconWrapper","pageMetadata","uk","description","ru","en","vizualization","query","Posadka","useState","setIsMenuOpen","getPagePath","usePagePath","scrolled25Send","useRef","scrolled50Send","scrolled75Send","scrolled100Send","pagePath","useEffect","current","gtag","process","page_location","document","location","onScroll","block","getElementById","scrollPosition","scrollTop","windowHeight","clientHeight","bodyHeight","scrollHeight","blockMod","scrollPositionMob","windowHeightMob","bodyHeightMob","setTimeout","scrolledRationMob","scrolledRation","Math","ceil","sendEvent","Logo","onClick","href","sendForm","sendConversion","LanguageSwitcher","closeMenu","MainMenu","onMenuItemClick","contactInformation","primaryPhone","RoundText","color","PhoneSvgAnimated","target","aria-label","PromoHeroMobile99","RunningLine","inverse","Reviews","arrows","bottom","Header"],"mappings":"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","file":"component---src-pages-design-za-99-tsx-199ce85f6cef87c78aa7.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport Proposal from 'assets/icons/proposal.svg'\nimport Pensile from 'assets/icons/pensile.svg'\nimport Handshake from 'assets/icons/handshake.svg'\nimport { ComercialForm } from 'components/form/CommercialForm'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    border-bottom: 1px solid ${colors.dark};\n`\n\nconst FormTitle = styled.div<{ text?: boolean }>`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n\n    line-height: 32px;\n    letter-spacing: 1px;\n    ${({ text }) =>\n        text === true\n            ? `color:${colors.dark};font-size: 24px;`\n            : `color: #437b13;font-size: 32px;`}\n\n    text-align: center;\n    margin: 40px 0 24px;\n    white-space: pre-wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 60px 0 24px;\n        width: 350px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\nconst svgStyle = css`\n    width: 20px;\n    min-width: 20px;\n    margin-right: 10px;\n`\nconst HandshakeS = styled(Handshake)`\n    ${svgStyle}\n`\nconst PensileS = styled(Pensile)`\n    ${svgStyle}\n`\nconst ProposalS = styled(Proposal)`\n    ${svgStyle}\n`\nconst FormColumn = styled.div`\n    width: 100%;\n    padding: 0 32px;\n    box-sizing: border-box;\n    h3 {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        line-height: 24px;\n        margin: 10px 0;\n    }\n`\nconst DivS = styled.div`\n    margin-bottom: 30px;\n`\n\nexport const CommercialProposalFormBlock = ({\n    text,\n    placement,\n}: {\n    text?: boolean\n    placement?: string\n}) => {\n    const { t } = useTranslation()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero image />\n                <FormColumn>\n                    <FormTitle text={text}>\n                        {text\n                            ? t('ComercialProposalTitle')\n                            : t('ComercialProposalFormTitle')}\n                    </FormTitle>\n                    {!text && (\n                        <DivS>\n                            <h3>\n                                <PensileS />\n                                {t('comercialForm.example')}\n                            </h3>\n                            <h3>\n                                <HandshakeS /> {t('comercialForm.conditions')}\n                            </h3>\n                            <h3>\n                                <ProposalS /> {t('comercialForm.proposal')}\n                            </h3>\n                        </DivS>\n                    )}\n                    <ComercialForm placement={placement} />\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconListQuestion } from 'components/IconListQuestion'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\n\nimport { indent } from 'styles/indent'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconListQuestion)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        justify-content: center;\n        border-right: none;\n        align-items: center;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.promotion};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst Price = styled.span`\n    color: ${colors.accentText};\n    font-size: 28px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 36px;\n    }\n`\n\nconst Big = styled.span`\n    font-size: 30px;\n    line-height: 45px;\n    font-family: 'Open Sans', sans-serif;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 36px;\n    }\n`\n\nconst TitleStyled = styled(Title)`\n    font-size: 26px;\n    margin: 35px 20px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: 1000px;\n        font-size: 32px;\n    }\n`\n\nexport const ProjectStructureQuestion = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureQuestionYaml,\n        i18n.language\n    )\n    const { title, items, price, promo } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        <Price>{promo}</Price> {title} {t('for')}{' '}\n                        <Big>{price}</Big>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n\nexport const ProjectStructureQuestionDesktop = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureQuestionYaml,\n        i18n.language\n    )\n    const { title, items, price, promo } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        <Price>{promo}</Price> {title} {t('for')}{' '}\n                        <Big>{price}</Big>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { headerBg } from 'styles/headerBg'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport LampIcon from 'assets/icons/Lamp.svg'\nimport sofaDesktopRight from 'assets/images/sofaDesktopRight.svg'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { TitleH1 } from 'components/TitleComponent'\nimport { useTranslation } from 'react-i18next'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { Form, IChildrenProps } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { imagesDataProp } from 'pages/promo'\n\nconst PromoHeroWraper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    height: calc(100vh - ${headerHeight.mobile} - 50px);\n    min-height: 503px;\n    border-bottom: 1px solid ${colors.dark};\n    :before {\n        ${headerBg}\n    }\n\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 605px;\n        border-bottom: nonne;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        height: 630px;\n    }\n`\n\nconst PromoHeroColumn = styled.div`\n    display: none;\n    :first-child {\n        display: flex;\n    }\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    flex-grow: 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        position: relative;\n        border-left: none;\n        justify-content: center;\n\n        box-sizing: border-box;\n        :nth-child(3n) {\n            border-right: none;\n        }\n    }\n    div {\n        min-width: 100px;\n\n        form {\n            max-width: calc((100vw - 160px) / 3.4);\n        }\n    }\n    :first-child {\n        justify-content: flex-start;\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n    }\n`\n\nconst LampIconStyled = styled(LampIcon)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        width: 190px;\n        right: 10px;\n        bottom: -55px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 265px;\n        bottom: 30px;\n    }\n`\nconst TitleWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 375px;\n        position: absolute;\n        top: 40px;\n        left: 0px;\n    }\n`\nconst TitleStyled = styled(TitleH1)`\n    font-size: 50px;\n    line-height: 55px;\n    letter-spacing: 0.666667px;\n    overflow: visible;\n    text-align: center;\n    color: #296963;\n    @media (max-width: 355px) {\n        font-size: 40px;\n        line-height: 45px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        box-sizing: border-box;\n        padding-left: 60px;\n        font-size: 46px;\n        line-height: 56px;\n        letter-spacing: 0.8px;\n        text-align: left;\n        margin-top: 10px;\n        margin-bottom: 10px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 64px;\n        line-height: 64px;\n        padding-left: 0px;\n    }\n`\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 64px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    width: 100%;\n    text-align: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 133px;\n        line-height: 90px;\n        letter-spacing: 1.52778px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 46px;\n        line-height: 115px;\n    }\n`\n\nconst DesktopImageRight = styled(sofaDesktopRight)`\n    display: none;\n    width: 75%;\n    fill: ${backgroundColors.promotion};\n    stroke: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: -1px;\n        bottom: 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 55px;\n    }\n`\nconst DesktopImageLeft = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    width: 78%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: 11%;\n        bottom: -150px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: -136px;\n    }\n`\n\nconst For = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-size: 50px;\n    line-height: 55px;\n    letter-spacing: 0.666667px;\n    text-align: center;\n    color: #296963;\n    @media (max-width: 355px) {\n        font-size: 40px;\n        line-height: 45px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        position: relative;\n    }\n`\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 0 auto;\n        width: 80%;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 40px;\n    line-height: 48px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 50px 0 10px;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 50px;\n        line-height: 58px;\n        margin: 50px 10px 10px;\n    }\n`\nexport const PromoHeroNew = ({\n    imagesData,\n}: {\n    imagesData: imagesDataProp\n}) => {\n    const { t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allPromoHeroYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        buttonText\n                        image\n                        imageMobile\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const promoHeroData = getDataByLanguage(\n        data.allPromoHeroYaml,\n        i18n.language\n    )\n\n    const imageSofa = getImageByImageName(\n        imagesData.allImageSharp,\n        promoHeroData.image\n    )\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n    return (\n        <PromoHeroWraper>\n            <ContainerStyled columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                <PromoHeroColumn>\n                    <FormTitle>{t('writeToUs')}</FormTitle>\n                    <Form\n                        buttonText={t('send')}\n                        onFormSubmit={handleSubmitStatus}\n                        formSendStatus={formSendStatus}\n                        onFormSendStart={handleFormSendStart}\n                        conversionType={'TopFormDesktopPosadka'}\n                        eventCategory={'TopFormDesktopPosadka'}\n                    >\n                        {({ register, errors }: IChildrenProps) => (\n                            <InputBlock>\n                                <PhoneInput\n                                    ref={register({\n                                        minLength: 18,\n                                        required: true,\n                                    })}\n                                    err={errors.phone}\n                                />\n\n                                <EmailInput ref={register} err={errors.email} />\n                                <MessageInput\n                                    ref={register}\n                                    err={errors.message}\n                                />\n                            </InputBlock>\n                        )}\n                    </Form>\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <TitleWrapper>\n                        <TitleStyled>{promoHeroData.title}</TitleStyled>\n                        <Price>\n                            <For>{t('for')} </For>\n                            {promoHeroData.price}\n                        </Price>\n                    </TitleWrapper>\n                    <DesktopImageLeft fluid={imageSofa.fluid} />\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <DesktopImageRight />\n                    <LampIconStyled />\n                </PromoHeroColumn>\n            </ContainerStyled>\n        </PromoHeroWraper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconListWhy } from 'components/IconListWhy'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\n\nimport { indent } from 'styles/indent'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: #fff;\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconListWhy)`\n    border-bottom: 1px solid ${colors.dark};\n    padding: 16px;\n    background-color: #fff;\n    > div {\n        padding: 16px;\n        background-color: #fff;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        border-bottom: none;\n        border-right: none;\n        align-items: center;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: #fff;\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst TitleStyled = styled(Title)`\n    font-size: 26px;\n    margin: 35px 20px;\n    strong {\n        color: ${colors.accentText};\n        font-size: 28px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n        font-size: 44px;\n        max-width: 1000px;\n        strong {\n            font-size: 44px;\n        }\n    }\n`\n\nexport const ProjectStructureWhy = ({ id }: { id?: string }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allProjectStructureWhyYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        image\n                        items {\n                            question\n                            answer\n                            answerDesctop\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureWhyYaml,\n        i18n.language\n    )\n\n    const { items, title } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr'}>\n                <HeroColumn>\n                    <TitleStyled\n                        dangerouslySetInnerHTML={{\n                            __html: title,\n                        }}\n                    />\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.formPromo}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n","import { RunningLine } from 'components/RunningLine'\n\nimport { Reviews } from 'blocks/Reviews'\n\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { PromoHeroNew } from 'blocks/Heros/PromoHeroNew'\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { LanguageSwitcher } from 'i18n/LanguageSwitcher'\nimport ExitSvg from 'assets/icons/Exit.svg'\nimport BurgerSvg from 'assets/icons/Burger.svg'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { Logo } from 'components/Logo'\nimport { displayWidth } from 'styles/width'\nimport { MainMenu } from 'blocks/Header/MainMenu'\nimport { contactInformation } from 'components/contactInformation'\nimport { headerHeight } from 'styles/height'\nimport Viber from 'assets/icons/Viber.svg'\nimport Telegram from 'assets/icons/Telegram.svg'\nimport Whatsapp from 'assets/icons/Whatsapp.svg'\nimport { RoundText } from 'components/RoundText'\nimport { PhoneSvgAnimated } from 'components/PhoneSvgAnimated'\nimport { useTranslation } from 'react-i18next'\nimport { sendConversion, sendEvent, gtag } from 'tracking'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { sendForm } from 'components/form/api'\nimport Proposal from 'assets/icons/proposal.svg'\nimport Pensile from 'assets/icons/pensile.svg'\nimport Handshake from 'assets/icons/handshake.svg'\n\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { ComercialForm } from 'components/form/CommercialForm'\nimport { CommercialProposalFormBlock } from 'blocks/CommercialProposalFormBlock'\n\nimport { Header } from 'blocks/Header/Header'\nimport { graphql } from 'gatsby'\nimport { imagesDataProp } from './promo'\nimport { usePagePath } from 'hooks/usePagePath'\nimport {\n    ProjectStructureQuestion,\n    ProjectStructureQuestionDesktop,\n} from 'blocks/ProjectStructureQuestion'\nimport { PromoHeroMobile99 } from 'blocks/Heros/PromoHeroMobile99'\nimport { ProjectStructureWhy } from 'blocks/ProjectStructureWhy'\n\nconst MobileHeaderWraper = styled.div<{ isMenuOpen: boolean }>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 65px;\n    z-index: 10;\n    background-color: ${({ isMenuOpen }) =>\n        isMenuOpen ? colors.dark : '#ebebeb'};\n\n    border-bottom: 1px solid\n        ${({ isMenuOpen }) => (isMenuOpen ? colors.white : colors.dark)};\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        height: inherit;\n        color: ${colors.dark};\n        font-size: 22px;\n        font-weight: 600;\n        letter-spacing: 0;\n        line-height: 28px;\n        margin-right: 20px;\n        white-space: nowrap;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst MobileMenu = styled.div<{ isMenuOpen: boolean }>`\n    position: fixed;\n    display: ${({ isMenuOpen }) => (isMenuOpen ? 'flex' : 'none')};\n    flex-direction: column;\n    justify-content: space-between;\n    top: 66px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    background-color: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst BurgerButton = styled.span`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    display: flex;\n    box-sizing: border-box;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    margin-right: 10px;\n    cursor: pointer;\n`\n\nconst BottomIcons = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    height: 60px;\n    width: 100%;\n    z-index: 10;\n    background-color: ${backgroundColors.formPromo};\n    display: flex;\n    align-items: center;\n    border-top: 1px solid #000;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst PhoneLinkStyled = styled(PhoneLink)`\n    display: flex;\n    flex-direction: column;\n    color: ${colors.white};\n    margin-bottom: 80px;\n    font-weight: normal;\n    svg {\n        fill: ${colors.white};\n    }\n`\n\nconst Desktop = styled.div`\n    position: relative;\n    display: none;\n    width: 100%;\n    height: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst Wrap = styled.div`\n    top: 66px;\n    height: calc(100vh - 126px);\n    left: 0;\n    right: 0;\n    bottom: 60px;\n    position: absolute;\n    overflow: auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst WrapDesktop = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        top: 80px;\n        height: calc(100vh - 80px);\n        left: 0;\n        right: 0;\n        bottom: 60px;\n        position: absolute;\n        overflow: auto;\n    }\n`\nconst iconStyles = css`\n    width: 38px;\n    height: 38px;\n    margin: 4px 13px;\n    cursor: pointer;\n    pointer-events: auto;\n`\nconst ViberIconStyled = styled(Viber)`\n    ${iconStyles};\n    fill: ${colors.viber};\n`\nconst TelegramIconStyled = styled(Telegram)`\n    ${iconStyles};\n    fill: ${colors.telegram};\n`\nconst WhatsappIconStyled = styled(Whatsapp)`\n    ${iconStyles};\n    fill: ${colors.whatsapp};\n`\nconst IconWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-end;\n    padding-right: 13px;\n`\n\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект квартири за $99',\n        description:\n            \"Виконаємо дизайн проект інтер'єру усієї квартири за 99 доларів США\",\n    },\n    ru: {\n        title: 'Дизайн проект квартиры за $99',\n        description:\n            'Выполним дизайн проект интерьера всей квартиры за 99 долларов США',\n    },\n    en: {\n        title: 'Apartment design for $99',\n        description:\n            'We will design the interior project of the entire apartment for 99 US dollars',\n    },\n}\n\nconst svgStyle = css`\n    width: 40px;\n    min-width: 40px;\n    margin-right: 10px;\n`\nconst HandshakeS = styled(Handshake)`\n    ${svgStyle}\n`\nconst PensileS = styled(Pensile)`\n    ${svgStyle}\n`\nconst ProposalS = styled(Proposal)`\n    ${svgStyle}\n`\nconst FormColumn = styled.div`\n    position: relative;\n    ${mobileAfterBorder};\n    width: 100%;\n    padding: 0 24px 30px;\n    box-sizing: border-box;\n    background-color: ${backgroundColors.vizualization};\n    h3 {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        line-height: 24px;\n        padding: 10px 0;\n    }\n`\nconst DivS = styled.div`\n    margin: 0 10px 30px;\n`\nconst FormTitle = styled.div<{ text?: boolean }>`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 32px;\n    line-height: 40px;\n    letter-spacing: 1px;\n    ${({ text }) =>\n        text === true\n            ? `color:${colors.dark};font-size: 24px;`\n            : `color: #437b13;font-size: 34px;`}\n\n    text-align: center;\n    padding: 40px 0 24px;\n    white-space: pre-wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 60px 0 24px;\n        width: 350px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\n\nconst Posadka = ({ data }: { data: imagesDataProp }) => {\n    const { i18n, t } = useTranslation()\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n    const { getPagePath } = usePagePath()\n    const scrolled25Send = useRef(false)\n    const scrolled50Send = useRef(false)\n    const scrolled75Send = useRef(false)\n    const scrolled100Send = useRef(false)\n\n    const pagePath = getPagePath(i18n.language)\n\n    // Reset scroll event when page changes\n    useEffect(() => {\n        scrolled25Send.current = false\n        scrolled50Send.current = false\n        scrolled75Send.current = false\n        scrolled100Send.current = false\n        gtag('config', `${process.env.GA_ID}`, {\n            // eslint-disable-next-line camelcase\n            page_location: document.location,\n        })\n    }, [pagePath])\n\n    const onScroll = () => {\n        const block = document.getElementById('blockF')\n        const scrollPosition = block!.scrollTop\n        const windowHeight = block!.clientHeight\n        const bodyHeight = block!.scrollHeight\n        const blockMod = document.getElementById('wrap')\n        const scrollPositionMob = blockMod!.scrollTop\n        const windowHeightMob = blockMod!.clientHeight\n        const bodyHeightMob = blockMod!.scrollHeight\n        setTimeout(() => {\n            const trackScroll = () => {\n                const scrolledRation = Math.ceil(\n                    ((scrollPosition + windowHeight) / bodyHeight) * 100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRation >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled75Send!.current && scrolledRation >= 75) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled50Send!.current && scrolledRation >= 50) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled25Send!.current && scrolledRation >= 25) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            const trackScrollMob = () => {\n                const scrolledRationMob = Math.ceil(\n                    ((scrollPositionMob + windowHeightMob) / bodyHeightMob) *\n                        100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRationMob >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled75Send!.current &&\n                    scrolledRationMob >= 75\n                ) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled50Send!.current &&\n                    scrolledRationMob >= 50\n                ) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled25Send!.current &&\n                    scrolledRationMob >= 25\n                ) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            trackScrollMob()\n            trackScroll()\n        }, 700)\n    }\n    return (\n        <div>\n            <HelmetFunc data={pageMetadata} />\n            <Wrap id=\"wrap\" onScroll={onScroll}>\n                <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                    <Logo />\n                    <BurgerButton\n                        onClick={() => {\n                            setIsMenuOpen(!isMenuOpen)\n                        }}\n                    >\n                        <BurgerSvg fill={colors.dark} />\n                    </BurgerButton>\n                    <a\n                        href={'tel:+380982117690'}\n                        onClick={() => {\n                            sendForm(`PosadkaHeaderPhoneClick`, {})\n                            sendConversion('PhoneClick')\n                            sendEvent('Phone', {\n                                eventCategory: 'PhoneClick',\n                                placement: 'PosadkaHeader',\n                            })\n                        }}\n                    >\n                        +38 098 211 76 90\n                    </a>\n                </MobileHeaderWraper>\n                <MobileMenu isMenuOpen={isMenuOpen}>\n                    <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                        <LanguageSwitcher closeMenu={setIsMenuOpen} />\n                        <BurgerButton\n                            onClick={() => {\n                                setIsMenuOpen(!isMenuOpen)\n                            }}\n                        >\n                            <ExitSvg fill={colors.white} />\n                        </BurgerButton>\n                    </MobileHeaderWraper>\n\n                    <MainMenu onMenuItemClick={() => setIsMenuOpen(false)} />\n                    <PhoneLinkStyled\n                        phone={contactInformation.primaryPhone}\n                        placement={'MobileMenuPosadka'}\n                    >\n                        <RoundText color={colors.white} text={t('callUs')}>\n                            <PhoneSvgAnimated color={colors.white} />\n                        </RoundText>\n                    </PhoneLinkStyled>\n                </MobileMenu>\n                <BottomIcons>\n                    <IconWrapper>\n                        <a\n                            href=\"viber://chat?number=%2B380982117690\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobileZa99ViberIcon`, {})\n                                sendConversion('SocialIconViber')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconViber',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <ViberIconStyled aria-label=\"ViberButton\" />\n                        </a>\n                        <a\n                            href=\"https://wa.me/+380958363420\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobileZa99WhatsAppIcon`, {})\n                                sendConversion('SocialIconWhatsApp')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconWhatsApp',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <WhatsappIconStyled aria-label=\"Whatsapp Button\" />\n                        </a>\n                        <a\n                            href=\"tg://resolve?domain=ClearLine_bot\"\n                            target=\"blank\"\n                        >\n                            <TelegramIconStyled\n                                aria-label=\"Telegram Button\"\n                                onClick={() => {\n                                    sendForm(\n                                        `PosadkaMobileZa99TelegramIcon`,\n                                        {}\n                                    )\n                                    sendConversion('SocialIconTelegram')\n                                    sendEvent('SocialIcon', {\n                                        eventCategory: 'SocialIconTelegram',\n                                        placement: 'PosadkaMobile',\n                                    })\n                                }}\n                            />\n                        </a>\n                    </IconWrapper>\n                </BottomIcons>\n                <PromoHeroMobile99 />\n                <div id=\"projectStructure1\" />\n                <ProjectStructureQuestion data={data} />\n                <RunningLine inverse>{t('designProject99')}</RunningLine>\n                <Reviews arrows bottom />\n                <ProjectStructureWhy />\n                <FormColumn>\n                    <FormTitle text>\n                        {t('ComercialProposalFormTitle')}\n                    </FormTitle>\n\n                    <DivS>\n                        <h3>\n                            <ProposalS /> {t('comercialForm.proposal')}\n                        </h3>\n                        <h3>\n                            <PensileS />\n                            {t('comercialForm.example')}\n                        </h3>\n                        <h3>\n                            <HandshakeS /> {t('comercialForm.conditions')}\n                        </h3>\n                    </DivS>\n\n                    <ComercialForm placement=\"PosadkaMobileZa99\" />\n                </FormColumn>\n            </Wrap>\n\n            <Desktop id=\"blockF\" onScroll={onScroll}>\n                <Header />\n                <WrapDesktop>\n                    <PromoHeroNew imagesData={data} />\n                    <RunningLine inverse>{t('designProject99')}</RunningLine>\n                    <ProjectStructureQuestionDesktop data={data} />\n                    {/* \n                    <Connection text={t('connection.text')}>\n                        <ButtonWithModal\n                            modalTitle={t('connection.modalTitle')}\n                            modalDescription={t('connection.modalDescription')}\n                            buttonLabel={t('connection.buttonLabel')}\n                            placeholder={t('connection.placeholder')}\n                            submitLabel={t('connection.submitLabel')}\n                            tracking={{\n                                conversionType: 'CallbackFromPosadka',\n                                eventCategory: 'CallbackFromPosadka',\n                            }}\n                        />\n                    </Connection> */}\n\n                    <Reviews />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                    <ProjectStructureWhy />\n                    <CommercialProposalFormBlock placement=\"PosadkaZa99\" />\n                </WrapDesktop>\n            </Desktop>\n        </div>\n    )\n}\n\nexport default Posadka\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n        allProjectStructureQuestionYaml {\n            edges {\n                node {\n                    title\n                    price\n                    image\n                    promo\n                    items {\n                        question\n                        answer\n                        svg\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}