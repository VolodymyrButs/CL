{"version":3,"sources":["webpack:///./src/blocks/Heros/PromoHero3d.tsx","webpack:///./src/blocks/ComercialProposalForm3d.tsx","webpack:///./src/blocks/advantages3dQuestion.tsx","webpack:///./src/blocks/advantages3dWhy.tsx"],"names":["PromoHeroWraper","styled","div","backgroundColors","promotion","headerHeight","mobile","colors","dark","headerBg","displayWidth","tablet","desktop","PromoHeroColumn","ContainerStyled","Container","indent","LampIconStyled","LampIcon","TitleWrapper","TitleStyled","TitleH1","Price","span","accentText","DesktopImageRight","sofaDesktopRight","DesktopImageLeft","Img","InputBlock","FormTitle","PromoHero3d","imagesData","t","useTranslation","data","useStaticQuery","promoHeroData","getDataByLanguage","allPromoHeroYaml","i18n","language","imageSofa","getImageByImageName","allImageSharp","image","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","buttonText","onFormSubmit","onFormSendStart","conversionType","eventCategory","register","errors","ref","minLength","required","err","phone","email","message","fluid","FormWrapper","formPromo","mobileAfterBorder","text","svgStyle","css","CubeS","Cube","PensileS","Pensile","ProposalS","Proposal","FormColumn","DivS","CommercialProposalFormBlock3d","placement","ProjectStructureWrapper","project","IconListStyled","IconListQuestion","HeroColumn","LeftSidebar","RightSidebar","white","p","Title","heroColumnTablet","Advantages3dQuestion","id","items","allAdvantages3DposadkaYaml","fill","Advantages3dQuestionDesktop","IconListWhy","heroColumnDesktop","Advantages3dWhy","projectStructureData","allAdvantages3DposadkaWhyYaml","title","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"0564a58cc8f3971f958662f76d1809b51cfca541-726de622785d27b4238c.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { headerBg } from 'styles/headerBg'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport LampIcon from 'assets/icons/Lamp.svg'\nimport sofaDesktopRight from 'assets/images/sofaDesktopRight.svg'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { TitleH1 } from 'components/TitleComponent'\nimport { useTranslation } from 'react-i18next'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { Form, IChildrenProps } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { imagesDataProp } from 'pages/promo'\n\nconst PromoHeroWraper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    height: calc(100vh - ${headerHeight.mobile} - 50px);\n    min-height: 503px;\n    border-bottom: 1px solid ${colors.dark};\n    :before {\n        ${headerBg}\n    }\n\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 605px;\n        border-bottom: nonne;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        height: 630px;\n    }\n`\n\nconst PromoHeroColumn = styled.div`\n    display: none;\n    :first-child {\n        display: flex;\n    }\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    flex-grow: 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        position: relative;\n        border-left: none;\n        justify-content: center;\n\n        box-sizing: border-box;\n        :nth-child(3n) {\n            border-right: none;\n        }\n    }\n    div {\n        min-width: 100px;\n        form {\n            @media (min-width: ${displayWidth.tablet}) {\n                max-width: calc((100vw - 160px) / 3.4);\n            }\n            @media (min-width: ${displayWidth.desktop}) {\n                min-width: 350px;\n            }\n            button {\n                margin: 50px auto;\n            }\n            textarea {\n                max-height: 60px;\n            }\n        }\n    }\n    :first-child {\n        justify-content: flex-start;\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n    }\n`\n\nconst LampIconStyled = styled(LampIcon)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        width: 190px;\n        right: 10px;\n        bottom: -55px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 265px;\n        bottom: 30px;\n    }\n`\nconst TitleWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 560px;\n        position: absolute;\n        top: 40px;\n        left: 0px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 700px;\n    }\n`\nconst TitleStyled = styled(TitleH1)`\n    font-size: 50px;\n    line-height: 55px;\n    letter-spacing: 0.666667px;\n    overflow: visible;\n    text-align: center;\n    color: #296963;\n    @media (max-width: 355px) {\n        font-size: 40px;\n        line-height: 45px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        box-sizing: border-box;\n        padding-left: 0px;\n        font-size: 46px;\n        line-height: 56px;\n        letter-spacing: 0.8px;\n        text-align: left;\n        margin-top: 10px;\n        margin-bottom: 10px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 50px;\n        line-height: 64px;\n        padding-left: 0px;\n    }\n`\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 40px;\n    line-height: 40px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    width: 100%;\n    text-align: left;\n    padding-left: 48px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 66px;\n        line-height: 60px;\n        letter-spacing: 1.52778px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 46px;\n        font-size: 90px;\n        line-height: 70px;\n        margin-left: 31px;\n    }\n`\n\nconst DesktopImageRight = styled(sofaDesktopRight)`\n    display: none;\n    width: 75%;\n    fill: ${backgroundColors.promotion};\n    stroke: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: -1px;\n        bottom: 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 55px;\n    }\n`\nconst DesktopImageLeft = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    width: 78%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: 11%;\n        bottom: -150px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: -136px;\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 0 auto;\n        width: 80%;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 40px;\n    line-height: 48px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 50px 0 10px;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 50px;\n        line-height: 58px;\n        margin: 50px 0 10px;\n    }\n`\nexport const PromoHero3d = ({ imagesData }: { imagesData: imagesDataProp }) => {\n    const { t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allPromoHeroYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        buttonText\n                        image\n                        imageMobile\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const promoHeroData = getDataByLanguage(\n        data.allPromoHeroYaml,\n        i18n.language\n    )\n\n    const imageSofa = getImageByImageName(\n        imagesData.allImageSharp,\n        promoHeroData.image\n    )\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n    return (\n        <PromoHeroWraper>\n            <ContainerStyled columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                <PromoHeroColumn>\n                    <FormTitle>{t('writeToUs')}</FormTitle>\n                    <Form\n                        buttonText={t('send')}\n                        onFormSubmit={handleSubmitStatus}\n                        formSendStatus={formSendStatus}\n                        onFormSendStart={handleFormSendStart}\n                        conversionType={'TopFormDesktopPosadka3d'}\n                        eventCategory={'TopFormDesktopPosadka3d'}\n                    >\n                        {({ register, errors }: IChildrenProps) => (\n                            <InputBlock>\n                                <PhoneInput\n                                    ref={register({\n                                        minLength: 18,\n                                        required: true,\n                                    })}\n                                    err={errors.phone}\n                                />\n\n                                <EmailInput ref={register} err={errors.email} />\n                                <MessageInput\n                                    ref={register}\n                                    err={errors.message}\n                                />\n                            </InputBlock>\n                        )}\n                    </Form>\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <TitleWrapper>\n                        <TitleStyled>{t('3dDesignFlat')}</TitleStyled>\n                        <Price>\n                            $4 {t('for')} {t('m')}\n                            <sup>2</sup>\n                        </Price>\n                    </TitleWrapper>\n                    <DesktopImageLeft fluid={imageSofa.fluid} />\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <DesktopImageRight />\n                    <LampIconStyled />\n                </PromoHeroColumn>\n            </ContainerStyled>\n        </PromoHeroWraper>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport Proposal from 'assets/icons/proposal.svg'\nimport Pensile from 'assets/icons/pensile.svg'\nimport Cube from 'assets/icons/cube.svg'\nimport { ComercialForm } from 'components/form/CommercialForm'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    border-bottom: 1px solid ${colors.dark};\n`\n\nconst FormTitle = styled.div<{ text?: boolean }>`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n\n    line-height: 32px;\n    letter-spacing: 1px;\n    ${({ text }) =>\n        text === true\n            ? `color:${colors.dark};font-size: 24px;`\n            : `color: #437b13;font-size: 32px;`}\n\n    text-align: center;\n    margin: 40px 0 24px;\n    white-space: pre-wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 60px 0 24px;\n        width: 350px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\nconst svgStyle = css`\n    width: 20px;\n    height: 20px;\n    min-width: 20px;\n    margin-right: 10px;\n`\nconst CubeS = styled(Cube)`\n    ${svgStyle}\n`\nconst PensileS = styled(Pensile)`\n    ${svgStyle}\n`\nconst ProposalS = styled(Proposal)`\n    ${svgStyle}\n`\nconst FormColumn = styled.div`\n    width: 100%;\n    padding: 0 32px;\n    box-sizing: border-box;\n    h3 {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        line-height: 24px;\n        margin: 10px 0;\n    }\n`\nconst DivS = styled.div`\n    margin-bottom: 30px;\n`\n\nexport const CommercialProposalFormBlock3d = ({\n    text,\n    placement,\n}: {\n    text?: boolean\n    placement?: string\n}) => {\n    const { t } = useTranslation()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero image />\n                <FormColumn>\n                    <FormTitle text={text}>\n                        {text\n                            ? t('ComercialProposalTitle')\n                            : t('ComercialProposalFormTitle')}\n                    </FormTitle>\n                    {!text && (\n                        <DivS>\n                            <h3>\n                                <ProposalS /> {t('comercialForm.proposal')}\n                            </h3>\n                            <h3>\n                                <PensileS />\n                                {t('comercialForm.example3d')}\n                            </h3>\n\n                            <h3>\n                                <CubeS />\n                                {t('comercialForm.3d')}\n                            </h3>\n                        </DivS>\n                    )}\n                    <ComercialForm placement={placement} />\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconListQuestion } from 'components/IconListQuestion'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\n\nimport { indent } from 'styles/indent'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.project};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconListQuestion)`\n    background-color: ${backgroundColors.project};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        justify-content: center;\n        border-right: none;\n        align-items: center;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.project};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst Price = styled.p`\n    color: ${colors.accentText};\n    font-size: 40px;\n    margin: 10px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 50px;\n        display: inline-block;\n    }\n`\n\nconst TitleStyled = styled(Title)`\n    font-size: 40px;\n    line-height: 45px;\n    margin: 35px 20px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: 1000px;\n        font-size: 50px;\n    }\n`\n\nexport const Advantages3dQuestion = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allAdvantages3DposadkaYaml,\n        i18n.language\n    )\n    const { items } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        {t('3dDesignFlat')}\n                        <Price>\n                            $4 {t('for')} <span>{t('m')}</span>\n                            <sup>2</sup>\n                        </Price>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n\nexport const Advantages3dQuestionDesktop = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allAdvantages3DposadkaYaml,\n        i18n.language\n    )\n    const { items } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        {t('3dDesignFlat')} -\n                        <Price>\n                            $4 {t('for')} {t('m')}\n                            <sup>2</sup>\n                        </Price>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconListWhy } from 'components/IconListWhy'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\n\nimport { indent } from 'styles/indent'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: #fff;\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconListWhy)`\n    border-bottom: 1px solid ${colors.dark};\n    padding: 16px;\n    background-color: #fff;\n    > div {\n        padding: 16px;\n        background-color: #fff;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        border-bottom: none;\n        border-right: none;\n        align-items: center;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: #fff;\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst TitleStyled = styled(Title)`\n    font-size: 26px;\n    margin: 35px 20px;\n    strong {\n        color: ${colors.accentText};\n        font-size: 28px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n        font-size: 44px;\n        max-width: 1000px;\n        strong {\n            font-size: 44px;\n        }\n    }\n`\n\nexport const Advantages3dWhy = ({ id }: { id?: string }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allAdvantages3DposadkaWhyYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        image\n                        items {\n                            question\n                            answer\n                            answerDesctop\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const projectStructureData = getDataByLanguage(\n        data.allAdvantages3DposadkaWhyYaml,\n        i18n.language\n    )\n\n    const { items, title } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr'}>\n                <HeroColumn>\n                    <TitleStyled\n                        dangerouslySetInnerHTML={{\n                            __html: title,\n                        }}\n                    />\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.formPromo}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n"],"sourceRoot":""}