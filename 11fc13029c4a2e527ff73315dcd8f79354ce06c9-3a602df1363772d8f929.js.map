{"version":3,"sources":["webpack:///./src/blocks/DefaultFormBlock.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/components/StarRating.tsx","webpack:///./src/blocks/Reviews.tsx","webpack:///./src/utils/getRandomArray.tsx","webpack:///./src/blocks/AdvantagesService.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/components/IconList.tsx","webpack:///./src/assets/images/sofaDesktopRight.svg","webpack:///./src/components/SliderComponent.tsx","webpack:///./src/components/RunningLine.tsx"],"names":["FormWrapper","styled","div","backgroundColors","formPromo","mobileAfterBorder","displayWidth","tablet","colors","dark","InputBlock","desktop","FormTitle","FormColumn","$size","css","Wrap","span","DefaultFormBlock","withPhoneMobile","tracking","children","textTitle","t","useTranslation","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","Boolean","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","email","languagesList","Object","keys","languages","HelmetFunc","data","i18n","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","Wrapper","StarRating","rating","quantity","arr","Array","from","_","i","viewBox","width","height","fill","className","d","percent","Math","round","id","url","x1","y1","x2","y2","offset","stopColor","ReviewsWrapper","contact","RankTextWrapper","Rank","p","accentText","RankStarWrapper","GoogleIcon","Google","TextWrapper","Text","SubTitle","a","BottomText","TitleStyled","Title","SliderStyled","SliderComponent","Review","HeroColumn","indent","heroColumnTablet","heroColumnDesktop","SlideWrapper","Reviews","arrows","useStaticQuery","commonData","allReviewsYaml","edges","find","elem","node","parent","reviewsQuantity","link","reviewsArr","reviewsYaml","getDataByLanguage","ourRank","quantity1","quantity2","sliderSettings","dots","infinite","speed","nextArrow","bottom","prevArrow","RandomList","randLength","min","max","randArray","rand","floor","random","includes","push","createRand","length","Container","target","onClick","sendEvent","eventCategory","background","author","dangerouslySetInnerHTML","__html","text","location","VisualizationAdvantagesWrapper","services","IconListStyled","IconList","Image","Img","LeftSidebar","RightSidebar","white","TitleS","AdvantagesServices","imagesData","imgNot","advantagesServiceData","allAdvantagesServiceYaml","items","titleColor","imageFluid","getImageByImageName","allImageSharp","fluid","TitleStyledMobile","TitleStyledDesktop","Price","h3","PhoneLinkStyled","PhoneLink","DefaultFormHero","image","formYaml","allFormYaml","titleMobile","titleDesktop","price","contactInformation","primaryPhone","placement","loading","IconListWrapper","props","IconItem","IconStyled","Icon","restProps","item","index","svg","iconName","React","SofaDesktopRight","createElement","defaultProps","module","exports","default","CarouselWrapper","forwardRef","settings","run","keyframes","run2","RunningTextContainer","$inverse","Text2","RunningLine","inverse","runningLineContent","repeat"],"mappings":"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","file":"11fc13029c4a2e527ff73315dcd8f79354ce06c9-3a602df1363772d8f929.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: calc(100% - 150px);\n        margin-right: 150px;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst FormColumn = styled.div<{ $size: boolean }>`\n    width: 100%;\n    padding: ${({ $size }) => ($size === true ? '0' : '0 32px')};\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    box-sizing: border-box;\n    ${({ $size }) =>\n        $size === true\n            ? css`\n                  span {\n                      box-sizing: border-box;\n                      padding: 0 32px;\n                      width: 100%;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                      }\n                      div {\n                          @media (min-width: ${displayWidth.tablet}) {\n                              min-width: 200px;\n                          }\n                          form {\n                              div {\n                                  @media (min-width: ${displayWidth.tablet}) {\n                                      margin-right: 0px;\n                                      width: calc(100% - 50px);\n                                  }\n                              }\n                          }\n                      }\n                      span {\n                          padding: 0;\n                      }\n                  }\n                  > div {\n                      border-top: 1px solid #000;\n                      width: 100%;\n                      flex-shrink: 0;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                          border-top: none;\n                      }\n                  }\n              `\n            : ''}\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n    }\n`\nconst Wrap = styled.span`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const DefaultFormBlock = ({\n    withPhoneMobile,\n    tracking,\n    children = null,\n    textTitle,\n}: {\n    withPhoneMobile?: boolean\n    tracking: FormTracking\n    children?: React.ReactNode\n    textTitle?: boolean\n}) => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero withPhoneMobile={withPhoneMobile} />\n                <FormColumn $size={Boolean(children)}>\n                    <Wrap>\n                        <FormTitle>\n                            {textTitle\n                                ? t('designQuestion')\n                                : t('defaultFormTitle')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n                                    <MessageInput\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </Wrap>\n                    {children}\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    svg {\n        padding: 0 6px;\n    }\n`\n\ninterface IStarRatingProps {\n    rating: number\n    quantity: number\n}\n\nexport const StarRating: React.FC<IStarRatingProps> = ({\n    rating,\n    quantity,\n}) => {\n    const arr = Array.from(Array(quantity), (_, i) => i + 1)\n    return (\n        <Wrapper>\n            {arr.map((i) => {\n                if (i <= rating) {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"#E24C1A\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else if (i > rating && i - rating < 1) {\n                    const ratio = Math.round((1 - (i - rating)) * 100)\n                    const percent = `${ratio}%`\n                    const id = `widgetGrad${i}`\n                    const url = `url(#${id})`\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <defs>\n                                <linearGradient\n                                    id={id}\n                                    x1=\"0%\"\n                                    y1=\"0%\"\n                                    x2=\"100%\"\n                                    y2=\"0%\"\n                                >\n                                    <stop\n                                        offset=\"0%\"\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                    <stop\n                                        offset=\"100%\"\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                </linearGradient>\n                            </defs>\n                            <path\n                                fill={url}\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"rgb(203, 211, 227)\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                }\n            })}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { StarRating } from 'components/StarRating'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport Google from 'assets/icons/google.svg'\nimport { createRand } from 'utils/getRandomArray'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ReviewsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\nconst RankTextWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    color: ${colors.dark};\n    span {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 24px;\n        line-height: 33px;\n        align-self: flex-end;\n        @media (min-width: ${displayWidth.tablet}) {\n            font-size: 20px;\n            line-height: 24px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            font-size: 24px;\n            line-height: 33px;\n        }\n    }\n`\nconst Rank = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 32px;\n    line-height: 38px;\n    margin-left: 5px;\n    color: ${colors.accentText};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 24px;\n        line-height: 28px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 32px;\n        line-height: 38px;\n    }\n`\nconst RankStarWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 14px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 14px 0;\n    }\n`\nconst GoogleIcon = styled(Google)`\n    margin-right: 18px;\n`\nconst TextWrapper = styled.div`\n    display: flex;\n    overflow: hidden;\n`\nconst Text = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    p {\n        padding-top: 10px;\n        text-align: center;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\n\nconst SubTitle = styled.a`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    text-decoration: underline;\n    text-underline-position: under;\n    color: ${colors.dark};\n    margin-bottom: 20px;\n`\nconst BottomText = styled.div`\n    font-style: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    text-align: center;\n    font-weight: bold;\n    margin: 25px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 25px 0 0px;\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n    }\n`\nconst SliderStyled = styled(SliderComponent)`\n    background-color: ${backgroundColors.contact};\n`\nconst Review = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 8px;\n    box-sizing: border-box;\n    border: 1px solid ${colors.dark};\n    border-radius: 40px;\n    height: 430px;\n    @media (min-width: 500px) {\n        height: 330px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 330px;\n        padding: 30px;\n        align-items: flex-start;\n        margin: 40px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 10px 50px;\n        height: 280px;\n    }\n    :focus {\n        outline: none;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0 10px 56px ${indent.heroColumnTablet};\n        align-items: flex-start;\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 10px 26px ${indent.heroColumnDesktop};\n    }\n`\n\nconst SlideWrapper = styled.div``\n\nexport const Reviews = ({ arrows }: { arrows?: boolean; bottom?: boolean }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allReviewsYaml {\n                edges {\n                    node {\n                        title\n                        ourRank\n                        rating\n                        quantity1\n                        quantity2\n                        link\n                        reviewsQuantity\n                        reviewsArr {\n                            text\n                            name\n                            location\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const commonData = data.allReviewsYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'reviews'\n        }\n    ).node\n    const { rating, reviewsQuantity, link, reviewsArr } = commonData\n    const reviewsYaml = getDataByLanguage(data.allReviewsYaml, i18n.language)\n    const { title, ourRank, quantity1, quantity2 } = reviewsYaml\n    const arr = arrows ? true : false\n    const sliderSettings = {\n        dots: true,\n        infinite: true,\n        speed: 100,\n        arrows: arr,\n        nextArrow: <SlickNext bottom />,\n        prevArrow: <SlickPrevious bottom />,\n    }\n\n    const RandomList = createRand(5, 0, reviewsArr.length - 1)\n    return (\n        <ReviewsWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled> {title}</TitleStyled>\n                    <RankTextWrapper>\n                        <span>{ourRank}: </span>\n                        <Rank>{rating}</Rank>\n                        <span>/5</span>\n                    </RankTextWrapper>\n                    <RankStarWrapper>\n                        <GoogleIcon />\n                        <StarRating rating={rating} quantity={5} />\n                    </RankStarWrapper>\n                    <SubTitle\n                        href={link}\n                        target=\"blank\"\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'GoogleRewiews',\n                            })\n                        }}\n                    >\n                        {quantity1}&nbsp;\n                        {reviewsQuantity}&nbsp;\n                        {quantity2}\n                    </SubTitle>\n                </HeroColumn>\n                <SliderStyled\n                    {...sliderSettings}\n                    background={backgroundColors.contact}\n                >\n                    {RandomList.map((i) => {\n                        return (\n                            <SlideWrapper\n                                key={i}\n                                onClick={() => {\n                                    sendEvent('Click', {\n                                        eventCategory: 'ReviewItem',\n                                        author: reviewsArr[i].name,\n                                    })\n                                }}\n                            >\n                                <Review>\n                                    <p />\n                                    <TextWrapper>\n                                        <Text\n                                            dangerouslySetInnerHTML={{\n                                                __html: reviewsArr[i].text,\n                                            }}\n                                        />\n                                    </TextWrapper>\n                                    <BottomText>\n                                        {reviewsArr[i].name},&nbsp;\n                                        {reviewsArr[i].location}\n                                    </BottomText>\n                                </Review>\n                            </SlideWrapper>\n                        )\n                    })}\n                </SliderStyled>\n            </Container>\n        </ReviewsWrapper>\n    )\n}\n","export const createRand = (\n    randLength: number,\n    min: number,\n    max: number\n): number[] => {\n    let randArray: number[] = []\n    let i = 0\n    if (randLength > max - min + 1) {\n        return []\n    }\n    while (i < randLength) {\n        let rand = Math.floor(Math.random() * (max - min + 1)) + min\n        if (!randArray.includes(rand)) {\n            i++\n            randArray.push(rand)\n        }\n    }\n    return randArray\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconList } from 'components/IconList'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { imagesDataProp } from 'pages/promo'\n\nconst VisualizationAdvantagesWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.services};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconList)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    width: 90%;\n    height: auto;\n    color: transparent;\n    align-self: flex-end;\n    @media (min-width: ${displayWidth.desktop}) {\n        color: ${backgroundColors.services};\n    }\n`\nconst HeroColumn = styled.div<{ imgNot?: boolean }>`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.services};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nconst TitleS = styled(Title)`\n    margin: 30px 20px;\n    text-align: center;\n    font-size: 32px;\n    line-height: 45px;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 30px 0 30px 30px;\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nexport const AdvantagesServices = ({\n    imagesData,\n    imgNot,\n}: {\n    imagesData: imagesDataProp\n    imgNot?: boolean\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allAdvantagesServiceYaml {\n                edges {\n                    node {\n                        title\n                        titleColor\n                        items {\n                            content\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const advantagesServiceData = getDataByLanguage(\n        data.allAdvantagesServiceYaml,\n        i18n.language\n    )\n    const { title, items, titleColor } = advantagesServiceData\n    const imageFluid = getImageByImageName(\n        imagesData.allImageSharp,\n        'collage.webp'\n    )\n    return (\n        <VisualizationAdvantagesWrapper>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn imgNot>\n                    <TitleS>{imgNot ? titleColor : title}</TitleS>\n\n                    {!imgNot && <Image fluid={imageFluid.fluid} />}\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.services}\n                />\n            </Container>\n            <RightSidebar />\n        </VisualizationAdvantagesWrapper>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { Icon } from 'components/Icon'\nimport { displayWidth } from 'styles/width'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: ${(props) => props.background};\n    display: flex;\n    flex-wrap: wrap;\n    padding: 40px 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 48px;\n    }\n`\nconst IconItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n`\nconst Text = styled.div`\n    margin-top: 15px;\n    p {\n        text-align: center;\n\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\n\ninterface IIconStyledProps {\n    fill: string\n}\nconst IconStyled = styled(Icon)<IIconStyledProps>`\n    .iconCircle {\n        fill: ${(props) => props.fill};\n    }\n`\ninterface IItem {\n    content: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconList: React.FC<IIconListProps> = ({\n    items = [],\n    fill = colors.dark,\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        {item.svg && (\n                            <IconStyled iconName={item.svg} fill={fill} />\n                        )}\n                        <Text\n                            dangerouslySetInnerHTML={{\n                                __html: item.content,\n                            }}\n                        />\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n","var React = require('react');\n\nfunction SofaDesktopRight (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M240.772 52.1219L300.77 57.9686C302.983 58.1702 304.61 60.0519 304.61 62.3368V192.913C304.61 195.332 302.722 197.348 300.315 197.348H270.901C268.884 197.348 267.192 195.937 266.737 193.921L236.217 57.5654C235.566 54.6085 237.909 51.8531 240.772 52.1219Z\",\"strokeMiterlimit\":\"10\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M275.392 118.384V66.2346C275.392 64.2857 274.025 62.6056 272.138 62.2696L233.875 58.3718L220.469 109.379L275.392 118.384Z\",\"strokeMiterlimit\":\"10\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M0.325439 110.185V19.0578C0.325439 10.9262 1.50605 3.57068 13.1728 2.99626C15.1994 2.89648 17.3097 2.86185 18.546 2.99625C94.2267 9.78378 164.962 9.85098 230.621 3.06346C232.899 2.79465 235.176 2.99626 237.389 3.60108C244.286 5.61718 249.232 11.7999 249.232 19.0578V93.183V117.242L0.325439 110.185Z\",\"strokeLinejoin\":\"round\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M241.098 197.886L240.122 231.017C240.057 232.227 239.146 233.235 237.909 233.235H232.378C231.272 233.235 230.296 232.361 230.166 231.151L227.172 198.02\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M199.451 198.087L199.32 201.716C199.255 202.926 198.344 203.934 197.108 203.934H191.577C190.47 203.934 189.494 203.06 189.364 201.851L189.039 198.087\",\"strokeLinejoin\":\"round\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M0.325439 197.886H266.542C271.552 197.886 275.587 193.719 275.587 188.544V163.545C275.587 158.37 271.552 154.204 266.542 154.204H0.325439V197.886Z\",\"strokeLinejoin\":\"round\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M250.924 112.941C250.924 112.941 227.172 115.83 218.127 110.857C209.081 105.884 203.876 94.863 209.212 84.5137C214.548 74.1644 224.179 75.3741 230.491 75.5085C236.803 75.6429 250.143 74.7021 255.154 75.9117\",\"strokeMiterlimit\":\"10\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M251.77 113.21C261.833 113.21 269.991 104.785 269.991 94.3926C269.991 84.0003 261.833 75.5757 251.77 75.5757C241.707 75.5757 233.549 84.0003 233.549 94.3926C233.549 104.785 241.707 113.21 251.77 113.21Z\",\"strokeLinejoin\":\"round\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M0.325439 154.002H266.542C271.552 154.002 275.587 149.835 275.587 144.661V119.661C275.587 114.486 271.552 110.32 266.542 110.32H0.325439V154.002Z\",\"strokeLinejoin\":\"round\",\"key\":8})]);\n}\n\nSofaDesktopRight.defaultProps = {\"width\":\"305\",\"height\":\"234\",\"viewBox\":\"0 0 305 234\",\"fill\":\"none\",\"stroke\":\"none\"};\n\nmodule.exports = SofaDesktopRight;\n\nSofaDesktopRight.default = SofaDesktopRight;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { displayWidth } from 'styles/width'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst CarouselWrapper = styled.div`\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    height: auto;\n    padding: 16px 32px 26px;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        height: auto;\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: calc((${displayWidth.desktop} - 160px) * 0.6666);\n        max-height: 600px;\n    }\n    .slick-list {\n        margin: 0 -16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -30px;\n        }\n    }\n    img {\n        cursor: grab;\n    }\n    .slick-slide > div {\n        margin: 0 16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 30px;\n        }\n    }\n    .slick-dots {\n        bottom: -22px;\n        left: 0;\n\n        @media (min-width: ${displayWidth.tablet}) {\n            bottom: 5px;\n        }\n        li {\n            width: 10px;\n            button {\n                width: 10px;\n                ::before {\n                    width: 10px;\n                }\n            }\n        }\n    }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SliderComponent = ({ children, forwardRef, ...props }: any) => {\n    const settings = {\n        nextArrow: <SlickNext />,\n        prevArrow: <SlickPrevious />,\n    }\n    return (\n        <CarouselWrapper {...props}>\n            <Slider {...settings} {...props} ref={forwardRef}>\n                {children}\n            </Slider>\n        </CarouselWrapper>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}