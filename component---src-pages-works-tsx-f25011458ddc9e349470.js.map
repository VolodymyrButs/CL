{"version":3,"sources":["webpack:///./src/blocks/DefaultFormBlock.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/components/StarRating.tsx","webpack:///./src/blocks/Reviews.tsx","webpack:///./src/utils/getRandomArray.tsx","webpack:///./src/blocks/Works/WorksHero.tsx","webpack:///./src/blocks/Works/WorksProjectGrid.tsx","webpack:///./src/pages/works.tsx","webpack:///./src/blocks/Works/WorksProjectItem.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/components/SliderComponent.tsx","webpack:///./src/styles/headerBg.ts"],"names":["FormWrapper","styled","div","backgroundColors","formPromo","mobileAfterBorder","displayWidth","tablet","colors","dark","InputBlock","desktop","FormTitle","FormColumn","$size","css","Wrap","span","DefaultFormBlock","withPhoneMobile","tracking","children","textTitle","t","useTranslation","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","Boolean","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","email","languagesList","Object","keys","languages","HelmetFunc","data","i18n","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","Wrapper","StarRating","rating","quantity","arr","Array","from","_","i","viewBox","width","height","fill","className","d","percent","Math","round","id","url","x1","y1","x2","y2","offset","stopColor","ReviewsWrapper","contact","RankTextWrapper","Rank","p","accentText","RankStarWrapper","GoogleIcon","Google","TextWrapper","Text","SubTitle","a","BottomText","TitleStyled","Title","SliderStyled","SliderComponent","Review","HeroColumn","indent","heroColumnTablet","heroColumnDesktop","SlideWrapper","Reviews","arrows","useStaticQuery","commonData","allReviewsYaml","edges","find","elem","node","parent","reviewsQuantity","link","reviewsArr","reviewsYaml","getDataByLanguage","ourRank","quantity1","quantity2","sliderSettings","dots","infinite","speed","nextArrow","bottom","prevArrow","RandomList","randLength","min","max","randArray","rand","floor","random","includes","push","createRand","length","Container","target","onClick","sendEvent","eventCategory","background","author","dangerouslySetInnerHTML","__html","text","location","WorksHeroWrapper","project","headerBg","LeftSidebar","RightSidebar","white","h1","darkText","ProjectColumn","WorksHero","firstWork","allProjectsYaml","secondWork","allWorksYaml","subtitle","WorksProjectItem","image","previewImage","portrait","WorksGridWrapper","Ul","ul","Li","li","Div","ButtonContainer","ButtonWrapper","ButtonStyled","Button","WorksProjectGrid","useState","visibleProjects","setVisibleProjects","orientationPosition","index","arrLength","allProjectGrid","slice","item","landscape","placement","pageMetadata","uk","ru","en","WorksPage","Layout","conversionType","Image","Img","HoverWrapper","LocalizedLink","ItemWrapper","LogoStyled","LogoIcon","ButtonS","Description","photo","getImageByImageName","allImageSharp","fluid","imgStyle","objectFit","alt","loading","aria-label","to","TitleStyledMobile","TitleStyledDesktop","Price","h3","PhoneLinkStyled","PhoneLink","DefaultFormHero","imageFluid","formYaml","allFormYaml","titleMobile","titleDesktop","price","contactInformation","primaryPhone","CarouselWrapper","props","settings","headerHeight","mobile"],"mappings":"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","file":"component---src-pages-works-tsx-f25011458ddc9e349470.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: calc(100% - 150px);\n        margin-right: 150px;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst FormColumn = styled.div<{ $size: boolean }>`\n    width: 100%;\n    padding: ${({ $size }) => ($size === true ? '0' : '0 32px')};\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    box-sizing: border-box;\n    ${({ $size }) =>\n        $size === true\n            ? css`\n                  span {\n                      box-sizing: border-box;\n                      padding: 0 32px;\n                      width: 100%;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                      }\n                      div {\n                          @media (min-width: ${displayWidth.tablet}) {\n                              min-width: 200px;\n                          }\n                          form {\n                              div {\n                                  @media (min-width: ${displayWidth.tablet}) {\n                                      margin-right: 0px;\n                                      width: calc(100% - 50px);\n                                  }\n                              }\n                          }\n                      }\n                      span {\n                          padding: 0;\n                      }\n                  }\n                  > div {\n                      border-top: 1px solid #000;\n                      width: 100%;\n                      flex-shrink: 0;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                          border-top: none;\n                      }\n                  }\n              `\n            : ''}\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n    }\n`\nconst Wrap = styled.span`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const DefaultFormBlock = ({\n    withPhoneMobile,\n    tracking,\n    children = null,\n    textTitle,\n}: {\n    withPhoneMobile?: boolean\n    tracking: FormTracking\n    children?: React.ReactNode\n    textTitle?: boolean\n}) => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero withPhoneMobile={withPhoneMobile} />\n                <FormColumn $size={Boolean(children)}>\n                    <Wrap>\n                        <FormTitle>\n                            {textTitle\n                                ? t('designQuestion')\n                                : t('defaultFormTitle')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n                                    <MessageInput\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </Wrap>\n                    {children}\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    svg {\n        padding: 0 6px;\n    }\n`\n\ninterface IStarRatingProps {\n    rating: number\n    quantity: number\n}\n\nexport const StarRating: React.FC<IStarRatingProps> = ({\n    rating,\n    quantity,\n}) => {\n    const arr = Array.from(Array(quantity), (_, i) => i + 1)\n    return (\n        <Wrapper>\n            {arr.map((i) => {\n                if (i <= rating) {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"#E24C1A\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else if (i > rating && i - rating < 1) {\n                    const ratio = Math.round((1 - (i - rating)) * 100)\n                    const percent = `${ratio}%`\n                    const id = `widgetGrad${i}`\n                    const url = `url(#${id})`\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <defs>\n                                <linearGradient\n                                    id={id}\n                                    x1=\"0%\"\n                                    y1=\"0%\"\n                                    x2=\"100%\"\n                                    y2=\"0%\"\n                                >\n                                    <stop\n                                        offset=\"0%\"\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                    <stop\n                                        offset=\"100%\"\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                </linearGradient>\n                            </defs>\n                            <path\n                                fill={url}\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"rgb(203, 211, 227)\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                }\n            })}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { StarRating } from 'components/StarRating'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport Google from 'assets/icons/google.svg'\nimport { createRand } from 'utils/getRandomArray'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ReviewsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\nconst RankTextWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    color: ${colors.dark};\n    span {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 24px;\n        line-height: 33px;\n        align-self: flex-end;\n        @media (min-width: ${displayWidth.tablet}) {\n            font-size: 20px;\n            line-height: 24px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            font-size: 24px;\n            line-height: 33px;\n        }\n    }\n`\nconst Rank = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 32px;\n    line-height: 38px;\n    margin-left: 5px;\n    color: ${colors.accentText};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 24px;\n        line-height: 28px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 32px;\n        line-height: 38px;\n    }\n`\nconst RankStarWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 14px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 14px 0;\n    }\n`\nconst GoogleIcon = styled(Google)`\n    margin-right: 18px;\n`\nconst TextWrapper = styled.div`\n    display: flex;\n    overflow: hidden;\n`\nconst Text = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    p {\n        padding-top: 10px;\n        text-align: center;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\n\nconst SubTitle = styled.a`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    text-decoration: underline;\n    text-underline-position: under;\n    color: ${colors.dark};\n    margin-bottom: 20px;\n`\nconst BottomText = styled.div`\n    font-style: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    text-align: center;\n    font-weight: bold;\n    margin: 25px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 25px 0 0px;\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n    }\n`\nconst SliderStyled = styled(SliderComponent)`\n    background-color: ${backgroundColors.contact};\n`\nconst Review = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 8px;\n    box-sizing: border-box;\n    border: 1px solid ${colors.dark};\n    border-radius: 40px;\n    height: 430px;\n    @media (min-width: 500px) {\n        height: 330px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 330px;\n        padding: 30px;\n        align-items: flex-start;\n        margin: 40px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 10px 50px;\n        height: 280px;\n    }\n    :focus {\n        outline: none;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0 10px 56px ${indent.heroColumnTablet};\n        align-items: flex-start;\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 10px 26px ${indent.heroColumnDesktop};\n    }\n`\n\nconst SlideWrapper = styled.div``\n\nexport const Reviews = ({ arrows }: { arrows?: boolean; bottom?: boolean }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allReviewsYaml {\n                edges {\n                    node {\n                        title\n                        ourRank\n                        rating\n                        quantity1\n                        quantity2\n                        link\n                        reviewsQuantity\n                        reviewsArr {\n                            text\n                            name\n                            location\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const commonData = data.allReviewsYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'reviews'\n        }\n    ).node\n    const { rating, reviewsQuantity, link, reviewsArr } = commonData\n    const reviewsYaml = getDataByLanguage(data.allReviewsYaml, i18n.language)\n    const { title, ourRank, quantity1, quantity2 } = reviewsYaml\n    const arr = arrows ? true : false\n    const sliderSettings = {\n        dots: true,\n        infinite: true,\n        speed: 100,\n        arrows: arr,\n        nextArrow: <SlickNext bottom />,\n        prevArrow: <SlickPrevious bottom />,\n    }\n\n    const RandomList = createRand(5, 0, reviewsArr.length - 1)\n    return (\n        <ReviewsWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled> {title}</TitleStyled>\n                    <RankTextWrapper>\n                        <span>{ourRank}: </span>\n                        <Rank>{rating}</Rank>\n                        <span>/5</span>\n                    </RankTextWrapper>\n                    <RankStarWrapper>\n                        <GoogleIcon />\n                        <StarRating rating={rating} quantity={5} />\n                    </RankStarWrapper>\n                    <SubTitle\n                        href={link}\n                        target=\"blank\"\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'GoogleRewiews',\n                            })\n                        }}\n                    >\n                        {quantity1}&nbsp;\n                        {reviewsQuantity}&nbsp;\n                        {quantity2}\n                    </SubTitle>\n                </HeroColumn>\n                <SliderStyled\n                    {...sliderSettings}\n                    background={backgroundColors.contact}\n                >\n                    {RandomList.map((i) => {\n                        return (\n                            <SlideWrapper\n                                key={i}\n                                onClick={() => {\n                                    sendEvent('Click', {\n                                        eventCategory: 'ReviewItem',\n                                        author: reviewsArr[i].name,\n                                    })\n                                }}\n                            >\n                                <Review>\n                                    <p />\n                                    <TextWrapper>\n                                        <Text\n                                            dangerouslySetInnerHTML={{\n                                                __html: reviewsArr[i].text,\n                                            }}\n                                        />\n                                    </TextWrapper>\n                                    <BottomText>\n                                        {reviewsArr[i].name},&nbsp;\n                                        {reviewsArr[i].location}\n                                    </BottomText>\n                                </Review>\n                            </SlideWrapper>\n                        )\n                    })}\n                </SliderStyled>\n            </Container>\n        </ReviewsWrapper>\n    )\n}\n","export const createRand = (\n    randLength: number,\n    min: number,\n    max: number\n): number[] => {\n    let randArray: number[] = []\n    let i = 0\n    if (randLength > max - min + 1) {\n        return []\n    }\n    while (i < randLength) {\n        let rand = Math.floor(Math.random() * (max - min + 1)) + min\n        if (!randArray.includes(rand)) {\n            i++\n            randArray.push(rand)\n        }\n    }\n    return randArray\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { displayWidth } from 'styles/width'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Container } from 'components/Container'\nimport { headerBg } from 'styles/headerBg'\nimport { WorksProjectItem } from './WorksProjectItem'\n\nconst WorksHeroWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.project};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n\n    :before {\n        ${headerBg}\n    }\n    ${mobileAfterBorder}\n`\n\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 80px;\n        background-color: ${backgroundColors.project};\n        box-sizing: border-box;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nconst SubTitle = styled.div`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 16px;\n    p {\n        margin: 10px 0;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 0;\n        margin-bottom: 32px;\n    }\n`\nconst HeroColumn = styled.div`\n    padding: 0px 16px 33px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 60px 30px 60px 48px;\n        align-items: flex-start;\n    }\n`\n\nconst Title = styled.h1`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 48px;\n    line-height: 55px;\n    text-align: center;\n    letter-spacing: 2.37176px;\n    color: ${colors.darkText};\n    margin: 35px auto 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 34px;\n        line-height: 39px;\n        letter-spacing: 1.68px;\n        margin: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 52px;\n        line-height: 60px;\n        letter-spacing: 2.68px;\n    }\n`\nconst ProjectColumn = styled.div`\n    width: 100%;\n    box-sizing: border-box;\n    background-color: ${colors.white};\n    z-index: 1;\n    outline: 1px solid ${colors.dark};\n    :hover {\n        background-color: ${backgroundColors.project};\n    }\n`\nexport const WorksHero = () => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allProjectsYaml(sort: { fields: name, order: ASC }) {\n                edges {\n                    node {\n                        name\n                        en {\n                            description\n                            name\n                        }\n                        previewImage {\n                            portrait\n                        }\n                        ru {\n                            description\n                            name\n                        }\n                        uk {\n                            description\n                            name\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n            allWorksYaml {\n                edges {\n                    node {\n                        en {\n                            subtitle\n                            title\n                        }\n                        ru {\n                            subtitle\n                            title\n                        }\n                        uk {\n                            subtitle\n                            title\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    const firstWork = data.allProjectsYaml.edges[0].node\n    const secondWork = data.allProjectsYaml.edges[1].node\n\n    const { title, subtitle } = data.allWorksYaml.edges[0].node[i18n.language]\n    return (\n        <WorksHeroWrapper>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr  1fr 1fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n                    <SubTitle\n                        dangerouslySetInnerHTML={{\n                            __html: subtitle,\n                        }}\n                    />\n                </HeroColumn>\n                <ProjectColumn>\n                    <WorksProjectItem\n                        image={firstWork.previewImage.portrait}\n                        description={firstWork[i18n.language].name}\n                        link={firstWork.parent.name}\n                    />\n                </ProjectColumn>\n                <ProjectColumn>\n                    <WorksProjectItem\n                        image={secondWork.previewImage.portrait}\n                        description={secondWork[i18n.language].name}\n                        link={secondWork.parent.name}\n                    />\n                </ProjectColumn>\n            </Container>\n            <RightSidebar />\n        </WorksHeroWrapper>\n    )\n}\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { displayWidth } from 'styles/width'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { headerBg } from 'styles/headerBg'\nimport { WorksProjectItem } from './WorksProjectItem'\nimport { Container } from 'components/Container'\nimport { Button } from 'components/Button'\nimport { sendEvent } from 'tracking'\n\nconst WorksGridWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    position: relative;\n    :before {\n        ${headerBg}\n    }\n    ${mobileAfterBorder};\n`\n\nconst Ul = styled.ul`\n    width: 100%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-auto-rows: 140vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-auto-rows: 450px;\n        max-width: calc(100% - 160px);\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        grid-auto-rows: 550px;\n        max-width: 1190px;\n    }\n`\nconst Li = styled.li`\n    outline: 1px solid ${colors.dark};\n    list-style: none;\n    background-color: white;\n    color: white;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    grid-column: span 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        :nth-child(4n + 1) {\n            grid-column: span 2;\n        }\n        :nth-child(4n + 4) {\n            grid-column: span 2;\n        }\n    }\n    :hover {\n        background-color: ${backgroundColors.project};\n    }\n`\nconst Div = styled.div`\n    border-right: 1px solid ${colors.dark};\n`\nconst ButtonContainer = styled(Container)`\n    margin-top: 1px;\n`\nconst ButtonWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: flex-start;\n    }\n`\nconst ButtonStyled = styled(Button)`\n    margin: 30px;\n    font-weight: 600;\n    background-color: ${backgroundColors.formPromo};\n    color: ${colors.dark};\n`\nexport const WorksProjectGrid = () => {\n    const { i18n, t } = useTranslation()\n    const [visibleProjects, setVisibleProjects] = useState(4)\n    const orientationPosition = (index: number, arrLength: number) => {\n        for (let i = 0; i < arrLength; i++) {\n            if (index + 1 === i * 4 + 1 || index + 1 === i * 4 + 4) {\n                return 0\n            }\n        }\n        return 1\n    }\n    const data = useStaticQuery(graphql`\n        query {\n            allProjectsYaml(sort: { fields: name, order: ASC }) {\n                edges {\n                    node {\n                        name\n                        en {\n                            description\n                            name\n                        }\n                        previewImage {\n                            landscape\n                            portrait\n                        }\n                        ru {\n                            description\n                            name\n                        }\n                        uk {\n                            description\n                            name\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    const allProjectGrid = data.allProjectsYaml.edges.slice(2)\n    return (\n        <WorksGridWrapper>\n            <Ul>\n                {allProjectGrid.slice(0, visibleProjects).map(\n                    (\n                        item: {\n                            node: {\n                                [x: string]: {\n                                    name: string\n                                    landscape: string\n                                    portrait: string\n                                }\n                            }\n                        },\n                        index: number,\n                        arr: []\n                    ) => {\n                        return (\n                            <Li key={index}>\n                                <WorksProjectItem\n                                    image={\n                                        orientationPosition(\n                                            index,\n                                            arr.length\n                                        ) === 0\n                                            ? item.node.previewImage.landscape\n                                            : item.node.previewImage.portrait\n                                    }\n                                    description={\n                                        item.node[i18n.languages[0]].name\n                                    }\n                                    link={item.node.parent.name}\n                                />\n                            </Li>\n                        )\n                    }\n                )}\n            </Ul>\n            {allProjectGrid.length > visibleProjects && (\n                <ButtonContainer columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                    <Div></Div>\n                    <ButtonWrapper>\n                        <ButtonStyled\n                            onClick={() => {\n                                setVisibleProjects(allProjectGrid.length),\n                                    sendEvent('Click', {\n                                        eventCategory: 'ShowMoreButton',\n                                        placement: 'Works',\n                                        target: 'ShowMore',\n                                    })\n                            }}\n                        >\n                            {t('showMore')}\n                        </ButtonStyled>\n                    </ButtonWrapper>\n                </ButtonContainer>\n            )}\n        </WorksGridWrapper>\n    )\n}\n","import React from 'react'\n\nimport { WorksHero } from 'blocks/Works/WorksHero'\nimport { WorksProjectGrid } from 'blocks/Works/WorksProjectGrid'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { Reviews } from 'blocks/Reviews'\n\nconst pageMetadata = {\n    uk: {\n        title: 'Роботи студії дизайну інтер`єру ClearLine',\n        description: 'Роботи за дизайном інтер`єрів студій ClearLine',\n    },\n    ru: {\n        title: 'Работы студии дизайна интерьера ClearLine',\n        description: 'Работы по дизайну интерьеров студии  ClearLine',\n    },\n    en: {\n        title: 'ClearLine interior design studio works',\n        description: 'Works on interior design of the ClearLine studio',\n    },\n}\n\nconst WorksPage = () => {\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <WorksHero />\n            <WorksProjectGrid />\n            <Reviews />\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormWorksPageBottom',\n                    eventCategory: 'FormWorksPageBottom',\n                }}\n            />\n        </Layout>\n    )\n}\n\nexport default WorksPage\n","import React from 'react'\nimport styled from 'styled-components'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { useTranslation } from 'react-i18next'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport LogoIcon from 'assets/icons/Logo.svg'\nimport { Button } from 'components/Button'\nimport { LocalizedLink } from 'i18n/LocalizedLink'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: 100%;\n`\nconst HoverWrapper = styled(LocalizedLink)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    opacity: 0.8;\n    transition: opacity 0.4s;\n    text-decoration: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        opacity: 0;\n    }\n`\nconst ItemWrapper = styled.div`\n    position: relative;\n    width: calc(100% - 60px);\n    height: calc(100% - 60px);\n    margin: 30px;\n    outline: 1px solid ${colors.dark};\n    flex: 1;\n    &:hover {\n        ${HoverWrapper} {\n            @media (min-width: ${displayWidth.tablet}) {\n                opacity: 0.8;\n            }\n        }\n    }\n`\nconst LogoStyled = styled(LogoIcon)`\n    fill: ${colors.white};\n`\nconst ButtonS = styled(Button)`\n    width: 262px;\n    background-color: transparent;\n    padding: 20px 20px;\n    border: 1px solid ${colors.white};\n    font-family: 'Open Sans', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 24px;\n    text-transform: uppercase;\n    text-align: center;\n`\nconst Description = styled.p`\n    color: ${colors.white};\n    margin: 0 16px;\n    text-align: center;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 28px;\n    letter-spacing: 0.889412px;\n`\nexport interface WorksProjectItemProp {\n    image: string\n    description: string\n    link: string\n}\n\nexport const WorksProjectItem = ({\n    image,\n    description,\n    link,\n}: WorksProjectItemProp) => {\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const { t } = useTranslation()\n    const photo = getImageByImageName(data.allImageSharp, image)\n\n    return (\n        <ItemWrapper>\n            <Image\n                fluid={photo.fluid}\n                imgStyle={{\n                    objectFit: 'containe',\n                }}\n                alt={photo.parent.name}\n                title={photo.parent.name}\n                loading=\"eager\"\n            />\n            <HoverWrapper aria-label={link} to={`works/${link}`}>\n                <LogoStyled />\n                <Description>{description}</Description>\n\n                <ButtonS>{t('showProject')}</ButtonS>\n            </HoverWrapper>\n        </ItemWrapper>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { displayWidth } from 'styles/width'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst CarouselWrapper = styled.div`\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    height: auto;\n    padding: 16px 32px 26px;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        height: auto;\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: calc((${displayWidth.desktop} - 160px) * 0.6666);\n        max-height: 600px;\n    }\n    .slick-list {\n        margin: 0 -16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -30px;\n        }\n    }\n    img {\n        cursor: grab;\n    }\n    .slick-slide > div {\n        margin: 0 16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 30px;\n        }\n    }\n    .slick-dots {\n        bottom: -22px;\n        left: 0;\n\n        @media (min-width: ${displayWidth.tablet}) {\n            bottom: 5px;\n        }\n        li {\n            width: 10px;\n            button {\n                width: 10px;\n                ::before {\n                    width: 10px;\n                }\n            }\n        }\n    }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SliderComponent = ({ children, ...props }: any) => {\n    const settings = {\n        nextArrow: <SlickNext />,\n        prevArrow: <SlickPrevious />,\n    }\n    return (\n        <CarouselWrapper {...props}>\n            <Slider {...settings} {...props}>\n                {children}\n            </Slider>\n        </CarouselWrapper>\n    )\n}\n","import { css } from 'styled-components'\nimport { headerHeight } from 'styles/height'\nimport { displayWidth } from 'styles/width'\n\nexport const headerBg = css`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    height: ${headerHeight.mobile};\n    background-color: inherit;\n    content: '';\n    @media (min-width: ${displayWidth.tablet}) {\n        height: ${headerHeight.desktop};\n    }\n`\n"],"sourceRoot":""}