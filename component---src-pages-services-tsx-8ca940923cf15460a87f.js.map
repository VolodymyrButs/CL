{"version":3,"sources":["webpack:///./src/styles/mobileAfterBorder.ts","webpack:///./src/components/form/EmailInput.tsx","webpack:///./src/components/form/MessageInput.tsx","webpack:///./src/pages/services.tsx"],"names":["mobileAfterBorder","css","indent","mobile","colors","dark","displayWidth","tablet","EmailInput","React","forwardRef","ref","err","placeholder","labelBottom","t","useTranslation","type","name","isValid","displayName","TextArea","styled","textarea","inputStyle","props","maxheight","MessageInput","maxHeight","useHasValue","inputHandler","hasValue","rows","onChange","pageMetadata","uk","title","description","ru","en","ServicesPage","data","withPhoneMobile","tracking","conversionType","eventCategory"],"mappings":"8FAAA,sFAKaA,EAAoBC,YAAH,oMAMdC,IAAOC,OACND,IAAOC,OACSC,IAAOC,KACND,IAAOC,KAGZC,IAAaC,S,oCCjB1C,mFAYaC,EAAaC,IAAMC,YAC5B,WAAoCC,GAAQ,IAAzCC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,YACTC,EAAMC,cAAND,EAER,OACI,kBAAC,IAAD,CACIE,KAAK,QACLC,KAAK,QACLJ,YAAaA,EACbD,YAAaA,GAAeE,EAAE,SAC9BJ,IAAKA,EACLQ,QAASP,OAMzBJ,EAAWY,YAAc,c,kCC7BzB,uHASMC,EAAWC,IAAOC,SAAV,6EAAGD,CAAH,uFACRE,KACA,SAACC,GAAD,OACEA,EAAMN,SACNlB,YADA,iCAOU,SAACwB,GAAD,OAAYA,EAAMC,UAAYD,EAAMC,UAAY,WAIrDC,EAAelB,IAAMC,YAC9B,WAA+CC,GAAQ,IAApDC,EAAoD,EAApDA,IAAKC,EAA+C,EAA/CA,YAAae,EAAkC,EAAlCA,UAAWd,EAAuB,EAAvBA,YACpBC,EAAMC,cAAND,EAD2C,EAEhBc,cAA3BC,EAF2C,EAE3CA,aAAcC,EAF6B,EAE7BA,SAEtB,OACI,kBAAC,IAAD,CACIjB,YAAaA,EACbiB,SAAUA,EACVlB,YAAaA,GAAeE,EAAE,YAE9B,kBAACM,EAAD,CACIK,UAAWE,EACXI,KAAM,EACNd,KAAK,UACLP,IAAKA,EACLQ,QAASP,EACTqB,SAAUH,QAO9BH,EAAaP,YAAc,gB,kCC/C3B,wGASMc,EAAe,CACjBC,GAAI,CACAC,MAAO,sCACPC,YACI,6DAERC,GAAI,CACAF,MAAO,oCACPC,YACI,6DAERE,GAAI,CACAH,MAAO,0CACPC,YACI,uEAuBGG,UAnBM,WAAM,IACfzB,EAAMC,cAAND,EAER,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAY0B,KAAMP,IAClB,kBAAC,IAAD,MACA,kBAAC,IAAD,KAAcnB,EAAE,oBAChB,kBAAC,IAAD,CACI2B,iBAAe,EACfC,SAAU,CACNC,eAAgB,yBAChBC,cAAe","file":"component---src-pages-services-tsx-8ca940923cf15460a87f.js","sourcesContent":["import { css } from 'styled-components'\nimport { displayWidth } from 'styles/width'\nimport { colors } from './colors'\nimport { indent } from './indent'\n\nexport const mobileAfterBorder = css`\n    :after {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: 2;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n`\n","import React from 'react'\n\nimport { Input } from 'components/form/Input'\nimport { useTranslation } from 'react-i18next'\nimport { TFunction } from 'i18next'\n\ninterface EmailInputProps {\n    err: string\n    placeholder?: TFunction | string\n    labelBottom?: number\n}\n\nexport const EmailInput = React.forwardRef<HTMLInputElement, EmailInputProps>(\n    ({ err, placeholder, labelBottom }, ref) => {\n        const { t } = useTranslation()\n\n        return (\n            <Input\n                type=\"email\"\n                name=\"email\"\n                labelBottom={labelBottom}\n                placeholder={placeholder || t('email')}\n                ref={ref}\n                isValid={err}\n            />\n        )\n    }\n)\n\nEmailInput.displayName = 'EmailInput'\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { IInputProps } from 'components/form/Types'\nimport { useTranslation } from 'react-i18next'\nimport { inputStyle } from 'styles/inputStyle'\nimport { Label } from 'components/form/Label'\nimport { useHasValue } from 'hooks/useHasValue'\n\nconst TextArea = styled.textarea<{ isValid?: string; maxheight?: string }>`\n    ${inputStyle}\n    ${(props) =>\n        props.isValid &&\n        css`\n            border-bottom-color: red;\n        `}\n    width: 100%;\n    resize: vertical;\n    min-height: 33px;\n    max-height: ${(props) => (props.maxheight ? props.maxheight : '150px')};\n    overflow-y: auto;\n`\n\nexport const MessageInput = React.forwardRef<HTMLTextAreaElement, IInputProps>(\n    ({ err, placeholder, maxHeight, labelBottom }, ref) => {\n        const { t } = useTranslation()\n        const { inputHandler, hasValue } = useHasValue()\n\n        return (\n            <Label\n                labelBottom={labelBottom}\n                hasValue={hasValue}\n                placeholder={placeholder || t('message')}\n            >\n                <TextArea\n                    maxheight={maxHeight}\n                    rows={1}\n                    name=\"message\"\n                    ref={ref}\n                    isValid={err}\n                    onChange={inputHandler}\n                />\n            </Label>\n        )\n    }\n)\n\nMessageInput.displayName = 'MessageInput'\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { Services } from 'blocks/Services/Services'\nimport { RunningLine } from 'components/RunningLine'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\n\nconst pageMetadata = {\n    uk: {\n        title: 'Послуги та ціни на дизайн інтер`єру',\n        description:\n            'Дизайн проект інтер`єру, 3д візуалізація, обмiр приміщень',\n    },\n    ru: {\n        title: 'Услуги и цены на дизайн интерьера',\n        description:\n            'Дизайн проект интерьера, 3д визуализация, обмер помещений',\n    },\n    en: {\n        title: 'Services and prices for interior design',\n        description:\n            'Interior design project, 3d visualization, measurement of premises',\n    },\n}\n\nconst ServicesPage = () => {\n    const { t } = useTranslation()\n\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <Services />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormServicesPageBottom',\n                    eventCategory: 'FormServicesPageBottom',\n                }}\n            />\n        </Layout>\n    )\n}\n\nexport default ServicesPage\n"],"sourceRoot":""}