{"version":3,"sources":["webpack:///./src/components/PageMetaData.tsx","webpack:///./src/blocks/ShowMoreBlock.tsx","webpack:///./src/pages/promo.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/components/RunningLine.tsx"],"names":["languagesList","Object","keys","languages","HelmetFunc","data","i18n","useTranslation","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","Wrapper","styled","div","backgroundColors","promotion","colors","dark","mobileAfterBorder","displayWidth","desktop","ContainerStyled","ButtonDesktop","Button","ButtonMobile","ImgArrow","Img","ShowMore","imagesData","advantages3DIsVisible","setAdvantages3DIsVisible","advantagesServicesIsVisible","setAdvantagesServicesIsVisible","visualizationAdvantagesIsVisible","setVisualizationAdvantagesIsVisible","t","showMoreHandle","sendEvent","eventCategory","placement","target","setTimeout","window","document","getElementById","scrollIntoView","block","behavior","imageFluid","getImageByImageName","allImageSharp","onClick","fluid","loading","pageMetadata","uk","ru","en","query","Promo","useState","Layout","noFooter","PromoHero","RunningLine","id","ProjectStructure","Reviews","inverse","DefaultFormBlock","withPhoneMobile","tracking","conversionType","SelectionOfPaints","AdvantagesService","Project3D","Advantages3D","Visualization3d","VisualizationAdvantages","HeroColumn","tablet","TitleStyledMobile","Title","TitleStyledDesktop","indent","heroColumnTablet","heroColumnDesktop","Price","p","accentText","SubTitle","h3","PhoneLinkStyled","PhoneLink","Image","DefaultFormHero","image","useStaticQuery","formYaml","getDataByLanguage","allFormYaml","titleMobile","titleDesktop","price","phone","contactInformation","primaryPhone","run","keyframes","run2","RunningTextContainer","$inverse","white","Text","Text2","children","runningLineContent","length","repeat"],"mappings":"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","file":"component---src-pages-promo-tsx-95a8181f9db7dd87fedf.js","sourcesContent":["import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { Button } from 'components/Button'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { sendEvent } from 'tracking'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { imagesDataProp } from 'pages/promo'\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    border-top: 1px solid ${colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n    @media (min-width: ${displayWidth.desktop}) {\n        border-top: none;\n    }\n`\nconst ContainerStyled = styled.div`\n    max-width: 1190px;\n    border: 1px solid ${colors.dark};\n    margin: 0px auto;\n    border-top: none;\n    border-bottom: none;\n    display: flex;\n    justify-content: center;\n`\nconst ButtonDesktop = styled(Button)`\n    display: none;\n    width: 750px;\n    margin: 30px auto;\n    background-color: white;\n    color: ${colors.dark};\n    @media (min-width: ${displayWidth.desktop}) {\n        display: flex;\n        position: relative;\n        align-items: flex-end;\n        justify-content: flex-end;\n    }\n    b {\n        text-transform: none;\n        font-size: 34px;\n        color: red;\n        font-weight: bold;\n        margin: 23px;\n        margin-right: 60px;\n    }\n    span {\n        margin: 20px 15px;\n    }\n`\nconst ButtonMobile = styled(Button)`\n    background-color: white;\n    color: ${colors.dark};\n    margin: 30px auto;\n    padding: 15px;\n    height: 82px;\n    font-weight: bold;\n    font-size: 15px;\n    @media (min-width: 350px) {\n        width: 290px;\n        padding: 15px 20px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nconst ImgArrow = styled(Img)<{ fluid: FluidObject }>`\n    position: absolute !important;\n    top: 23px;\n    left: 60px;\n    width: 30px;\n`\n\nexport const ShowMore = ({\n    imagesData,\n    advantages3DIsVisible,\n    setAdvantages3DIsVisible,\n    advantagesServicesIsVisible,\n    setAdvantagesServicesIsVisible,\n    visualizationAdvantagesIsVisible,\n    setVisualizationAdvantagesIsVisible,\n}: {\n    imagesData: imagesDataProp\n    advantages3DIsVisible: boolean\n    setAdvantages3DIsVisible: (arg: boolean) => void\n    advantagesServicesIsVisible: boolean\n    setAdvantagesServicesIsVisible: (arg: boolean) => void\n    visualizationAdvantagesIsVisible: boolean\n    setVisualizationAdvantagesIsVisible: (arg: boolean) => void\n}) => {\n    const { t } = useTranslation()\n    const showMoreHandle = () => {\n        if (\n            !advantages3DIsVisible &&\n            !advantagesServicesIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setAdvantagesServicesIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Color',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('SelectionOfPaints')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'smooth',\n                        }),\n                400\n            )\n        } else if (\n            advantagesServicesIsVisible &&\n            !advantages3DIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setAdvantages3DIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Project3d',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('Project3D')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'auto',\n                        }),\n                400\n            )\n        } else if (\n            advantagesServicesIsVisible &&\n            advantages3DIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setVisualizationAdvantagesIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Visualization3d',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('visualization3d')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'auto',\n                        }),\n                400\n            )\n        } else return\n    }\n    const imageFluid = getImageByImageName(\n        imagesData.allImageSharp,\n        'arrow_down.png'\n    )\n    return (\n        <Wrapper>\n            {!visualizationAdvantagesIsVisible && (\n                <ContainerStyled>\n                    <ButtonDesktop onClick={showMoreHandle}>\n                        <ImgArrow fluid={imageFluid.fluid} loading=\"eager\" />\n                        <span>{t('showPromo')}</span> <b>{t('CL')}</b>\n                    </ButtonDesktop>\n                    <ButtonMobile onClick={showMoreHandle}>\n                        {t('showPromoMobile')} <b>{t('CL')}</b>\n                    </ButtonMobile>\n                </ContainerStyled>\n            )}\n        </Wrapper>\n    )\n}\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { PromoHero } from 'blocks/Heros/PromoHero'\nimport { RunningLine } from 'components/RunningLine'\nimport { Advantages3D } from 'blocks/Advantages3D'\nimport { Visualization3d } from 'blocks/Visualization3d'\nimport { ProjectStructure } from 'blocks/ProjectStructure'\nimport { VisualizationAdvantages } from 'blocks/VisualizationAdvantages'\nimport { AdvantagesServices } from 'blocks/AdvantagesService'\n// import { Faq } from 'blocks/FAQ/FAQ'\nimport { Reviews } from 'blocks/Reviews'\nimport { Project3D } from 'blocks/Project3D'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { SelectionOfPaints } from 'blocks/SelectionOfPaints'\n// import { Connection } from 'blocks/Connection'\n// import { CommercialProposalFormBlock } from 'blocks/CommercialProposalFormBlock'\n// import { ButtonWithModal } from 'components/ButtonWithModal'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\nimport { FluidObject } from 'gatsby-image'\nimport { ShowMore } from 'blocks/ShowMoreBlock'\nimport { Visualization360 } from 'blocks/Vizualization360'\nimport { graphql } from 'gatsby'\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект інтер`єру квартири за $99',\n        description:\n            'Індивідуальний дизайн проект квартири за $99 включає перепланування, розміщення меблів, електрику, сантехніку, освітлення, підлоги, стелі і інше',\n    },\n    ru: {\n        title: 'Дизайн проект интерьера квартиры за $99',\n        description:\n            'Индивидуальный дизайн проект квартиры за $99 включает перепланировку, расстановку мебели, электрику, сантехнику, освещение, полы, потолки и другое',\n    },\n    en: {\n        title: 'Apartment interior design project for $99',\n        description:\n            'Individual design project of an apartment for $99 includes redevelopment, furniture placement, electrics, plumbing, lighting, floors, ceilings and more.',\n    },\n}\nexport interface imagesDataProp {\n    allImageSharp: {\n        edges: {\n            node: { childImageSharp: { fluid: FluidObject } }\n        }[]\n    }\n}\nconst Promo = ({ data }: { data: imagesDataProp }) => {\n    const [advantages3DIsVisible, setAdvantages3DIsVisible] = useState(false)\n    const [\n        advantagesServicesIsVisible,\n        setAdvantagesServicesIsVisible,\n    ] = useState(false)\n    const [\n        visualizationAdvantagesIsVisible,\n        setVisualizationAdvantagesIsVisible,\n    ] = useState(false)\n    const { t } = useTranslation()\n    return (\n        <Layout noFooter={visualizationAdvantagesIsVisible}>\n            <HelmetFunc data={pageMetadata} />\n            <PromoHero imagesData={data} />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <div id=\"projectStructure\" />\n            <ProjectStructure imagesData={data} />\n            <Reviews />\n            {/* <CommercialProposalFormBlock text /> */}\n            {/* <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormPromoPageBottom',\n                    eventCategory: 'FormPromoPageBottom',\n                }}\n            /> */}\n            <RunningLine inverse>{t('designProject99')}</RunningLine>\n\n            {/* \n            <Connection text={t('connection.text3d')}>\n                <ButtonWithModal\n                    modalTitle={t('connection.modalTitle')}\n                    modalDescription={t('connection.modalDescription')}\n                    buttonLabel={t('connection.buttonLabel')}\n                    placeholder={t('connection.placeholder')}\n                    submitLabel={t('connection.submitLabel')}\n                    tracking={{\n                        conversionType: 'CallbackFromPromo',\n                        eventCategory: 'CallbackFromPromo',\n                    }}\n                />\n            </Connection> */}\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormPromoPageBottom',\n                    eventCategory: 'FormPromoPageBottom',\n                }}\n            />\n            <div id=\"SelectionOfPaints\" />\n            {!advantagesServicesIsVisible && (\n                <ShowMore\n                    imagesData={data}\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {advantagesServicesIsVisible && (\n                <>\n                    <SelectionOfPaints\n                        imagesData={data}\n                        setAdvantagesServicesIsVisible={\n                            setAdvantagesServicesIsVisible\n                        }\n                    />\n                    <div id=\"selectionOfPaintsAdvantages\" />\n                    <AdvantagesServices imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            <div id=\"Project3D\" />\n            {advantagesServicesIsVisible && !advantages3DIsVisible && (\n                <ShowMore\n                    imagesData={data}\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {advantages3DIsVisible && (\n                <>\n                    <Project3D imagesData={data} />\n                    <div id=\"project3dAdvantages\" />\n                    <Advantages3D imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            <div id=\"visualization3d\" />\n            {advantages3DIsVisible && !visualizationAdvantagesIsVisible && (\n                <ShowMore\n                    imagesData={data}\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {visualizationAdvantagesIsVisible && (\n                <>\n                    <Visualization3d imagesData={data} />\n                    <div id=\"visualization3dAdvantages\" />\n                    <RunningLine inverse>{t('designProject99')}</RunningLine>\n                    <Visualization360 />\n                    <VisualizationAdvantages imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            {visualizationAdvantagesIsVisible && (\n                <DefaultFormBlock\n                    withPhoneMobile\n                    tracking={{\n                        conversionType: 'FormPromoPageBottom',\n                        eventCategory: 'FormPromoPageBottom',\n                    }}\n                />\n            )}\n            {/* <ShowMore\n                advantages3DIsVisible={advantages3DIsVisible}\n                setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                advantagesServicesIsVisible={advantagesServicesIsVisible}\n                setAdvantagesServicesIsVisible={setAdvantagesServicesIsVisible}\n                visualizationAdvantagesIsVisible={\n                    visualizationAdvantagesIsVisible\n                }\n                setVisualizationAdvantagesIsVisible={\n                    setVisualizationAdvantagesIsVisible\n                }\n            /> */}\n\n            {/* <div id=\"faq\" /> */}\n            {/* <Faq imagesData={data} /> */}\n        </Layout>\n    )\n}\n\nexport default Promo\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}