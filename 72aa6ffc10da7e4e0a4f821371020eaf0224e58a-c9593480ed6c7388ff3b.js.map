{"version":3,"sources":["webpack:///./src/components/CallbackButton.tsx","webpack:///./src/layout/Layout.tsx","webpack:///./src/blocks/Footer.tsx"],"names":["CallbackButtonWrapperMobile","styled","button","open","colors","dark","hideCallback","props","displayWidth","tablet","desktop","CallbackButtonWrapperDesktop","callbackButtonIcon","css","white","CallbackIconStyled","CallbackIcon","PhoneSvgAnimatedStyled","PhoneSvgAnimated","SubTitle","h3","Wrapper","div","TitleStyled","Title","CallbackButton","tracking","useState","isModalOpen","setModalIsOpen","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","useTranslation","t","i18n","data","useStaticQuery","addressData","getDataByLanguage","allCallbackButtonYaml","language","subTitle","title","Modal","isOpen","closeHandler","Form","formName","buttonText","onFormSubmit","onFormSendStart","register","errors","PhoneInput","ref","minLength","required","err","phone","aria-label","href","contactInformation","primaryPhone","onClick","sendForm","sendConversion","sendEvent","eventCategory","type","LayoutWraper","BlocksWrapper","languagesList","Object","keys","languages","Layout","children","noFooter","getPagePath","usePagePath","setHideCallback","commonData","allReviewsYaml","edges","find","elem","node","parent","name","rating","bestRating","worstRating","reviewsArr","allAddressYaml","companyName","street","city","reviewData","map","item","author","reviewBody","text","replace","reviewRating","ratingValue","scrolled25Send","useRef","scrolled50Send","scrolled75Send","scrolled100Send","pagePath","useEffect","current","gtag","process","page_location","document","location","Helmet","lang","key","rel","hrefLang","JSON","stringify","Header","id","onScroll","block","getElementById","scrollPosition","scrollTop","windowHeight","clientHeight","bodyHeight","scrollHeight","setTimeout","scrolledRation","Math","ceil","Footer","conversionType","FooterWrapper","backgroundColors","footer","indent","mobile","FooterContainer","Container","FooterColumn","heroColumnTablet","heroColumnDesktop","Paragraph","FooterLogo","Logo","FooterLogo2","SocialIconsWrapper","columns","tabletColumns","target","placement","secondaryPhones","email","fill","showAllIcons"],"mappings":"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","file":"72aa6ffc10da7e4e0a4f821371020eaf0224e58a-c9593480ed6c7388ff3b.js","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { colors } from 'styles/colors'\nimport CallbackIcon from 'assets/icons/callback.svg'\nimport { displayWidth } from 'styles/width'\nimport { Modal } from './Modal'\nimport { Form, FormTracking, IChildrenProps } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { Title } from 'components/TitleComponent'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { PhoneSvgAnimated } from './PhoneSvgAnimated'\nimport { contactInformation } from './contactInformation'\nimport { sendConversion, sendEvent } from 'tracking'\nimport { sendForm } from './form/api'\n\nconst CallbackButtonWrapperMobile = styled.button<{\n    open?: boolean\n    hideCallback: number\n}>`\n    position: fixed;\n    bottom: 80px;\n    left: 18px;\n    width: 64px;\n    height: 64px;\n    ${({ open }) =>\n        open === true\n            ? `background-color: rgba(213, 213, 213, 0.85596)`\n            : `background-color: ${colors.dark}`};\n    ${({ hideCallback }) =>\n        (hideCallback < 550 || hideCallback === 0) && `display:none`};\n    border: 1px solid ${colors.dark};\n    border-radius: 50%;\n    z-index: 13;\n    :after,\n    :before {\n        pointer-events: none;\n        content: '';\n        display: block;\n        position: absolute;\n        border: 1px solid ${colors.dark};\n        border-radius: 50%;\n        bottom: -10px;\n        top: -10px;\n        right: -10px;\n        left: -10px;\n        animation: ${(props) =>\n            props.open ? 'none' : 'pulse 2s linear infinite;'};\n        opacity: 0;\n        background-color: rgba(255, 255, 255, 0.07);\n    }\n    :after {\n        animation-delay: 0.5s;\n    }\n    @keyframes pulse {\n        0% {\n            transform: scale(0.5);\n            opacity: 0;\n        }\n        50% {\n            opacity: 1;\n        }\n        100% {\n            transform: scale(1.2);\n            opacity: 0;\n        }\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        left: 8px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        left: calc((50vw - ${displayWidth.desktop} / 2) + 8px);\n    }\n    :hover {\n        cursor: pointer;\n    }\n`\nconst CallbackButtonWrapperDesktop = styled(CallbackButtonWrapperMobile)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        left: 8px;\n        ${({ hideCallback }) =>\n            (hideCallback < 170 || hideCallback === 0) && `display:none`};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        left: calc((50vw - ${displayWidth.desktop} / 2) + 8px);\n        ${({ hideCallback }) =>\n            (hideCallback < 200 || hideCallback === 0) && `display:none`};\n    }\n`\n\nconst callbackButtonIcon = css`\n    fill: ${colors.white};\n    width: 32px;\n    height: 64px;\n    cursor: pointer;\n    pointer-events: auto;\n`\nconst CallbackIconStyled = styled(CallbackIcon)`\n    ${callbackButtonIcon};\n`\nconst PhoneSvgAnimatedStyled = styled(PhoneSvgAnimated)`\n    pointer-events: auto;\n    fill: ${colors.white};\n    width: 40%;\n    height: 40%;\n    left: 30%;\n    top: 30%;\n`\nconst SubTitle = styled.h3`\n    display: block;\n    text-align: left;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 16px 0;\n    text-align: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst Wrapper = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    box-sizing: border-box;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    @media (orientation: landscape) {\n        padding: 10px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        align-items: flex-start;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 30px 70px 0 30px;\n        justify-content: space-around;\n    }\n`\nconst TitleStyled = styled(Title)`\n    margin: 50px 0;\n    @media (orientation: landscape) {\n        margin: 16px 0;\n    }\n`\nexport const CallbackButton = ({\n    tracking,\n    hideCallback,\n}: {\n    tracking: FormTracking\n    hideCallback: number\n}) => {\n    const [isModalOpen, setModalIsOpen] = useState(false)\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n    const { t, i18n } = useTranslation()\n\n    const data = useStaticQuery(graphql`\n        query {\n            allCallbackButtonYaml {\n                edges {\n                    node {\n                        subTitle\n                        title\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const addressData = getDataByLanguage(\n        data.allCallbackButtonYaml,\n        i18n.language\n    )\n    const { subTitle, title } = addressData\n    return (\n        <>\n            <Modal\n                isOpen={isModalOpen}\n                closeHandler={() => setModalIsOpen(false)}\n            >\n                <Wrapper>\n                    <TitleStyled>{title}</TitleStyled>\n                    <SubTitle>{subTitle}</SubTitle>\n                    <Form\n                        formName={'Question Form'}\n                        buttonText={t('send')}\n                        onFormSubmit={handleSubmitStatus}\n                        onFormSendStart={handleFormSendStart}\n                        formSendStatus={formSendStatus}\n                        closeHandler={setModalIsOpen}\n                        {...tracking}\n                    >\n                        {({ register, errors }: IChildrenProps) => (\n                            <>\n                                <PhoneInput\n                                    ref={register({\n                                        minLength: 18,\n                                        required: true,\n                                    })}\n                                    err={errors.phone}\n                                />\n                            </>\n                        )}\n                    </Form>\n                </Wrapper>\n            </Modal>\n            <CallbackButtonWrapperMobile\n                hideCallback={hideCallback}\n                aria-label=\"Callback Button\"\n            >\n                <a\n                    href={`tel:${contactInformation.primaryPhone}`}\n                    onClick={() => {\n                        sendForm(`CallBack button PhoneClick`, {})\n                        sendConversion('PhoneClick')\n                        sendEvent('Phone', {\n                            eventCategory: 'PhoneClick',\n                            type: 'CallBack button',\n                        })\n                    }}\n                >\n                    <PhoneSvgAnimatedStyled />\n                </a>\n            </CallbackButtonWrapperMobile>\n\n            <CallbackButtonWrapperDesktop\n                hideCallback={hideCallback}\n                aria-label=\"Callback Button\"\n                onClick={() => {\n                    setModalIsOpen(true)\n                }}\n            >\n                <CallbackIconStyled />\n            </CallbackButtonWrapperDesktop>\n        </>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nimport { Header } from 'blocks/Header/Header'\nimport { Footer } from 'blocks/Footer'\nimport { languages } from 'i18n/languages'\nimport { usePagePath } from 'hooks/usePagePath'\nimport { displayWidth } from 'styles/width'\nimport { CallbackButton } from 'components/CallbackButton'\nimport { contactInformation } from 'components/contactInformation'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { sendEvent, gtag } from 'tracking'\n\nconst LayoutWraper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    max-width: 100vw;\n    position: relative;\n    overflow: hidden;\n    touch-action: none;\n`\nconst BlocksWrapper = styled.div`\n    position: absolute;\n    width: 100%;\n    top: 65px;\n    bottom: 0;\n    overflow-y: auto;\n    box-sizing: content-box;\n    ::-webkit-scrollbar {\n        display: none;\n    }\n    -ms-overflow-style: none;\n    scroll-behavior: smooth;\n    @media (min-width: ${displayWidth.tablet}) {\n        top: 80px;\n    }\n`\nconst languagesList = Object.keys(languages)\nexport const Layout = ({\n    children,\n    noFooter = true,\n}: {\n    children: React.ReactNode\n    noFooter?: boolean\n}) => {\n    const { i18n } = useTranslation()\n    const { getPagePath } = usePagePath()\n    const [hideCallback, setHideCallback] = useState(1000)\n    const data = useStaticQuery(graphql`\n        query {\n            allAddressYaml {\n                edges {\n                    node {\n                        companyName\n                        street\n                        city\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n            allReviewsYaml {\n                edges {\n                    node {\n                        rating\n                        bestRating\n                        worstRating\n                        reviewsArr {\n                            text\n                            name\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    const commonData = data.allReviewsYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'reviews'\n        }\n    ).node\n\n    const { rating, bestRating, worstRating, reviewsArr } = commonData\n    const addressData = getDataByLanguage(data.allAddressYaml, i18n.language)\n\n    const { companyName, street, city } = addressData\n\n    const reviewData = reviewsArr.map(\n        (item: { name: string; text: string }) => {\n            return {\n                '@type': 'Review',\n                author: `${item.name}`,\n                name: `${item.name}`,\n                reviewBody: `${item.text.replace(/<[^>]*>/g, '')}`,\n                reviewRating: {\n                    '@type': 'Rating',\n                    bestRating: `${bestRating}`,\n                    ratingValue: `${rating}`,\n                    worstRating: `${worstRating}`,\n                },\n            }\n        }\n    )\n    const scrolled25Send = useRef(false)\n    const scrolled50Send = useRef(false)\n    const scrolled75Send = useRef(false)\n    const scrolled100Send = useRef(false)\n\n    const pagePath = getPagePath(i18n.language)\n\n    // Reset scroll event when page changes\n    useEffect(() => {\n        scrolled25Send.current = false\n        scrolled50Send.current = false\n        scrolled75Send.current = false\n        scrolled100Send.current = false\n        gtag('config', `${process.env.GA_ID}`, {\n            // eslint-disable-next-line camelcase\n            page_location: document.location,\n        })\n    }, [pagePath])\n\n    const onScroll = () => {\n        const block = document.getElementById('blockWrapper')\n        const scrollPosition = block!.scrollTop\n        const windowHeight = block!.clientHeight\n        const bodyHeight = block!.scrollHeight\n\n        setHideCallback(bodyHeight - (scrollPosition + windowHeight))\n        setTimeout(() => {\n            const trackScroll = () => {\n                const scrolledRation = Math.ceil(\n                    ((scrollPosition + windowHeight) / bodyHeight) * 100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRation >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled75Send!.current && scrolledRation >= 75) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled50Send!.current && scrolledRation >= 50) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled25Send!.current && scrolledRation >= 25) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            trackScroll()\n        }, 700)\n    }\n    return (\n        <LayoutWraper>\n            <Helmet>\n                <html lang={i18n.language} />\n                {languagesList.map((lang) => {\n                    return (\n                        <link\n                            key={lang}\n                            rel=\"alternate\"\n                            hrefLang={lang}\n                            href={`https://clearline.com.ua/new${getPagePath(\n                                lang\n                            )}`}\n                        />\n                    )\n                })}\n                <script type=\"application/ld+json\">\n                    {`{\n                        \"@context\": \"https://schema.org/\",\n                            \"@type\": \"Organization\",\n                            \"url\": \"https://clearline.com.ua/new/\",\n                            \"logo\": \"https://clearline.com.ua/new/email-logo.jpg\",\n                            \"geo\": {\n                                    \"@type\": \"GeoCoordinates\",\n                                    \"latitude\": 50.440771,\n                                    \"longitude\": 30.507301\n                            },\n                            \"image\": \"https://clearline.com.ua/new/email-logo.jpg\",\n                            \"name\": \"${companyName}\",\n                            \"telephone\": \"${contactInformation.primaryPhone}\",\n                            \"address\" :{\n                            \"@type\": \"PostalAddress\",\n                            \"streetAddress\": \"${street}\",\n                            \"addressLocality\": \"${city}\"\n                        },\n                        \"reviewRating\": {\n                            \"@type\": \"Rating\",\n                            \"bestRating\": \"${bestRating}\",\n                            \"ratingValue\": \"${rating}\",\n                            \"worstRating\": \"${worstRating}\"\n                        },\n                        \"aggregateRating\": {\n                            \"@type\": \"AggregateRating\",\n                            \"ratingValue\": \"${rating}\",\n                            \"reviewCount\": \"70\"\n                        },\n                          \"review\": ${JSON.stringify(reviewData)}\n                        }`}\n                </script>\n            </Helmet>\n            <Header />\n            <BlocksWrapper id=\"blockWrapper\" onScroll={onScroll}>\n                {children}\n                {noFooter && <Footer />}\n            </BlocksWrapper>\n            <CallbackButton\n                hideCallback={hideCallback}\n                tracking={{\n                    conversionType: 'CallBackButtonForm',\n                    eventCategory: 'CallBackButtonForm',\n                }}\n            />\n        </LayoutWraper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Logo } from 'components/Logo'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { SocialIcons } from 'components/SocialIcons'\nimport { contactInformation } from 'components/contactInformation'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { sendConversion, sendEvent } from 'tracking'\nimport { sendForm } from 'components/form/api'\n\nconst FooterWrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: ${backgroundColors.footer};\n    color: white;\n    z-index: 1;\n    overflow: hidden;\n    width: 100%;\n    :after {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.white};\n        border-right: 1px solid ${colors.white};\n        content: '';\n        z-index: -1;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n        align-items: flex-start;\n        padding: 0;\n    }\n`\nconst FooterContainer = styled(Container)`\n    padding: 30px 16px;\n    border-bottom: 1px solid ${colors.white};\n    > :last-child {\n        justify-content: space-between;\n    }\n    box-sizing: border-box;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n        border-bottom: none;\n        border-right: 1px solid ${colors.white};\n        border-left: 1px solid ${colors.white};\n    }\n`\n\nconst FooterColumn = styled.div`\n    padding: 24px 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    :last-child {\n        margin: 5px 0;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: ${indent.heroColumnTablet};\n        align-items: flex-start;\n        border-right: 1px solid ${colors.white};\n        :last-child {\n            border-right: none;\n        }\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: ${indent.heroColumnDesktop};\n    }\n`\nconst Header = styled.h3`\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 22px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    margin-bottom: 10px;\n`\nconst Paragraph = styled(Header)`\n    font-weight: normal;\n    a {\n        text-decoration: none;\n        color: ${colors.white};\n        p {\n            padding-bottom: 10px;\n        }\n        :hover {\n            text-decoration: underline;\n        }\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst FooterLogo = styled(Logo)`\n    display: none;\n    fill: ${colors.white};\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-top: 35px;\n        display: block;\n    }\n`\n\nconst FooterLogo2 = styled(Logo)`\n    fill: ${colors.white};\n    height: 55px;\n    @media (min-width: ${displayWidth.tablet}) {\n        fill: transparent;\n    }\n`\nconst SocialIconsWrapper = styled.div`\n    margin-bottom: 10px;\n    width: 100%;\n    box-sizing: border-box;\n`\nexport const Footer = () => {\n    const { t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allAddressYaml {\n                edges {\n                    node {\n                        companyName\n                        street\n                        city\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const addressData = getDataByLanguage(data.allAddressYaml, i18n.language)\n    const { street, city } = addressData\n\n    return (\n        <FooterWrapper>\n            <FooterLogo />\n            <FooterContainer columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                <FooterColumn>\n                    <Header>{t('address')}</Header>\n                    {/* <Paragraph>{companyName}</Paragraph> */}\n                    <Paragraph>\n                        <a\n                            href={`https://www.google.com.ua/maps/place/ClearLine/@50.4405714,30.5056453,17z/data=!4m8!1m2!2m1!1z0JTQuNC30LDQudC90LXRgCDQuNC90YLQtdGA0YzQtdGA0LA!3m4!1s0x40d4cefa03940353:0xf974319028460098!8m2!3d50.440568!4d30.507834?hl=${i18n.language}&authuser=0`}\n                            target=\"blank\"\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'Address',\n                                    placement: 'Footer',\n                                })\n                            }}\n                        >\n                            <p> {street}</p>\n                            <p> {city}</p>\n                        </a>\n                    </Paragraph>\n                </FooterColumn>\n                <FooterColumn>\n                    <Header>{t('contacts')}</Header>\n                    <Paragraph>\n                        <a\n                            href={`tel:${contactInformation.primaryPhone}`}\n                            onClick={() => {\n                                sendEvent('Phone', {\n                                    eventCategory: 'PhoneClick',\n                                    placement: 'Footer',\n                                    phone: contactInformation.primaryPhone,\n                                })\n                                sendForm(`FooterPhoneClick`, {})\n                                sendConversion('PhoneClick')\n                            }}\n                        >\n                            {contactInformation.primaryPhone}\n                        </a>\n                    </Paragraph>\n                    <Paragraph>\n                        <a\n                            href={`tel:${contactInformation.secondaryPhones}`}\n                            onClick={() => {\n                                sendForm(`FooterStationarPhoneClick`, {})\n                                sendConversion('PhoneClick')\n                                sendEvent('Phone', {\n                                    eventCategory: 'PhoneClick',\n                                    placement: 'Footer',\n                                    phone: contactInformation.secondaryPhones,\n                                })\n                            }}\n                        >\n                            {contactInformation.secondaryPhones}\n                        </a>\n                    </Paragraph>\n                    <Paragraph>\n                        <a\n                            href={`mailto:${contactInformation.email}`}\n                            onClick={() => {\n                                sendConversion('EmailClick')\n                                sendEvent('Email', {\n                                    eventCategory: 'EmailClick',\n                                    placement: 'Footer',\n                                    email: contactInformation.email,\n                                })\n                            }}\n                        >\n                            {contactInformation.email}\n                        </a>\n                    </Paragraph>\n                </FooterColumn>\n\n                <FooterColumn>\n                    <Header>{t('contactUs')}</Header>\n                    <SocialIconsWrapper>\n                        <SocialIcons\n                            fill={colors.white}\n                            showAllIcons\n                            placement={'Footer'}\n                        />\n                    </SocialIconsWrapper>\n                </FooterColumn>\n            </FooterContainer>\n            <FooterLogo2 />\n        </FooterWrapper>\n    )\n}\n"],"sourceRoot":""}