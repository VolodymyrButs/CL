{"version":3,"sources":["webpack:///./src/components/StarRating.tsx","webpack:///./src/blocks/Reviews.tsx","webpack:///./src/utils/getRandomArray.tsx","webpack:///./src/blocks/Heros/PromoHeroMobile99.tsx","webpack:///./src/assets/images/sofaDesktopRight.svg","webpack:///./src/components/SliderComponent.tsx","webpack:///./src/components/IconListWhy.tsx","webpack:///./src/components/IconListQuestion.tsx"],"names":["Wrapper","styled","div","StarRating","rating","quantity","arr","Array","from","_","i","map","key","viewBox","width","height","fill","className","d","percent","Math","round","id","url","x1","y1","x2","y2","offset","stopColor","ReviewsWrapper","backgroundColors","contact","colors","dark","mobileAfterBorder","RankTextWrapper","displayWidth","tablet","desktop","Rank","p","accentText","RankStarWrapper","GoogleIcon","Google","TextWrapper","Text","SubTitle","a","BottomText","TitleStyled","Title","SliderStyled","SliderComponent","Review","HeroColumn","indent","heroColumnTablet","heroColumnDesktop","SlideWrapper","Reviews","arrows","i18n","useTranslation","data","useStaticQuery","commonData","allReviewsYaml","edges","find","elem","node","parent","name","reviewsQuantity","link","reviewsArr","reviewsYaml","getDataByLanguage","language","title","ourRank","quantity1","quantity2","sliderSettings","dots","infinite","speed","nextArrow","bottom","prevArrow","RandomList","randLength","min","max","randArray","rand","floor","random","includes","push","createRand","length","Container","columns","tabletColumns","href","target","onClick","sendEvent","eventCategory","background","author","dangerouslySetInnerHTML","__html","text","location","PromoHeroWraper","PromoHeroColumn","ContainerStyled","mobile","InputBlock","FormTitle","run","keyframes","run2","RunningTextContainer","formPromo","Wrapper1","Text2","PromoHeroMobile99","t","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","buttonText","onFormSubmit","onFormSendStart","conversionType","register","errors","labelBottom","placeholder","ref","minLength","required","err","phone","email","message","repeat","React","SofaDesktopRight","props","createElement","defaultProps","module","exports","default","CarouselWrapper","children","forwardRef","settings","IconListWrapper","IconItem","TextD","IconStyled","Icon","IconListWhy","items","white","restProps","item","index","svg","iconName","question","answer","answerDesctop","span","IconListQuestion"],"mappings":"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","file":"548ce09c513edf3a460544dbba3549c44d9fb305-32977df2230770cbfb50.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    svg {\n        padding: 0 6px;\n    }\n`\n\ninterface IStarRatingProps {\n    rating: number\n    quantity: number\n}\n\nexport const StarRating: React.FC<IStarRatingProps> = ({\n    rating,\n    quantity,\n}) => {\n    const arr = Array.from(Array(quantity), (_, i) => i + 1)\n    return (\n        <Wrapper>\n            {arr.map((i) => {\n                if (i <= rating) {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"#E24C1A\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else if (i > rating && i - rating < 1) {\n                    const ratio = Math.round((1 - (i - rating)) * 100)\n                    const percent = `${ratio}%`\n                    const id = `widgetGrad${i}`\n                    const url = `url(#${id})`\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <defs>\n                                <linearGradient\n                                    id={id}\n                                    x1=\"0%\"\n                                    y1=\"0%\"\n                                    x2=\"100%\"\n                                    y2=\"0%\"\n                                >\n                                    <stop\n                                        offset=\"0%\"\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                    <stop\n                                        offset=\"100%\"\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                </linearGradient>\n                            </defs>\n                            <path\n                                fill={url}\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"rgb(203, 211, 227)\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                }\n            })}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { StarRating } from 'components/StarRating'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport Google from 'assets/icons/google.svg'\nimport { createRand } from 'utils/getRandomArray'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ReviewsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\nconst RankTextWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    color: ${colors.dark};\n    span {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 24px;\n        line-height: 33px;\n        align-self: flex-end;\n        @media (min-width: ${displayWidth.tablet}) {\n            font-size: 20px;\n            line-height: 24px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            font-size: 24px;\n            line-height: 33px;\n        }\n    }\n`\nconst Rank = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 32px;\n    line-height: 38px;\n    margin-left: 5px;\n    color: ${colors.accentText};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 24px;\n        line-height: 28px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 32px;\n        line-height: 38px;\n    }\n`\nconst RankStarWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 14px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 14px 0;\n    }\n`\nconst GoogleIcon = styled(Google)`\n    margin-right: 18px;\n`\nconst TextWrapper = styled.div`\n    display: flex;\n    overflow: hidden;\n`\nconst Text = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    p {\n        padding-top: 10px;\n        text-align: center;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\n\nconst SubTitle = styled.a`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    text-decoration: underline;\n    text-underline-position: under;\n    color: ${colors.dark};\n    margin-bottom: 20px;\n`\nconst BottomText = styled.div`\n    font-style: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    text-align: center;\n    font-weight: bold;\n    margin: 25px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 25px 0 0px;\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n    }\n`\nconst SliderStyled = styled(SliderComponent)`\n    background-color: ${backgroundColors.contact};\n`\nconst Review = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 8px;\n    box-sizing: border-box;\n    border: 1px solid ${colors.dark};\n    border-radius: 40px;\n    height: 430px;\n    @media (min-width: 500px) {\n        height: 330px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 330px;\n        padding: 30px;\n        align-items: flex-start;\n        margin: 40px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 10px 50px;\n        height: 280px;\n    }\n    :focus {\n        outline: none;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0 10px 56px ${indent.heroColumnTablet};\n        align-items: flex-start;\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 10px 26px ${indent.heroColumnDesktop};\n    }\n`\n\nconst SlideWrapper = styled.div``\n\nexport const Reviews = ({ arrows }: { arrows?: boolean; bottom?: boolean }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allReviewsYaml {\n                edges {\n                    node {\n                        title\n                        ourRank\n                        rating\n                        quantity1\n                        quantity2\n                        link\n                        reviewsQuantity\n                        reviewsArr {\n                            text\n                            name\n                            location\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const commonData = data.allReviewsYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'reviews'\n        }\n    ).node\n    const { rating, reviewsQuantity, link, reviewsArr } = commonData\n    const reviewsYaml = getDataByLanguage(data.allReviewsYaml, i18n.language)\n    const { title, ourRank, quantity1, quantity2 } = reviewsYaml\n    const arr = arrows ? true : false\n    const sliderSettings = {\n        dots: true,\n        infinite: true,\n        speed: 100,\n        arrows: arr,\n        nextArrow: <SlickNext bottom />,\n        prevArrow: <SlickPrevious bottom />,\n    }\n\n    const RandomList = createRand(5, 0, reviewsArr.length - 1)\n    return (\n        <ReviewsWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled> {title}</TitleStyled>\n                    <RankTextWrapper>\n                        <span>{ourRank}: </span>\n                        <Rank>{rating}</Rank>\n                        <span>/5</span>\n                    </RankTextWrapper>\n                    <RankStarWrapper>\n                        <GoogleIcon />\n                        <StarRating rating={rating} quantity={5} />\n                    </RankStarWrapper>\n                    <SubTitle\n                        href={link}\n                        target=\"blank\"\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'GoogleRewiews',\n                            })\n                        }}\n                    >\n                        {quantity1}&nbsp;\n                        {reviewsQuantity}&nbsp;\n                        {quantity2}\n                    </SubTitle>\n                </HeroColumn>\n                <SliderStyled\n                    {...sliderSettings}\n                    background={backgroundColors.contact}\n                >\n                    {RandomList.map((i) => {\n                        return (\n                            <SlideWrapper\n                                key={i}\n                                onClick={() => {\n                                    sendEvent('Click', {\n                                        eventCategory: 'ReviewItem',\n                                        author: reviewsArr[i].name,\n                                    })\n                                }}\n                            >\n                                <Review>\n                                    <p />\n                                    <TextWrapper>\n                                        <Text\n                                            dangerouslySetInnerHTML={{\n                                                __html: reviewsArr[i].text,\n                                            }}\n                                        />\n                                    </TextWrapper>\n                                    <BottomText>\n                                        {reviewsArr[i].name},&nbsp;\n                                        {reviewsArr[i].location}\n                                    </BottomText>\n                                </Review>\n                            </SlideWrapper>\n                        )\n                    })}\n                </SliderStyled>\n            </Container>\n        </ReviewsWrapper>\n    )\n}\n","export const createRand = (\n    randLength: number,\n    min: number,\n    max: number\n): number[] => {\n    let randArray: number[] = []\n    let i = 0\n    if (randLength > max - min + 1) {\n        return []\n    }\n    while (i < randLength) {\n        let rand = Math.floor(Math.random() * (max - min + 1)) + min\n        if (!randArray.includes(rand)) {\n            i++\n            randArray.push(rand)\n        }\n    }\n    return randArray\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport { PhoneInput } from 'components/form/PhoneInput'\n\nimport { displayWidth } from 'styles/width'\n\nimport { indent } from 'styles/indent'\nimport { useTranslation } from 'react-i18next'\nimport { Form, IChildrenProps } from 'components/form/Form'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\n\nconst Wrapper = styled.div`\n    display: block;\n    margin-top: 0.1px;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\n\nconst PromoHeroWraper = styled.div<{ text?: boolean }>`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: white;\n    border-bottom: 1px solid ${colors.dark};\n`\n\nconst PromoHeroColumn = styled.div`\n    :first-child {\n        display: flex;\n    }\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    flex-grow: 0;\n    button {\n        width: 68%;\n        margin: 10px auto 30px;\n        height: 60px;\n        background-color: ${colors.accentText};\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    box-sizing: border-box;\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 16px;\n    input {\n        width: 250px;\n        margin: 10px auto;\n    }\n    textarea {\n        margin: 10px auto;\n    }\n\n    span {\n        bottom: 16px;\n        font-size: 16px;\n        color: #757474;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 30px;\n    line-height: 50px;\n    letter-spacing: 1px;\n    color: ${colors.accentText};\n    text-align: center;\n    margin: 10px;\n    p {\n        margin-top: 5px;\n        text-transform: uppercase;\n    }\n`\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${backgroundColors.formPromo};\n    color: ${colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper1 = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\n\nexport const PromoHeroMobile99 = ({ text }: { text?: boolean }) => {\n    const { t } = useTranslation()\n\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <Wrapper>\n            <PromoHeroWraper text={text}>\n                <ContainerStyled columns={'1fr'}>\n                    <PromoHeroColumn>\n                        <FormTitle>\n                            {text ? t('designQuestion') : t('writeToUs')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            conversionType={'TopFormDesktopPosadka99'}\n                            eventCategory={'TopFormDesktopPosadka99'}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputPhone')}\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n\n                                    <EmailInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputEmail')}\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                    <MessageInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputQuestion')}\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </PromoHeroColumn>\n                </ContainerStyled>\n            </PromoHeroWraper>\n            {!text && (\n                <RunningTextContainer>\n                    <Wrapper1>\n                        <Text>{t('designProject99').repeat(20)}</Text>\n                        <Text2>{t('designProject99').repeat(20)}</Text2>\n                    </Wrapper1>\n                </RunningTextContainer>\n            )}\n        </Wrapper>\n    )\n}\n","var React = require('react');\n\nfunction SofaDesktopRight (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M240.772 52.1219L300.77 57.9686C302.983 58.1702 304.61 60.0519 304.61 62.3368V192.913C304.61 195.332 302.722 197.348 300.315 197.348H270.901C268.884 197.348 267.192 195.937 266.737 193.921L236.217 57.5654C235.566 54.6085 237.909 51.8531 240.772 52.1219Z\",\"strokeMiterlimit\":\"10\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M275.392 118.384V66.2346C275.392 64.2857 274.025 62.6056 272.138 62.2696L233.875 58.3718L220.469 109.379L275.392 118.384Z\",\"strokeMiterlimit\":\"10\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M0.325439 110.185V19.0578C0.325439 10.9262 1.50605 3.57068 13.1728 2.99626C15.1994 2.89648 17.3097 2.86185 18.546 2.99625C94.2267 9.78378 164.962 9.85098 230.621 3.06346C232.899 2.79465 235.176 2.99626 237.389 3.60108C244.286 5.61718 249.232 11.7999 249.232 19.0578V93.183V117.242L0.325439 110.185Z\",\"strokeLinejoin\":\"round\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M241.098 197.886L240.122 231.017C240.057 232.227 239.146 233.235 237.909 233.235H232.378C231.272 233.235 230.296 232.361 230.166 231.151L227.172 198.02\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M199.451 198.087L199.32 201.716C199.255 202.926 198.344 203.934 197.108 203.934H191.577C190.47 203.934 189.494 203.06 189.364 201.851L189.039 198.087\",\"strokeLinejoin\":\"round\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M0.325439 197.886H266.542C271.552 197.886 275.587 193.719 275.587 188.544V163.545C275.587 158.37 271.552 154.204 266.542 154.204H0.325439V197.886Z\",\"strokeLinejoin\":\"round\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M250.924 112.941C250.924 112.941 227.172 115.83 218.127 110.857C209.081 105.884 203.876 94.863 209.212 84.5137C214.548 74.1644 224.179 75.3741 230.491 75.5085C236.803 75.6429 250.143 74.7021 255.154 75.9117\",\"strokeMiterlimit\":\"10\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M251.77 113.21C261.833 113.21 269.991 104.785 269.991 94.3926C269.991 84.0003 261.833 75.5757 251.77 75.5757C241.707 75.5757 233.549 84.0003 233.549 94.3926C233.549 104.785 241.707 113.21 251.77 113.21Z\",\"strokeLinejoin\":\"round\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M0.325439 154.002H266.542C271.552 154.002 275.587 149.835 275.587 144.661V119.661C275.587 114.486 271.552 110.32 266.542 110.32H0.325439V154.002Z\",\"strokeLinejoin\":\"round\",\"key\":8})]);\n}\n\nSofaDesktopRight.defaultProps = {\"width\":\"305\",\"height\":\"234\",\"viewBox\":\"0 0 305 234\",\"fill\":\"none\",\"stroke\":\"none\"};\n\nmodule.exports = SofaDesktopRight;\n\nSofaDesktopRight.default = SofaDesktopRight;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { displayWidth } from 'styles/width'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst CarouselWrapper = styled.div`\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    height: auto;\n    padding: 16px 32px 26px;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        height: auto;\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: calc((${displayWidth.desktop} - 160px) * 0.6666);\n        max-height: 600px;\n    }\n    .slick-list {\n        margin: 0 -16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -30px;\n        }\n    }\n    img {\n        cursor: grab;\n    }\n    .slick-slide > div {\n        margin: 0 16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 30px;\n        }\n    }\n    .slick-dots {\n        bottom: -22px;\n        left: 0;\n\n        @media (min-width: ${displayWidth.tablet}) {\n            bottom: 5px;\n        }\n        li {\n            width: 10px;\n            button {\n                width: 10px;\n                ::before {\n                    width: 10px;\n                }\n            }\n        }\n    }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SliderComponent = ({ children, forwardRef, ...props }: any) => {\n    const settings = {\n        nextArrow: <SlickNext />,\n        prevArrow: <SlickPrevious />,\n    }\n    return (\n        <CarouselWrapper {...props}>\n            <Slider {...settings} {...props} ref={forwardRef}>\n                {children}\n            </Slider>\n        </CarouselWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { Icon } from 'components/Icon'\nimport { displayWidth } from 'styles/width'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: ${(props) => props.background};\n    display: flex;\n    flex-wrap: wrap;\n    padding: 40px 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0px 48px 20px;\n    }\n`\nconst IconItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n        align-items: flex-start;\n        padding: 30px 16px;\n    }\n    > div:first-child {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: start;\n        @media (min-width: ${displayWidth.desktop}) {\n            justify-content: start;\n        }\n        svg {\n            margin-right: 10px;\n        }\n    }\n`\nconst Text = styled.div`\n    margin-top: 15px;\n\n    text-align: left;\n\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    @media (min-width: ${displayWidth.tablet}) {\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 32px;\n        margin-top: 0px;\n    }\n`\nconst Text2 = styled(Text)`\n    font-size: 18px;\n    p {\n        font-size: 18px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nconst TextD = styled(Text)`\n    display: none;\n    @media (min-width: ${displayWidth.desktop}) {\n        display: block;\n        font-size: 24px;\n        margin-top: 15px;\n        line-height: 35px;\n    }\n`\ninterface IIconStyledProps {\n    fill: string\n}\nconst IconStyled = styled(Icon)<IIconStyledProps>`\n    min-width: 75px;\n    overflow: visible;\n    .iconCircle {\n        fill: #ebebeb;\n        stroke: #b75034;\n        stroke-width: 1px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        min-width: 120px;\n        min-height: 65px;\n    }\n`\ninterface IItem {\n    question: string\n    answer: string\n    answerDesctop: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconListWhy: React.FC<IIconListProps> = ({\n    items = [],\n    fill = colors.dark,\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        <div>\n                            {item.svg && (\n                                <IconStyled iconName={item.svg} fill={fill} />\n                            )}\n                            <Text\n                                dangerouslySetInnerHTML={{\n                                    __html: item.question,\n                                }}\n                            />\n                        </div>\n                        <Text2\n                            dangerouslySetInnerHTML={{\n                                __html: item.answer,\n                            }}\n                        />\n                        <TextD> {item.answerDesctop}</TextD>\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\n\nimport { displayWidth } from 'styles/width'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: #f7dfd7;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0px 48px 20px;\n    }\n`\nconst IconItem = styled.div`\n    /* flex-direction: column; */\n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n        align-items: flex-start;\n        padding: 10px 16px;\n    }\n    > div {\n        display: flex;\n        align-items: center;\n    }\n`\nconst Text = styled.span`\n    margin-top: 10px;\n\n    text-align: center;\n    width: 100%;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst Text2 = styled(Text)`\n    position: relative;\n    border-left: 8px solid ${colors.accentText};\n    margin-bottom: 15px;\n    p {\n        display: flex;\n        align-items: center;\n        font-size: 24px;\n        line-height: 26px;\n        margin-left: 15px;\n        min-height: 46px;\n        text-align: left;\n        box-sizing: border-box;\n    }\n    /* ::before {\n        position: absolute;\n        left: 0px;\n        top: 0;\n        color: #b75034;\n        font-size: 47px;\n        height: 40px;\n        width: 40px;\n        content: '➡';\n    } */\n`\n// const IconStyled = styled(Icon)`\n//     max-width: 45px;\n//     max-height: 45px;\n//     fill: #b75034;\n// `\ninterface IItem {\n    question: string\n    answer: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconListQuestion: React.FC<IIconListProps> = ({\n    items = [],\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        <div>\n                            <Text2\n                                dangerouslySetInnerHTML={{\n                                    __html: item.question,\n                                }}\n                            />\n                        </div>\n                        <Text\n                            dangerouslySetInnerHTML={{\n                                __html: item.answer,\n                            }}\n                        />\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n/*\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\n\nimport { displayWidth } from 'styles/width'\nimport { Icon } from './Icon'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: ${(props) => props.background};\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 48px;\n    }\n`\nconst IconItem = styled.div`\n    /* flex-direction: column; \n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n    > div {\n        display: flex;\n        align-items: center;\n    }\n`\nconst Text = styled.span`\n    margin-top: 10px;\n    p {\n        text-align: center;\n        width: 100%;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\nconst Text2 = styled(Text)`\n    position: relative;\n    p {\n        display: flex;\n        align-items: center;\n        font-size: 18px;\n        font-weight: bold;\n        line-height: 20px;\n        padding-left: 10px;\n        min-height: 46px;\n        text-align: left;\n        box-sizing: border-box;\n        margin-bottom: 10px;\n    }\n`\nconst IconStyled = styled(Icon)`\n    min-width: 45px;\n    fill: #b75034;\n`\ninterface IItem {\n    question: string\n    answer: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconListQuestion: React.FC<IIconListProps> = ({\n    items = [],\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        <div>\n                            {item.svg && <IconStyled iconName={'Logo.svg'} />}\n                            <Text2\n                                dangerouslySetInnerHTML={{\n                                    __html: item.question,\n                                }}\n                            />\n                        </div>\n                        <Text\n                            dangerouslySetInnerHTML={{\n                                __html: item.answer,\n                            }}\n                        />\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n*/\n"],"sourceRoot":""}