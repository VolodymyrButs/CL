{"version":3,"sources":["webpack:///./src/pages/promo-3d.tsx"],"names":["MobileHeaderWraper","styled","div","isMenuOpen","colors","dark","white","displayWidth","tablet","MobileMenu","BurgerButton","span","headerHeight","mobile","BottomIcons","backgroundColors","formPromo","PhoneLinkStyled","PhoneLink","Desktop","Wrap","WrapDesktop","iconStyles","css","ViberIconStyled","Viber","viber","TelegramIconStyled","Telegram","telegram","WhatsappIconStyled","Whatsapp","whatsapp","IconWrapper","pageMetadata","uk","title","description","ru","en","svgStyle","HandshakeS","Cube","PensileS","Pensile","ProposalS","Proposal","FormColumn","mobileAfterBorder","vizualization","DivS","FormTitle","text","desktop","Posadka3dNew","data","useTranslation","i18n","t","useState","setIsMenuOpen","getPagePath","usePagePath","scrolled25Send","useRef","scrolled50Send","scrolled75Send","scrolled100Send","pagePath","language","useEffect","current","gtag","process","page_location","document","location","onScroll","block","getElementById","scrollPosition","scrollTop","windowHeight","clientHeight","bodyHeight","scrollHeight","blockMod","scrollPositionMob","windowHeightMob","bodyHeightMob","setTimeout","scrolledRationMob","scrolledRation","Math","ceil","sendEvent","eventCategory","id","onClick","fill","href","sendForm","sendConversion","placement","closeMenu","onMenuItemClick","phone","contactInformation","primaryPhone","color","target","aria-label","inverse","arrows","bottom","imagesData","query"],"mappings":"4FAAA,uiBA+CMA,EAAqBC,IAAOC,IAAV,+EAAGD,CAAH,iZAUA,qBAAGE,WACNC,IAAOC,KAAO,aAGzB,qBAAGF,WAA+BC,IAAOE,MAAQF,IAAOC,OAMjDD,IAAOC,KAQCE,IAAaC,QAIhCC,EAAaR,IAAOC,IAAV,uEAAGD,CAAH,4LAED,qBAAGE,WAA+B,OAAS,SAQlCC,IAAOC,KACNE,IAAaC,QAIhCE,EAAeT,IAAOU,KAAV,yEAAGV,CAAH,qJACLW,IAAaC,OACZD,IAAaC,QAUrBC,EAAcb,IAAOC,IAAV,wEAAGD,CAAH,0LAOOc,IAAiBC,UAIhBT,IAAaC,QAIhCS,EAAkBhB,YAAOiB,KAAV,4EAAGjB,CAAH,sGAGRG,IAAOE,MAIJF,IAAOE,OAIjBa,EAAUlB,IAAOC,IAAV,oEAAGD,CAAH,iGAKYM,IAAaC,QAIhCY,EAAOnB,IAAOC,IAAV,iEAAGD,CAAH,yIAQeM,IAAaC,QAIhCa,GAAcpB,IAAOC,IAAV,wEAAGD,CAAH,sJAEQM,IAAaC,QAWhCc,GAAaC,YAAH,gFAOVC,GAAkBvB,YAAOwB,KAAV,4EAAGxB,CAAH,kBACfqB,GACMlB,IAAOsB,OAEbC,GAAqB1B,YAAO2B,KAAV,+EAAG3B,CAAH,kBAClBqB,GACMlB,IAAOyB,UAEbC,GAAqB7B,YAAO8B,KAAV,gFAAG9B,CAAH,kBAClBqB,GACMlB,IAAO4B,UAEbC,GAAchC,IAAOC,IAAV,yEAAGD,CAAH,6FAQXiC,GAAe,CACjBC,GAAI,CACAC,MAAO,gCACPC,YACI,sEAERC,GAAI,CACAF,MAAO,gCACPC,YACI,qEAERE,GAAI,CACAH,MAAO,2BACPC,YACI,kFAING,GAAWjB,YAAH,kDAKRkB,GAAaxC,YAAOyC,KAAV,wEAAGzC,CAAH,QACVuC,IAEAG,GAAW1C,YAAO2C,KAAV,sEAAG3C,CAAH,QACRuC,IAEAK,GAAY5C,YAAO6C,KAAV,uEAAG7C,CAAH,QACTuC,IAEAO,GAAa9C,IAAOC,IAAV,wEAAGD,CAAH,wLAEV+C,IAIkBjC,IAAiBkC,eASnCC,GAAOjD,IAAOC,IAAV,kEAAGD,CAAH,yBAGJkD,GAAYlD,IAAOC,IAAV,uEAAGD,CAAH,2SAOT,mBACW,IADX,EAAGmD,KACD,SACehD,IAAOC,KADtB,wDAOiBE,IAAaC,OAKbD,IAAa8C,SAgSvBC,UA3RM,SAAC,GAAuC,IAArCC,EAAqC,EAArCA,KAAqC,EACrCC,cAAZC,EADiD,EACjDA,KAAMC,EAD2C,EAC3CA,EAD2C,EAErBC,oBAAS,GAAtCxD,EAFkD,KAEtCyD,EAFsC,KAGjDC,EAAgBC,cAAhBD,YACFE,EAAiBC,kBAAO,GACxBC,EAAiBD,kBAAO,GACxBE,EAAiBF,kBAAO,GACxBG,EAAkBH,kBAAO,GAEzBI,EAAWP,EAAYJ,EAAKY,UAGlCC,qBAAU,WACNP,EAAeQ,SAAU,EACzBN,EAAeM,SAAU,EACzBL,EAAeK,SAAU,EACzBJ,EAAgBI,SAAU,EAC1BC,YAAK,SAAaC,gBAAqB,CAEnCC,cAAeC,SAASC,aAE7B,CAACR,IAEJ,IAAMS,EAAW,WACb,IAAMC,EAAQH,SAASI,eAAe,UAChCC,EAAiBF,EAAOG,UACxBC,EAAeJ,EAAOK,aACtBC,EAAaN,EAAOO,aACpBC,EAAWX,SAASI,eAAe,QACnCQ,EAAoBD,EAAUL,UAC9BO,EAAkBF,EAAUH,aAC5BM,EAAgBH,EAAUD,aAChCK,YAAW,WACP,IAwCUC,EAvCAC,EAuCAD,EAAoBE,KAAKC,MACzBP,EAAoBC,GAAmBC,EACrC,KAGJX,IACCX,EAAiBI,SAClBoB,GAAqB,KAErBI,YAAU,MAAO,CACbC,cAAe,gBAEnB7B,EAAiBI,SAAU,GAK3BO,IACCZ,EAAgBK,SACjBoB,GAAqB,IAErBI,YAAU,KAAM,CACZC,cAAe,gBAEnB9B,EAAgBK,SAAU,GAK1BO,IACCb,EAAgBM,SACjBoB,GAAqB,IAErBI,YAAU,KAAM,CACZC,cAAe,gBAEnB/B,EAAgBM,SAAU,GAK1BO,IACCf,EAAgBQ,SACjBoB,GAAqB,KAErBI,YAAU,KAAM,CACZC,cAAe,gBAEnBjC,EAAgBQ,SAAU,GAvFxBqB,EAAiBC,KAAKC,MACtBd,EAAiBE,GAAgBE,EAAc,KAGjDN,IACCX,EAAiBI,SAClBqB,GAAkB,KAElBG,YAAU,MAAO,CACbC,cAAe,gBAEnB7B,EAAiBI,SAAU,GAI3BO,IAAUZ,EAAgBK,SAAWqB,GAAkB,IACvDG,YAAU,KAAM,CACZC,cAAe,gBAEnB9B,EAAgBK,SAAU,GAI1BO,IAAUb,EAAgBM,SAAWqB,GAAkB,IACvDG,YAAU,KAAM,CACZC,cAAe,gBAEnB/B,EAAgBM,SAAU,GAI1BO,IAAUf,EAAgBQ,SAAWqB,GAAkB,KACvDG,YAAU,KAAM,CACZC,cAAe,gBAEnBjC,EAAgBQ,SAAU,KAyDnC,MAEP,OACI,6BACI,kBAAC,IAAD,CAAYhB,KAAMrB,KAClB,kBAACd,EAAD,CAAM6E,GAAG,OAAOpB,SAAUA,GACtB,kBAAC7E,EAAD,CAAoBG,WAAYA,GAC5B,kBAAC,IAAD,MACA,kBAACO,EAAD,CACIwF,QAAS,WACLtC,GAAezD,KAGnB,kBAAC,IAAD,CAAWgG,KAAM/F,IAAOC,QAE5B,uBACI+F,KAAM,oBACNF,QAAS,WACLG,YAAS,4BAA6B,IACtCC,YAAe,cACfP,YAAU,QAAS,CACfC,cAAe,aACfO,UAAW,oBAPvB,sBAcJ,kBAAC9F,EAAD,CAAYN,WAAYA,GACpB,kBAACH,EAAD,CAAoBG,WAAYA,GAC5B,kBAAC,IAAD,CAAkBqG,UAAW5C,IAC7B,kBAAClD,EAAD,CACIwF,QAAS,WACLtC,GAAezD,KAGnB,kBAAC,IAAD,CAASgG,KAAM/F,IAAOE,UAI9B,kBAAC,IAAD,CAAUmG,gBAAiB,kBAAM7C,GAAc,MAC/C,kBAAC3C,EAAD,CACIyF,MAAOC,IAAmBC,aAC1BL,UAAW,qBAEX,kBAAC,IAAD,CAAWM,MAAOzG,IAAOE,MAAO8C,KAAMM,EAAE,WACpC,kBAAC,IAAD,CAAkBmD,MAAOzG,IAAOE,WAI5C,kBAACQ,EAAD,KACI,kBAACmB,GAAD,KACI,uBACImE,KAAK,sCACLU,OAAO,QACPZ,QAAS,WACLG,YAAS,2BAA4B,IACrCC,YAAe,mBACfP,YAAU,aAAc,CACpBC,cAAe,kBACfO,UAAW,oBAInB,kBAAC/E,GAAD,CAAiBuF,aAAW,iBAEhC,uBACIX,KAAK,8BACLU,OAAO,QACPZ,QAAS,WACLG,YAAS,8BAA+B,IACxCC,YAAe,sBACfP,YAAU,aAAc,CACpBC,cAAe,qBACfO,UAAW,oBAInB,kBAACzE,GAAD,CAAoBiF,aAAW,qBAEnC,uBACIX,KAAK,oCACLU,OAAO,SAEP,kBAACnF,GAAD,CACIoF,aAAW,kBACXb,QAAS,WACLG,YAAS,8BAA+B,IACxCC,YAAe,sBACfP,YAAU,aAAc,CACpBC,cAAe,qBACfO,UAAW,wBAOnC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAsBhD,KAAMA,IAC5B,kBAAC,IAAD,CAAayD,SAAO,GAAEtD,EAAE,oBACxB,kBAAC,IAAD,CAASuD,QAAM,EAACC,QAAM,IACtB,kBAAC,IAAD,MACA,kBAACnE,GAAD,KACI,kBAACI,GAAD,CAAWC,MAAI,GACVM,EAAE,+BAGP,kBAACR,GAAD,KACI,4BACI,kBAACL,GAAD,MADJ,IACmBa,EAAE,2BAErB,4BACI,kBAACf,GAAD,MACCe,EAAE,4BAEP,4BACI,kBAACjB,GAAD,MADJ,IACoBiB,EAAE,sBAI1B,kBAAC,IAAD,CAAe6C,UAAU,sBAIjC,kBAACpF,EAAD,CAAS8E,GAAG,SAASpB,SAAUA,GAC3B,kBAAC,IAAD,MACA,kBAACxD,GAAD,KACI,kBAAC,IAAD,CAAa8F,WAAY5D,IACzB,kBAAC,IAAD,CAAayD,SAAO,GAAEtD,EAAE,oBACxB,kBAAC,IAAD,CAA6BH,KAAMA,IAgBnC,kBAAC,IAAD,MACA,kBAAC,IAAD,KAAcG,EAAE,oBAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAA+B6C,UAAU,kBAStD,IAAMa,GAAQ","file":"component---src-pages-promo-3-d-tsx-0fbcab6bea547ad3b87d.js","sourcesContent":["import { RunningLine } from 'components/RunningLine'\n\nimport { Reviews } from 'blocks/Reviews'\n\nimport { HelmetFunc } from 'components/PageMetaData'\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { LanguageSwitcher } from 'i18n/LanguageSwitcher'\nimport ExitSvg from 'assets/icons/Exit.svg'\nimport BurgerSvg from 'assets/icons/Burger.svg'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { Logo } from 'components/Logo'\nimport { displayWidth } from 'styles/width'\nimport { MainMenu } from 'blocks/Header/MainMenu'\nimport { contactInformation } from 'components/contactInformation'\nimport { headerHeight } from 'styles/height'\nimport Viber from 'assets/icons/Viber.svg'\nimport Telegram from 'assets/icons/Telegram.svg'\nimport Whatsapp from 'assets/icons/Whatsapp.svg'\nimport { RoundText } from 'components/RoundText'\nimport { PhoneSvgAnimated } from 'components/PhoneSvgAnimated'\nimport { useTranslation } from 'react-i18next'\nimport { sendConversion, sendEvent, gtag } from 'tracking'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { sendForm } from 'components/form/api'\nimport Proposal from 'assets/icons/proposal.svg'\nimport Pensile from 'assets/icons/pensile.svg'\nimport Cube from 'assets/icons/cube.svg'\n\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { ComercialForm } from 'components/form/CommercialForm'\n\nimport { Header } from 'blocks/Header/Header'\nimport { graphql } from 'gatsby'\nimport { imagesDataProp } from './promo'\nimport { usePagePath } from 'hooks/usePagePath'\nimport { PromoHeroMobile99 } from 'blocks/Heros/PromoHeroMobile99'\nimport {\n    Advantages3dQuestion,\n    Advantages3dQuestionDesktop,\n} from 'blocks/advantages3dQuestion'\nimport { PromoHero3d } from 'blocks/Heros/PromoHero3d'\nimport { Advantages3dWhy } from 'blocks/advantages3dWhy'\nimport { CommercialProposalFormBlock3d } from 'blocks/ComercialProposalForm3d'\n\nconst MobileHeaderWraper = styled.div<{ isMenuOpen: boolean }>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 65px;\n    z-index: 10;\n    background-color: ${({ isMenuOpen }) =>\n        isMenuOpen ? colors.dark : '#ebebeb'};\n\n    border-bottom: 1px solid\n        ${({ isMenuOpen }) => (isMenuOpen ? colors.white : colors.dark)};\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        height: inherit;\n        color: ${colors.dark};\n        font-size: 22px;\n        font-weight: 600;\n        letter-spacing: 0;\n        line-height: 28px;\n        margin-right: 20px;\n        white-space: nowrap;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst MobileMenu = styled.div<{ isMenuOpen: boolean }>`\n    position: fixed;\n    display: ${({ isMenuOpen }) => (isMenuOpen ? 'flex' : 'none')};\n    flex-direction: column;\n    justify-content: space-between;\n    top: 66px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    background-color: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst BurgerButton = styled.span`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    display: flex;\n    box-sizing: border-box;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    margin-right: 10px;\n    cursor: pointer;\n`\n\nconst BottomIcons = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    height: 60px;\n    width: 100%;\n    z-index: 10;\n    background-color: ${backgroundColors.formPromo};\n    display: flex;\n    align-items: center;\n    border-top: 1px solid #000;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst PhoneLinkStyled = styled(PhoneLink)`\n    display: flex;\n    flex-direction: column;\n    color: ${colors.white};\n    margin-bottom: 80px;\n    font-weight: normal;\n    svg {\n        fill: ${colors.white};\n    }\n`\n\nconst Desktop = styled.div`\n    position: relative;\n    display: none;\n    width: 100%;\n    height: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst Wrap = styled.div`\n    top: 66px;\n    height: calc(100vh - 126px);\n    left: 0;\n    right: 0;\n    bottom: 60px;\n    position: absolute;\n    overflow: auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst WrapDesktop = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        top: 80px;\n        height: calc(100vh - 80px);\n        left: 0;\n        right: 0;\n        bottom: 60px;\n        position: absolute;\n        overflow: auto;\n    }\n`\nconst iconStyles = css`\n    width: 38px;\n    height: 38px;\n    margin: 4px 13px;\n    cursor: pointer;\n    pointer-events: auto;\n`\nconst ViberIconStyled = styled(Viber)`\n    ${iconStyles};\n    fill: ${colors.viber};\n`\nconst TelegramIconStyled = styled(Telegram)`\n    ${iconStyles};\n    fill: ${colors.telegram};\n`\nconst WhatsappIconStyled = styled(Whatsapp)`\n    ${iconStyles};\n    fill: ${colors.whatsapp};\n`\nconst IconWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-end;\n    padding-right: 13px;\n`\n\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект квартири за $99',\n        description:\n            \"Виконаємо дизайн проект інтер'єру усієї квартири за 99 доларів США\",\n    },\n    ru: {\n        title: 'Дизайн проект квартиры за $99',\n        description:\n            'Выполним дизайн проект интерьера всей квартиры за 99 долларов США',\n    },\n    en: {\n        title: 'Apartment design for $99',\n        description:\n            'We will design the interior project of the entire apartment for 99 US dollars',\n    },\n}\n\nconst svgStyle = css`\n    width: 40px;\n    min-width: 40px;\n    margin-right: 10px;\n`\nconst HandshakeS = styled(Cube)`\n    ${svgStyle}\n`\nconst PensileS = styled(Pensile)`\n    ${svgStyle}\n`\nconst ProposalS = styled(Proposal)`\n    ${svgStyle}\n`\nconst FormColumn = styled.div`\n    position: relative;\n    ${mobileAfterBorder};\n    width: 100%;\n    padding: 0 24px 30px;\n    box-sizing: border-box;\n    background-color: ${backgroundColors.vizualization};\n    h3 {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        line-height: 24px;\n        padding: 10px 0;\n    }\n`\nconst DivS = styled.div`\n    margin: 0 10px 30px;\n`\nconst FormTitle = styled.div<{ text?: boolean }>`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 32px;\n    line-height: 40px;\n    letter-spacing: 1px;\n    ${({ text }) =>\n        text === true\n            ? `color:${colors.dark};font-size: 24px;`\n            : `color: #437b13;font-size: 34px;`}\n\n    text-align: center;\n    padding: 40px 0 24px;\n    white-space: pre-wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 60px 0 24px;\n        width: 350px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\n\nconst Posadka3dNew = ({ data }: { data: imagesDataProp }) => {\n    const { i18n, t } = useTranslation()\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n    const { getPagePath } = usePagePath()\n    const scrolled25Send = useRef(false)\n    const scrolled50Send = useRef(false)\n    const scrolled75Send = useRef(false)\n    const scrolled100Send = useRef(false)\n\n    const pagePath = getPagePath(i18n.language)\n\n    // Reset scroll event when page changes\n    useEffect(() => {\n        scrolled25Send.current = false\n        scrolled50Send.current = false\n        scrolled75Send.current = false\n        scrolled100Send.current = false\n        gtag('config', `${process.env.GA_ID}`, {\n            // eslint-disable-next-line camelcase\n            page_location: document.location,\n        })\n    }, [pagePath])\n\n    const onScroll = () => {\n        const block = document.getElementById('blockF')\n        const scrollPosition = block!.scrollTop\n        const windowHeight = block!.clientHeight\n        const bodyHeight = block!.scrollHeight\n        const blockMod = document.getElementById('wrap')\n        const scrollPositionMob = blockMod!.scrollTop\n        const windowHeightMob = blockMod!.clientHeight\n        const bodyHeightMob = blockMod!.scrollHeight\n        setTimeout(() => {\n            const trackScroll = () => {\n                const scrolledRation = Math.ceil(\n                    ((scrollPosition + windowHeight) / bodyHeight) * 100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRation >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled75Send!.current && scrolledRation >= 75) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled50Send!.current && scrolledRation >= 50) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled25Send!.current && scrolledRation >= 25) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            const trackScrollMob = () => {\n                const scrolledRationMob = Math.ceil(\n                    ((scrollPositionMob + windowHeightMob) / bodyHeightMob) *\n                        100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRationMob >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled75Send!.current &&\n                    scrolledRationMob >= 75\n                ) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled50Send!.current &&\n                    scrolledRationMob >= 50\n                ) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled25Send!.current &&\n                    scrolledRationMob >= 25\n                ) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            trackScrollMob()\n            trackScroll()\n        }, 700)\n    }\n    return (\n        <div>\n            <HelmetFunc data={pageMetadata} />\n            <Wrap id=\"wrap\" onScroll={onScroll}>\n                <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                    <Logo />\n                    <BurgerButton\n                        onClick={() => {\n                            setIsMenuOpen(!isMenuOpen)\n                        }}\n                    >\n                        <BurgerSvg fill={colors.dark} />\n                    </BurgerButton>\n                    <a\n                        href={'tel:+380982117690'}\n                        onClick={() => {\n                            sendForm(`Posadka3dHeaderPhoneClick`, {})\n                            sendConversion('PhoneClick')\n                            sendEvent('Phone', {\n                                eventCategory: 'PhoneClick',\n                                placement: 'PosadkaHeader',\n                            })\n                        }}\n                    >\n                        +38 098 211 76 90\n                    </a>\n                </MobileHeaderWraper>\n                <MobileMenu isMenuOpen={isMenuOpen}>\n                    <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                        <LanguageSwitcher closeMenu={setIsMenuOpen} />\n                        <BurgerButton\n                            onClick={() => {\n                                setIsMenuOpen(!isMenuOpen)\n                            }}\n                        >\n                            <ExitSvg fill={colors.white} />\n                        </BurgerButton>\n                    </MobileHeaderWraper>\n\n                    <MainMenu onMenuItemClick={() => setIsMenuOpen(false)} />\n                    <PhoneLinkStyled\n                        phone={contactInformation.primaryPhone}\n                        placement={'MobileMenuPosadka'}\n                    >\n                        <RoundText color={colors.white} text={t('callUs')}>\n                            <PhoneSvgAnimated color={colors.white} />\n                        </RoundText>\n                    </PhoneLinkStyled>\n                </MobileMenu>\n                <BottomIcons>\n                    <IconWrapper>\n                        <a\n                            href=\"viber://chat?number=%2B380982117690\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobile3dViberIcon`, {})\n                                sendConversion('SocialIconViber')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconViber',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <ViberIconStyled aria-label=\"ViberButton\" />\n                        </a>\n                        <a\n                            href=\"https://wa.me/+380958363420\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobile3dWhatsAppIcon`, {})\n                                sendConversion('SocialIconWhatsApp')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconWhatsApp',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <WhatsappIconStyled aria-label=\"Whatsapp Button\" />\n                        </a>\n                        <a\n                            href=\"tg://resolve?domain=ClearLine_bot\"\n                            target=\"blank\"\n                        >\n                            <TelegramIconStyled\n                                aria-label=\"Telegram Button\"\n                                onClick={() => {\n                                    sendForm(`PosadkaMobile3dTelegramIcon`, {})\n                                    sendConversion('SocialIconTelegram')\n                                    sendEvent('SocialIcon', {\n                                        eventCategory: 'SocialIconTelegram',\n                                        placement: 'PosadkaMobile',\n                                    })\n                                }}\n                            />\n                        </a>\n                    </IconWrapper>\n                </BottomIcons>\n                <PromoHeroMobile99 />\n                <Advantages3dQuestion data={data} />\n                <RunningLine inverse>{t('designProject99')}</RunningLine>\n                <Reviews arrows bottom />\n                <Advantages3dWhy />\n                <FormColumn>\n                    <FormTitle text>\n                        {t('ComercialProposalFormTitle')}\n                    </FormTitle>\n\n                    <DivS>\n                        <h3>\n                            <ProposalS /> {t('comercialForm.proposal')}\n                        </h3>\n                        <h3>\n                            <PensileS />\n                            {t('comercialForm.example3d')}\n                        </h3>\n                        <h3>\n                            <HandshakeS /> {t('comercialForm.3d')}\n                        </h3>\n                    </DivS>\n\n                    <ComercialForm placement=\"PosadkaMobile3D\" />\n                </FormColumn>\n            </Wrap>\n\n            <Desktop id=\"blockF\" onScroll={onScroll}>\n                <Header />\n                <WrapDesktop>\n                    <PromoHero3d imagesData={data} />\n                    <RunningLine inverse>{t('designProject99')}</RunningLine>\n                    <Advantages3dQuestionDesktop data={data} />\n                    {/* \n                    <Connection text={t('connection.text')}>\n                        <ButtonWithModal\n                            modalTitle={t('connection.modalTitle')}\n                            modalDescription={t('connection.modalDescription')}\n                            buttonLabel={t('connection.buttonLabel')}\n                            placeholder={t('connection.placeholder')}\n                            submitLabel={t('connection.submitLabel')}\n                            tracking={{\n                                conversionType: 'CallbackFromPosadka',\n                                eventCategory: 'CallbackFromPosadka',\n                            }}\n                        />\n                    </Connection> */}\n\n                    <Reviews />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                    <Advantages3dWhy />\n                    <CommercialProposalFormBlock3d placement=\"Posadka3D\" />\n                </WrapDesktop>\n            </Desktop>\n        </div>\n    )\n}\n\nexport default Posadka3dNew\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n        allAdvantages3DposadkaYaml {\n            edges {\n                node {\n                    items {\n                        question\n                        answer\n                        svg\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}