{"version":3,"sources":["webpack:///./src/assets/images/tableFlower.svg","webpack:///./src/blocks/ProjectStructure.tsx","webpack:///./src/blocks/Heros/PromoHero.tsx","webpack:///./src/blocks/Advantages3D.tsx","webpack:///./src/blocks/Project3D.tsx","webpack:///./src/blocks/SelectionOfPaints.tsx","webpack:///./src/blocks/ShowMoreBlock.tsx","webpack:///./src/pages/promo.tsx","webpack:///./src/assets/images/frame.svg","webpack:///./src/components/JumpingArrow.tsx","webpack:///./src/blocks/Visualization3d.tsx","webpack:///./src/blocks/VisualizationAdvantages.tsx"],"names":["React","TableFlower","props","createElement","defaultProps","module","exports","default","ProjectStructureWrapper","styled","div","backgroundColors","promotion","displayWidth","tablet","colors","dark","mobileAfterBorder","IconListStyled","IconList","HeroColumn","LeftSidebar","RightSidebar","white","PriceWrapper","span","Price","p","accentText","ImgWrapper","ImgBlock","desktop","ImageSvg","tableFlower","Image","Img","TitleStyled","Title","indent","heroColumnTablet","heroColumnDesktop","ProjectStructure","imagesData","id","useTranslation","i18n","t","data","useStaticQuery","projectStructureData","getDataByLanguage","allProjectStructureYaml","language","title","items","price","imageTable","getImageByImageName","allImageSharp","image","columns","tabletColumns","fluid","loading","fill","PromoHeroWraper","headerHeight","mobile","headerBg","PromoHeroColumn","ContainerStyled","Container","JumpingArrowWrapper","LampIconStyled","LampIcon","TitleWrapper","TitleH1","MobileImage","DesktopImageRight","sofaDesktopRight","DesktopImageLeft","ButtonStyled","Button","LocalizedLinkStyled","LocalizedLinkAnchor","For","PromoHero","promoHeroData","allPromoHeroYaml","imageSofa","imageSofaMobile","imageMobile","to","onClick","sendEvent","eventCategory","placement","target","buttonText","JumpingArrow","Advantages3DWrapper","project","DesktopImageTop","frame","ImageMobile","ContainerS","DesktopImage","Advantages3D","advantages3DData","allAdvantages3DYaml","proposalImage","imageFluid","imgStyle","objectFit","Visualization3dWrapper","SubTitle","h3","ImgStyled","Project3D","project3DYaml","allProject3DYaml","subTitle","SelectionOfPaintWrapper","services","TitleS","SelectionOfPaints","setAdvantagesServicesIsVisible","selectionOfPaintYaml","allSelectionOfPaintYaml","Wrapper","ButtonDesktop","ButtonMobile","ShowMore","advantages3DIsVisible","setAdvantages3DIsVisible","advantagesServicesIsVisible","visualizationAdvantagesIsVisible","setVisualizationAdvantagesIsVisible","showMoreHandle","setTimeout","window","document","getElementById","scrollIntoView","block","behavior","pageMetadata","uk","description","ru","en","query","Promo","useState","Layout","noFooter","RunningLine","Reviews","inverse","DefaultFormBlock","withPhoneMobile","tracking","conversionType","AdvantagesService","Visualization3d","VisualizationAdvantages","Frame","jump","keyframes","ArrowWrapper","Arrow","BigShevronDown","Line","vizualization","DesctopWrapper","MobileWrapper","notButton","visualization3DYaml","allVisualization3DYaml","commonImages","edges","find","elem","node","parent","name","sliderSettings","infinite","responsive","breakpoint","settings","arrows","dots","images","map","item","index","ImageNode","key","alt","mobileImages","VisualizationAdvantagesWrapper","allVisualizationAdvantagesYaml"],"mappings":"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","file":"component---src-pages-promo-tsx-e3cad2a52da9f529c822.js","sourcesContent":["var React = require('react');\n\nfunction TableFlower (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"m68.242 120.01-2.6493 100.86-25.308 31.105 14.556 36.593 56.392 0.075 17.902-40.137-35.56-126.3-25.332-2.195z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#494848\",\"key\":0}),React.createElement(\"path\",{\"d\":\"m72.611 119.55s-13.928-54.17 18.293-76.628l17.361-12.342\",\"stroke\":\"#0C0C0C\",\"key\":1}),React.createElement(\"path\",{\"d\":\"m59.977 28.148s-7.7848 29.704 23.78 62.305c8.772 8.2873 3.8471 30.418 3.8471 30.418\",\"stroke\":\"#0C0C0C\",\"key\":2}),React.createElement(\"path\",{\"d\":\"m124.55 27.373s11.691 19.71-19.069 50.267c-21.185 22.292-23.392 42.615-23.392 42.615\",\"stroke\":\"#0C0C0C\",\"key\":3}),React.createElement(\"path\",{\"d\":\"m136.02 59.271s-3.242 24.55-23.102 38.055c-19.86 13.505-22.839 24.265-22.839 24.265\",\"stroke\":\"#0C0C0C\",\"key\":4}),React.createElement(\"path\",{\"d\":\"m59.756 52.196s-7.4092-11.033-17.418 1.1512c9.4438 9.0295 17.418-1.1512 17.418-1.1512z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":5}),React.createElement(\"path\",{\"d\":\"m88.32 44.351s6.0296-11.285-10.026-14.498c-3.1893 12.148 10.026 14.498 10.026 14.498z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":6}),React.createElement(\"path\",{\"d\":\"m109.68 72.383s6.029-11.285-10.026-14.498c-3.1892 12.148 10.026 14.498 10.026 14.498z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":7}),React.createElement(\"path\",{\"d\":\"m119.38 90.272s9.492-8.878-4.136-16.892c-7.184 10.576 4.136 16.892 4.136 16.892z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":8}),React.createElement(\"path\",{\"d\":\"m121.69 57.7s6.029-11.286-10.026-14.498c-3.189 12.148 10.026 14.498 10.026 14.498z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":9}),React.createElement(\"path\",{\"d\":\"m131.04 73.718s6.029-11.286-10.026-14.498c-3.189 12.148 10.026 14.498 10.026 14.498z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":10}),React.createElement(\"path\",{\"d\":\"m134.82 59.14s13.16-2.4331 6.916-16.13c-12.309 5.0348-6.916 16.13-6.916 16.13z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":11}),React.createElement(\"path\",{\"d\":\"m131.36 76.385s5.476 11.945 17.997 2.1325c-7.933-10.404-17.997-2.1325-17.997-2.1325z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":12}),React.createElement(\"path\",{\"d\":\"m116.33 95.012s2.617 13.234 17.424 6.5684c-5.429-12.308-17.424-6.5684-17.424-6.5684z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":13}),React.createElement(\"path\",{\"d\":\"m66.43 72.219s-7.4092-11.033-17.418 1.1512c9.4438 9.0295 17.418-1.1512 17.418-1.1512z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":14}),React.createElement(\"path\",{\"d\":\"m69.744 107.9s0.7438-12.34-15.035-9.5475c2.1706 12.112 15.035 9.5475 15.035 9.5475z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":15}),React.createElement(\"path\",{\"d\":\"m69.744 93.22s0.744-12.34-15.035-9.5476c2.1708 12.112 15.035 9.5476 15.035 9.5476z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":16}),React.createElement(\"path\",{\"d\":\"m59.913 28.464s12.83-1.7994 7.3011-16.196c-12.105 4.5179-7.3011 16.196-7.3011 16.196z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":17}),React.createElement(\"path\",{\"d\":\"m63.918 60.501s12.83-1.8002 7.301-16.196c-12.105 4.5171-7.301 16.196-7.301 16.196z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":18}),React.createElement(\"path\",{\"d\":\"m82.606 87.199s12.83-1.8002 7.301-16.196c-12.105 4.5178-7.301 16.196-7.301 16.196z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":19}),React.createElement(\"path\",{\"d\":\"m97.24 39.152s-4.8344 11.94 10.934 14.338c2.018-12.668-10.934-14.338-10.934-14.338z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":20}),React.createElement(\"path\",{\"d\":\"m107.97 31.134s12.83-1.8002 7.301-16.196c-12.104 4.5177-7.301 16.196-7.301 16.196z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":21}),React.createElement(\"path\",{\"d\":\"m126.82 46.199s10.406 7.2798 16.371-7.0915c-11.76-4.7802-16.371 7.0915-16.371 7.0915z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":22}),React.createElement(\"path\",{\"d\":\"m124.93 28.193s12.025-4.1428 3.816-16.939c-10.783 6.6185-3.816 16.939-3.816 16.939z\",\"clipRule\":\"evenodd\",\"fillRule\":\"evenodd\",\"stroke\":\"#0C0C0C\",\"key\":23})]);\n}\n\nTableFlower.defaultProps = {\"fill\":\"none\",\"viewBox\":\"0 0 185 301\"};\n\nmodule.exports = TableFlower;\n\nTableFlower.default = TableFlower;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconList } from 'components/IconList'\nimport { displayWidth } from 'styles/width'\nimport tableFlower from 'assets/images/tableFlower.svg'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { imagesDataProp } from 'pages/promo'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconList)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.promotion};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst PriceWrapper = styled.span`\n    display: inline-block;\n    width: 200px;\n    position: relative;\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 80px;\n        position: absolute;\n        top: -10px;\n        line-height: 30px;\n        letter-spacing: 1.11111px;\n    }\n`\nconst ImgWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nconst ImgBlock = styled.div`\n    position: relative;\n    align-self: flex-end;\n    width: 140px;\n    height: 10px;\n    @media (min-width: 450px) {\n        width: 185px;\n        height: 300px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 140px;\n        height: 200px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 185px;\n        height: 300px;\n    }\n`\nconst ImageSvg = styled(tableFlower)`\n    width: 100%;\n    height: 2000%;\n    position: absolute;\n    bottom: -30px;\n    fill: ${backgroundColors.promotion};\n    @media (min-width: 450px) {\n        bottom: -50px;\n        height: 100%;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        right: 60%;\n        bottom: -30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        right: 70%;\n        bottom: -40px;\n    }\n`\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    width: 50%;\n    height: auto;\n    align-self: flex-end;\n    margin-right: 3px;\n    @media (orientation: landscape) {\n        max-width: 50vw;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 90%;\n    }\n`\nconst TitleStyled = styled(Title)`\n    margin: 30px auto 100px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\n\nexport const ProjectStructure = ({\n    imagesData,\n    id,\n}: {\n    imagesData: imagesDataProp\n    id?: string\n}) => {\n    const { i18n, t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allProjectStructureYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        image\n                        items {\n                            content\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureYaml,\n        i18n.language\n    )\n    const { title, items, price } = projectStructureData\n    const imageTable = getImageByImageName(\n        imagesData.allImageSharp,\n        projectStructureData.image\n    )\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        {title}\n                        <br />\n                        {t('for')}\n                        <PriceWrapper>\n                            <Price>{price}</Price>\n                        </PriceWrapper>\n                    </TitleStyled>\n                    <ImgWrapper>\n                        <ImgBlock>\n                            <ImageSvg />\n                        </ImgBlock>\n                        <Image fluid={imageTable.fluid} loading=\"eager\" />\n                    </ImgWrapper>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { headerBg } from 'styles/headerBg'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport { Button } from 'components/Button'\nimport LampIcon from 'assets/icons/Lamp.svg'\nimport sofaDesktopRight from 'assets/images/sofaDesktopRight.svg'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\nimport { LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { TitleH1 } from 'components/TitleComponent'\nimport { useTranslation } from 'react-i18next'\nimport { sendEvent } from 'tracking'\nimport { imagesDataProp } from 'pages/promo'\n\nconst PromoHeroWraper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    height: calc(100vh - ${headerHeight.mobile} - 100px);\n    min-height: 503px;\n    border-bottom: 1px solid ${colors.dark};\n    :before {\n        ${headerBg}\n    }\n\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 500px;\n        border-bottom: none;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        height: 630px;\n    }\n`\n\nconst PromoHeroColumn = styled.div`\n    display: none;\n    :first-child {\n        display: flex;\n    }\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    flex-grow: 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        position: relative;\n        border-left: none;\n        justify-content: center;\n        max-width: calc((100vw - 160px) / 3);\n        :nth-child(3n) {\n            border-right: none;\n        }\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n    }\n`\n\nconst JumpingArrowWrapper = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        align-self: center;\n        justify-content: center;\n    }\n`\nconst LampIconStyled = styled(LampIcon)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        width: 190px;\n        right: 10px;\n        bottom: -55px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 265px;\n        bottom: 30px;\n    }\n`\nconst TitleWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 375px;\n    }\n`\nconst TitleStyled = styled(TitleH1)`\n    font-size: 50px;\n    line-height: 55px;\n    letter-spacing: 0.666667px;\n    overflow: visible;\n    text-align: center;\n    color: #296963;\n    @media (max-width: 355px) {\n        font-size: 40px;\n        line-height: 45px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        box-sizing: border-box;\n        padding-left: 60px;\n        font-size: 56px;\n        line-height: 56px;\n        letter-spacing: 0.8px;\n        text-align: left;\n        margin-left: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 60px;\n        line-height: 64px;\n        padding-left: 0px;\n        margin-left: 48px;\n    }\n`\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 64px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    width: 100%;\n    text-align: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        position: absolute;\n        left: 350px;\n        bottom: 30px;\n        font-size: 133px;\n        line-height: 90px;\n        letter-spacing: 1.52778px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 46px;\n        line-height: 115px;\n    }\n`\nconst MobileImage = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: auto;\n    align-self: flex-end;\n    @media (orientation: landscape) {\n        max-width: 50vw;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst DesktopImageRight = styled(sofaDesktopRight)`\n    display: none;\n    width: 75%;\n    fill: ${backgroundColors.promotion};\n    stroke: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: -1px;\n        bottom: 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: 55px;\n    }\n`\nconst DesktopImageLeft = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    width: 78%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        left: 11%;\n        bottom: -100px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        bottom: -136px;\n    }\n`\nconst ButtonStyled = styled(Button)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 30px 0;\n    }\n`\nconst LocalizedLinkStyled = styled(LocalizedLinkAnchor)`\n    text-decoration: none;\n`\nconst For = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-size: 50px;\n    line-height: 55px;\n    letter-spacing: 0.666667px;\n    text-align: center;\n    color: #296963;\n    @media (max-width: 355px) {\n        font-size: 40px;\n        line-height: 45px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        position: relative;\n    }\n`\nexport const PromoHero = ({ imagesData }: { imagesData: imagesDataProp }) => {\n    const { t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allPromoHeroYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        buttonText\n                        image\n                        imageMobile\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const promoHeroData = getDataByLanguage(\n        data.allPromoHeroYaml,\n        i18n.language\n    )\n\n    const imageSofa = getImageByImageName(\n        imagesData.allImageSharp,\n        promoHeroData.image\n    )\n    const imageSofaMobile = getImageByImageName(\n        imagesData.allImageSharp,\n        promoHeroData.imageMobile\n    )\n    return (\n        <PromoHeroWraper>\n            <ContainerStyled columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                <PromoHeroColumn>\n                    <TitleWrapper>\n                        <TitleStyled>{promoHeroData.title}</TitleStyled>\n                        <Price>\n                            <For>{t('for')} </For>\n                            {promoHeroData.price}\n                        </Price>\n                    </TitleWrapper>\n                    <LocalizedLinkStyled\n                        to={'/promo/#projectStructure'}\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'ShowMoreButton',\n                                placement: 'PromoHero',\n                                target: 'ProjectStructure',\n                            })\n                        }}\n                    >\n                        <ButtonStyled>\n                            <p>{promoHeroData.buttonText}</p>\n                        </ButtonStyled>\n                    </LocalizedLinkStyled>\n                    <JumpingArrowWrapper>\n                        <JumpingArrow />\n                    </JumpingArrowWrapper>\n\n                    <MobileImage\n                        fluid={imageSofaMobile.fluid}\n                        loading=\"eager\"\n                    />\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <DesktopImageLeft fluid={imageSofa.fluid} loading=\"eager\" />\n                </PromoHeroColumn>\n                <PromoHeroColumn>\n                    <DesktopImageRight />\n                    <LampIconStyled />\n                </PromoHeroColumn>\n            </ContainerStyled>\n        </PromoHeroWraper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconList } from 'components/IconList'\nimport { displayWidth } from 'styles/width'\nimport frame from 'assets/images/frame.svg'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { imagesDataProp } from 'pages/promo'\n\nconst Advantages3DWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.project};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconList)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst DesktopImageTop = styled(frame)`\n    display: none;\n    width: 30%;\n    height: auto;\n    align-self: flex-end;\n    margin-right: 20px;\n    color: transparent;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst ImageMobile = styled(Img)<{ fluid: FluidObject }>`\n    width: 50%;\n    height: auto;\n    align-self: flex-end;\n    margin-right: 20px;\n    color: transparent;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n        overflow: hidden;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        min-width: 395.66px;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.project};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nconst ContainerS = styled(Container)`\n    padding-right: 1px;\n    box-sizing: border-box;\n`\nconst DesktopImage = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 100%;\n        left: 30%;\n        overflow: hidden;\n    }\n`\nexport const Advantages3D = ({\n    imagesData,\n}: {\n    imagesData: imagesDataProp\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allAdvantages3DYaml {\n                edges {\n                    node {\n                        title\n                        items {\n                            content\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const advantages3DData = getDataByLanguage(\n        data.allAdvantages3DYaml,\n        i18n.language\n    )\n    const { title, items } = advantages3DData\n    const proposalImage = getImageByImageName(\n        imagesData.allImageSharp,\n        'comercialProposalImage.webp'\n    )\n    const imageFluid = getImageByImageName(\n        imagesData.allImageSharp,\n        'fikus.webp'\n    )\n    return (\n        <Advantages3DWrapper>\n            <LeftSidebar />\n            <ContainerS columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n                    <ImageMobile fluid={imageFluid.fluid} />\n                    <DesktopImageTop />\n                    <DesktopImage\n                        fluid={proposalImage.fluid}\n                        imgStyle={{\n                            objectFit: 'containe',\n                        }}\n                        loading=\"eager\"\n                    />\n                </HeroColumn>\n                <IconListStyled items={items} fill={backgroundColors.project} />\n            </ContainerS>\n            <RightSidebar />\n        </Advantages3DWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { Button } from 'components/Button'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { imagesDataProp } from 'pages/promo'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst Visualization3dWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.project};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\n\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 20px ${indent.heroColumnDesktop};\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 0 ${indent.heroColumnTablet} 48px;\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 0 ${indent.heroColumnDesktop} 48px;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-bottom: 32px;\n    align-items: center;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0 0 32px;\n        border-right: 1px solid ${colors.dark};\n    }\n`\nconst ImgStyled = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    padding: 0 16px;\n    align-self: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 793px;\n    }\n`\nconst ImgWrapper = styled.div`\n    padding: 0 16px;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n    }\n`\nconst LocalizedLinkStyled = styled(LocalizedLinkAnchor)`\n    text-decoration: none;\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 0 auto 50px;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\n\nexport const Project3D = ({ imagesData }: { imagesData: imagesDataProp }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allProject3DYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        buttonText\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const project3DYaml = getDataByLanguage(\n        data.allProject3DYaml,\n        i18n.language\n    )\n    const image = getImageByImageName(\n        imagesData.allImageSharp,\n        'picture3D.webp'\n    )\n\n    const { title, subTitle, buttonText } = project3DYaml\n\n    return (\n        <Visualization3dWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n                    <SubTitle>{subTitle}</SubTitle>\n                    <LocalizedLinkStyled\n                        to={'/promo/#project3dAdvantages'}\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'ShowMoreButton',\n                                placement: 'Project3D',\n                                target: 'Advantages3D',\n                            })\n                        }}\n                    >\n                        <ButtonStyled>{buttonText}</ButtonStyled>\n                    </LocalizedLinkStyled>\n                    <JumpingArrow />\n                </HeroColumn>\n                <ImgWrapper>\n                    <ImgStyled fluid={image.fluid} loading=\"eager\" />\n                </ImgWrapper>\n            </Container>\n        </Visualization3dWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { Button } from 'components/Button'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { imagesDataProp } from 'pages/promo'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst SelectionOfPaintWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.services};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\n\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 20px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 0 ${indent.heroColumnTablet} 48px;\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 0 ${indent.heroColumnDesktop} 48px;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 32px 32px;\n    align-items: center;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0px 0 32px;\n        border-right: 1px solid ${colors.dark};\n    }\n`\nconst ImgStyled = styled(Img)<{ fluid: FluidObject }>`\n    height: 70vw;\n    max-height: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: calc((100vw - 160px) * 0.6666);\n        height: 100%;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 793px;\n    }\n`\nconst ImgWrapper = styled.div`\n    padding: 0 16px;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n    }\n`\nconst LocalizedLinkStyled = styled(LocalizedLinkAnchor)`\n    text-decoration: none;\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 0 auto 50px;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\nconst TitleS = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: center;\n        margin-right: 48px;\n        line-height: 44px;\n        font-size: 37px;\n    }\n`\nexport const SelectionOfPaints = ({\n    imagesData,\n    setAdvantagesServicesIsVisible,\n}: {\n    imagesData: imagesDataProp\n    setAdvantagesServicesIsVisible: (arg: boolean) => void\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allSelectionOfPaintYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        buttonText\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const selectionOfPaintYaml = getDataByLanguage(\n        data.allSelectionOfPaintYaml,\n        i18n.language\n    )\n    const { title, subTitle, buttonText } = selectionOfPaintYaml\n\n    const image = getImageByImageName(\n        imagesData.allImageSharp,\n        'colorsAndTextur.webp'\n    )\n    return (\n        <SelectionOfPaintWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleS>{title}</TitleS>\n                    <SubTitle>{subTitle}</SubTitle>\n                    <LocalizedLinkStyled\n                        to={'/promo/#selectionOfPaintsAdvantages'}\n                        onClick={() => {\n                            setAdvantagesServicesIsVisible(true)\n                            sendEvent('Click', {\n                                eventCategory: 'ShowMoreButton',\n                                placement: 'ColorSelection',\n                                target: 'AdvantagesServices',\n                            })\n                        }}\n                    >\n                        <ButtonStyled>{buttonText}</ButtonStyled>\n                    </LocalizedLinkStyled>\n                    <JumpingArrow />\n                </HeroColumn>\n                <ImgWrapper>\n                    <ImgStyled fluid={image.fluid} loading=\"eager\" />\n                </ImgWrapper>\n            </Container>\n        </SelectionOfPaintWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { Button } from 'components/Button'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { sendEvent } from 'tracking'\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    border-top: 1px solid ${colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n    @media (min-width: ${displayWidth.desktop}) {\n        border-top: none;\n    }\n`\nconst ContainerStyled = styled.div`\n    max-width: 1190px;\n    border: 1px solid ${colors.dark};\n    margin: 0px auto;\n    border-top: none;\n    border-bottom: none;\n    display: flex;\n    justify-content: center;\n`\nconst ButtonDesktop = styled(Button)`\n    display: none;\n    width: 750px;\n    margin: 30px auto;\n    background-color: white;\n    color: ${colors.dark};\n    @media (min-width: ${displayWidth.desktop}) {\n        display: block;\n    }\n`\nconst ButtonMobile = styled(Button)`\n    background-color: white;\n    color: ${colors.dark};\n    margin: 30px auto;\n    padding: 15px;\n    height: 82px;\n    font-weight: bold;\n    font-size: 15px;\n    @media (min-width: 350px) {\n        width: 290px;\n        padding: 15px 20px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nexport const ShowMore = ({\n    advantages3DIsVisible,\n    setAdvantages3DIsVisible,\n    advantagesServicesIsVisible,\n    setAdvantagesServicesIsVisible,\n    visualizationAdvantagesIsVisible,\n    setVisualizationAdvantagesIsVisible,\n}: {\n    advantages3DIsVisible: boolean\n    setAdvantages3DIsVisible: (arg: boolean) => void\n    advantagesServicesIsVisible: boolean\n    setAdvantagesServicesIsVisible: (arg: boolean) => void\n    visualizationAdvantagesIsVisible: boolean\n    setVisualizationAdvantagesIsVisible: (arg: boolean) => void\n}) => {\n    const { t } = useTranslation()\n    const showMoreHandle = () => {\n        if (\n            !advantages3DIsVisible &&\n            !advantagesServicesIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setAdvantagesServicesIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Color',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('SelectionOfPaints')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'smooth',\n                        }),\n                400\n            )\n        } else if (\n            advantagesServicesIsVisible &&\n            !advantages3DIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setAdvantages3DIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Project3d',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('Project3D')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'auto',\n                        }),\n                400\n            )\n        } else if (\n            advantagesServicesIsVisible &&\n            advantages3DIsVisible &&\n            !visualizationAdvantagesIsVisible\n        ) {\n            setVisualizationAdvantagesIsVisible(true)\n            sendEvent('Click', {\n                eventCategory: 'ShowMoreButtonPromo',\n                placement: 'Promo',\n                target: 'Visualization3d',\n            })\n            setTimeout(\n                () =>\n                    window!\n                        .document!.getElementById('visualization3d')!\n                        .scrollIntoView({\n                            block: 'start',\n                            behavior: 'auto',\n                        }),\n                400\n            )\n        } else return\n    }\n    return (\n        <Wrapper>\n            {!visualizationAdvantagesIsVisible && (\n                <ContainerStyled>\n                    <ButtonDesktop onClick={showMoreHandle}>\n                        {t('showPromo')} <b>{t('CL')}</b>\n                    </ButtonDesktop>\n                    <ButtonMobile onClick={showMoreHandle}>\n                        {t('showPromoMobile')} <b>{t('CL')}</b>\n                    </ButtonMobile>\n                </ContainerStyled>\n            )}\n        </Wrapper>\n    )\n}\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { PromoHero } from 'blocks/Heros/PromoHero'\nimport { RunningLine } from 'components/RunningLine'\nimport { Advantages3D } from 'blocks/Advantages3D'\nimport { Visualization3d } from 'blocks/Visualization3d'\nimport { ProjectStructure } from 'blocks/ProjectStructure'\nimport { VisualizationAdvantages } from 'blocks/VisualizationAdvantages'\nimport { AdvantagesServices } from 'blocks/AdvantagesService'\n// import { Faq } from 'blocks/FAQ/FAQ'\nimport { Reviews } from 'blocks/Reviews'\nimport { Project3D } from 'blocks/Project3D'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { SelectionOfPaints } from 'blocks/SelectionOfPaints'\n// import { Connection } from 'blocks/Connection'\n// import { CommercialProposalFormBlock } from 'blocks/CommercialProposalFormBlock'\n// import { ButtonWithModal } from 'components/ButtonWithModal'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\nimport { graphql } from 'gatsby'\nimport { FluidObject } from 'gatsby-image'\nimport { ShowMore } from 'blocks/ShowMoreBlock'\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект інтер`єру квартири за $99',\n        description:\n            'Індивідуальний дизайн проект квартири за $99 включає перепланування, розміщення меблів, електрику, сантехніку, освітлення, підлоги, стелі і інше',\n    },\n    ru: {\n        title: 'Дизайн проект интерьера квартиры за $99',\n        description:\n            'Индивидуальный дизайн проект квартиры за $99 включает перепланировку, расстановку мебели, электрику, сантехнику, освещение, полы, потолки и другое',\n    },\n    en: {\n        title: 'Apartment interior design project for $99',\n        description:\n            'Individual design project of an apartment for $99 includes redevelopment, furniture placement, electrics, plumbing, lighting, floors, ceilings and more.',\n    },\n}\nexport interface imagesDataProp {\n    allImageSharp: {\n        edges: {\n            node: { childImageSharp: { fluid: FluidObject } }\n        }[]\n    }\n}\nconst Promo = ({ data }: { data: imagesDataProp }) => {\n    const [advantages3DIsVisible, setAdvantages3DIsVisible] = useState(false)\n    const [\n        advantagesServicesIsVisible,\n        setAdvantagesServicesIsVisible,\n    ] = useState(false)\n    const [\n        visualizationAdvantagesIsVisible,\n        setVisualizationAdvantagesIsVisible,\n    ] = useState(false)\n    const { t } = useTranslation()\n    return (\n        <Layout noFooter={visualizationAdvantagesIsVisible}>\n            <HelmetFunc data={pageMetadata} />\n            <PromoHero imagesData={data} />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <div id=\"projectStructure\" />\n            <ProjectStructure imagesData={data} />\n            <Reviews />\n            {/* <CommercialProposalFormBlock text /> */}\n            {/* <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormPromoPageBottom',\n                    eventCategory: 'FormPromoPageBottom',\n                }}\n            /> */}\n            <RunningLine inverse>{t('designProject99')}</RunningLine>\n\n            {/* \n            <Connection text={t('connection.text3d')}>\n                <ButtonWithModal\n                    modalTitle={t('connection.modalTitle')}\n                    modalDescription={t('connection.modalDescription')}\n                    buttonLabel={t('connection.buttonLabel')}\n                    placeholder={t('connection.placeholder')}\n                    submitLabel={t('connection.submitLabel')}\n                    tracking={{\n                        conversionType: 'CallbackFromPromo',\n                        eventCategory: 'CallbackFromPromo',\n                    }}\n                />\n            </Connection> */}\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormPromoPageBottom',\n                    eventCategory: 'FormPromoPageBottom',\n                }}\n            />\n            <div id=\"SelectionOfPaints\" />\n            {!advantagesServicesIsVisible && (\n                <ShowMore\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {advantagesServicesIsVisible && (\n                <>\n                    <SelectionOfPaints\n                        imagesData={data}\n                        setAdvantagesServicesIsVisible={\n                            setAdvantagesServicesIsVisible\n                        }\n                    />\n                    <div id=\"selectionOfPaintsAdvantages\" />\n                    <AdvantagesServices imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            <div id=\"Project3D\" />\n            {advantagesServicesIsVisible && !advantages3DIsVisible && (\n                <ShowMore\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {advantages3DIsVisible && (\n                <>\n                    <Project3D imagesData={data} />\n                    <div id=\"project3dAdvantages\" />\n                    <Advantages3D imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            <div id=\"visualization3d\" />\n            {advantages3DIsVisible && !visualizationAdvantagesIsVisible && (\n                <ShowMore\n                    advantages3DIsVisible={advantages3DIsVisible}\n                    setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                    advantagesServicesIsVisible={advantagesServicesIsVisible}\n                    setAdvantagesServicesIsVisible={\n                        setAdvantagesServicesIsVisible\n                    }\n                    visualizationAdvantagesIsVisible={\n                        visualizationAdvantagesIsVisible\n                    }\n                    setVisualizationAdvantagesIsVisible={\n                        setVisualizationAdvantagesIsVisible\n                    }\n                />\n            )}\n            {visualizationAdvantagesIsVisible && (\n                <>\n                    <Visualization3d imagesData={data} />\n                    <div id=\"visualization3dAdvantages\" />\n                    <VisualizationAdvantages imagesData={data} />\n                    <RunningLine>{t('designProject99')}</RunningLine>\n                </>\n            )}\n            {visualizationAdvantagesIsVisible && (\n                <DefaultFormBlock\n                    withPhoneMobile\n                    tracking={{\n                        conversionType: 'FormPromoPageBottom',\n                        eventCategory: 'FormPromoPageBottom',\n                    }}\n                />\n            )}\n            {/* <ShowMore\n                advantages3DIsVisible={advantages3DIsVisible}\n                setAdvantages3DIsVisible={setAdvantages3DIsVisible}\n                advantagesServicesIsVisible={advantagesServicesIsVisible}\n                setAdvantagesServicesIsVisible={setAdvantagesServicesIsVisible}\n                visualizationAdvantagesIsVisible={\n                    visualizationAdvantagesIsVisible\n                }\n                setVisualizationAdvantagesIsVisible={\n                    setVisualizationAdvantagesIsVisible\n                }\n            /> */}\n\n            {/* <div id=\"faq\" /> */}\n            {/* <Faq imagesData={data} /> */}\n        </Layout>\n    )\n}\n\nexport default Promo\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","var React = require('react');\n\nfunction Frame (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0)\",\"key\":0},[React.createElement(\"path\",{\"d\":\"M67.5 72.1629C83.5161 72.1629 98.6335 80.386 110.157 95.3563C115.918 102.841 120.411 111.539 123.583 121.291C126.913 131.464 128.551 142.27 128.551 153.392C128.551 164.515 126.86 175.321 123.583 185.494C120.411 195.246 115.918 203.943 110.157 211.428C98.6335 226.399 83.5161 234.622 67.5 234.622C51.4839 234.622 36.3665 226.399 24.8434 211.428C19.0818 203.943 14.5889 195.246 11.4174 185.494C8.08732 175.321 6.44871 164.515 6.44871 153.392C6.44871 142.217 8.14018 131.464 11.4174 121.291C14.5889 111.539 19.0818 102.841 24.8434 95.3563C36.3136 80.386 51.4839 72.1629 67.5 72.1629ZM67.5 66.0483C30.3406 66.0483 0.264297 105.161 0.264297 153.392C0.264297 201.624 30.3406 240.736 67.5 240.736C104.659 240.736 134.736 201.624 134.736 153.392C134.736 105.161 104.606 66.0483 67.5 66.0483Z\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M67.5 4.11155C68.6385 4.11155 69.5615 3.19115 69.5615 2.05577C69.5615 0.920401 68.6385 0 67.5 0C66.3615 0 65.4385 0.920401 65.4385 2.05577C65.4385 3.19115 66.3615 4.11155 67.5 4.11155Z\",\"fill\":\"#111010\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M66.9714 2.05566L116.341 93.3531\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M67.9229 2.05566L18.4475 93.6167\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"84.6926\",\"y1\":\"117.025\",\"x2\":\"47.4207\",\"y2\":\"163.959\",\"stroke\":\"black\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"88.3624\",\"y1\":\"150.663\",\"x2\":\"51.0905\",\"y2\":\"197.597\",\"stroke\":\"black\",\"key\":5})]),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0\"},React.createElement(\"rect\",{\"width\":\"135\",\"height\":\"241\",\"fill\":\"white\"})))]);\n}\n\nFrame.defaultProps = {\"width\":\"135\",\"height\":\"241\",\"viewBox\":\"0 0 135 241\",\"fill\":\"none\"};\n\nmodule.exports = Frame;\n\nFrame.default = Frame;\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport BigShevronDown from 'assets/icons/BigShrvronDown.svg'\nimport { colors } from 'styles/colors'\n\nconst jump = keyframes`\n        0% {\n            transform: translate(0,-5px);\n        }\n        5% {\n            transform: translate(0,5px);\n        }\n        10% {\n            transform: translate(0,-5px);\n        }\n        15% {\n            transform: translate(0,-15px);\n        }\n        20% {\n            transform: translate(0,-5px);\n        }\n        25%{\n            transform: translate(0,0px);\n        }\n        30%{\n            transform: translate(0,-5px);\n        }\n        35%{\n            transform: translate(0,-10px);\n        }\n        40%{\n            transform: translate(0,-10px);\n        }\n        100%{\n            transform: translate(0,-10px);\n\n        }\n    `\nconst ArrowWrapper = styled.div`\n    position: relative;\n    width: 27px;\n    height: 77px;\n    animation-name: ${jump};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n`\n\nconst Arrow = styled(BigShevronDown)`\n    fill: ${colors.dark};\n    position: absolute;\n    width: 100%;\n    right: 0;\n    left: 0;\n    bottom: 20px;\n    cursor: pointer;\n`\nconst Line = styled.div`\n    position: absolute;\n    left: 13px;\n    bottom: 20px;\n    top: 0px;\n    border-left: 1px solid ${colors.dark};\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const JumpingArrow = (props: any) => {\n    return (\n        <ArrowWrapper {...props}>\n            <Line />\n            <Arrow />\n        </ArrowWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { SliderComponent } from 'components/SliderComponent'\nimport { LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { Button } from 'components/Button'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { imagesDataProp } from 'pages/promo'\n\nconst Visualization3dWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.vizualization};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\n\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 20px;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 32px;\n    align-items: center;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0 0 32px;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 20px 0;\n    }\n`\n\nconst ImgStyled = styled(Img)<{ fluid: FluidObject }>`\n    width: calc(100vw - 64px);\n    height: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: calc((100vw - 160px) * 0.6666);\n        height: calc(((100vw - 160px) * 0.6666) / 1.22);\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 793px;\n        height: auto;\n    }\n`\nconst LocalizedLinkStyled = styled(LocalizedLinkAnchor)`\n    text-decoration: none;\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 50px auto;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n        margin: 10px auto 20px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\nconst DesctopWrapper = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        align-items: center;\n        background-color: ${colors.white};\n    }\n`\nconst MobileWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    background-color: ${colors.white};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\n\nexport const Visualization3d = ({\n    imagesData,\n    notButton,\n}: {\n    imagesData: imagesDataProp\n    notButton?: boolean\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allVisualization3DYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        buttonText\n                        images {\n                            image\n                        }\n                        mobileImages {\n                            image\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const visualization3DYaml = getDataByLanguage(\n        data.allVisualization3DYaml,\n        i18n.language\n    )\n    const commonImages = data.allVisualization3DYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'visualization3d'\n        }\n    ).node\n    const { title, subTitle, buttonText } = visualization3DYaml\n    const sliderSettings = {\n        infinite: true,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    arrows: false,\n                    dots: true,\n                },\n            },\n        ],\n    }\n    return (\n        <Visualization3dWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n                    <SubTitle>{subTitle}</SubTitle>\n                    {!notButton && (\n                        <LocalizedLinkStyled\n                            to={'/promo/#visualization3dAdvantages'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Vizualization3d',\n                                    target: 'AdvantagesVizualization',\n                                })\n                            }}\n                        >\n                            <ButtonStyled>{buttonText}</ButtonStyled>\n                        </LocalizedLinkStyled>\n                    )}\n                    <JumpingArrow />\n                </HeroColumn>\n                <DesctopWrapper>\n                    <SliderComponent {...sliderSettings}>\n                        {commonImages.images.map(\n                            (item: { image: string }, index: number) => {\n                                const ImageNode = getImageByImageName(\n                                    imagesData.allImageSharp,\n                                    item.image\n                                )\n\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={ImageNode.fluid}\n                                        imgStyle={{\n                                            objectFit: 'cover',\n                                        }}\n                                        alt={ImageNode.parent.name}\n                                        title={ImageNode.parent.name}\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </DesctopWrapper>\n                <MobileWrapper>\n                    <SliderComponent {...sliderSettings}>\n                        {commonImages.mobileImages.map(\n                            (item: { image: string }, index: number) => {\n                                const ImageNode = getImageByImageName(\n                                    imagesData.allImageSharp,\n                                    item.image\n                                )\n\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={ImageNode.fluid}\n                                        imgStyle={{\n                                            objectFit: 'cover',\n                                        }}\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </MobileWrapper>\n            </Container>\n        </Visualization3dWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconList } from 'components/IconList'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { imagesDataProp } from 'pages/promo'\n\nconst VisualizationAdvantagesWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.vizualization};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconList)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: auto;\n    color: transparent;\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.vizualization};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nexport const VisualizationAdvantages = ({\n    imagesData,\n}: {\n    imagesData: imagesDataProp\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allVisualizationAdvantagesYaml {\n                edges {\n                    node {\n                        title\n                        items {\n                            content\n                            svg\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const projectStructureData = getDataByLanguage(\n        data.allVisualizationAdvantagesYaml,\n        i18n.language\n    )\n    const { title, items } = projectStructureData\n    const imageFluid = getImageByImageName(\n        imagesData.allImageSharp,\n        'carpet.webp'\n    )\n    return (\n        <VisualizationAdvantagesWrapper>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n\n                    <Image fluid={imageFluid.fluid} loading=\"eager\" />\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.vizualization}\n                />\n            </Container>\n            <RightSidebar />\n        </VisualizationAdvantagesWrapper>\n    )\n}\n"],"sourceRoot":""}