{"version":3,"sources":["webpack:///./src/styles/mobileAfterBorder.ts","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/components/form/EmailInput.tsx","webpack:///./src/components/JumpingArrow.tsx","webpack:///./src/blocks/OurServices.tsx","webpack:///./src/blocks/Heros/HomeHero.tsx","webpack:///./src/blocks/OurServicesBottom.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/form/MessageInput.tsx","webpack:///./src/styles/headerBg.ts","webpack:///./src/components/RunningLine.tsx"],"names":["mobileAfterBorder","css","indent","mobile","colors","dark","displayWidth","tablet","languagesList","Object","keys","languages","HelmetFunc","data","i18n","useTranslation","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","EmailInput","React","forwardRef","ref","err","placeholder","labelBottom","t","type","isValid","displayName","jump","keyframes","ArrowWrapper","styled","div","Arrow","BigShevronDown","Line","JumpingArrow","props","OurServicesWrapper","backgroundColors","index","Block","desktop","PromoBlock","promotion","CadBlock","white","FaqBlock","project","Title","h2","darkText","Price","span","accentText","SubTitle","h3","ButtonStyled","Button","OurServices","useStaticQuery","allOurServicesData","getDataByLanguage","allOurServicesYaml","Container","columns","tabletColumns","titlePromo","pricePromo","subTitlePromo","LocalizedLink","to","onClick","sendEvent","eventCategory","placement","target","aria-label","buttonTextPromo","titleCad","dangerouslySetInnerHTML","__html","subTitleCad","buttonTextCad","titleFaq","subTitleFaq","buttonTextFaq","HomeHeroWraper","headerHeight","headerBg","ContainerStyled","HomeHeroColumn","HomeHeroColumnImage","h1","MobileImage","Img","DesktopImage","JumpingArrowWrapper","LogoS","Logo","HomeHero","homeHeroData","allHomeHeroYaml","homeHeroImageMobile","getImageByImageName","allImageSharp","mobileImage","homeHeroImageDesktop","desktopImage","fluid","imgStyle","objectFit","loading","FormWrapper","formPromo","InputBlock","FormTitle","Wrap","ExampleBlock","ExampleBlock3D","OurServicesBottom","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","Form","buttonText","onFormSubmit","onFormSendStart","conversionType","register","errors","PhoneInput","minLength","required","phone","MessageInput","message","email","pageMetadata","uk","ru","en","IndexPage","Layout","RunningLine","TextArea","textarea","inputStyle","maxheight","maxHeight","useHasValue","inputHandler","hasValue","rows","onChange","run","run2","RunningTextContainer","$inverse","Wrapper","Text","p","Text2","children","inverse","runningLineContent","length","repeat"],"mappings":"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","file":"component---src-pages-index-tsx-875e8650edf35b03d131.js","sourcesContent":["import { css } from 'styled-components'\nimport { displayWidth } from 'styles/width'\nimport { colors } from './colors'\nimport { indent } from './indent'\n\nexport const mobileAfterBorder = css`\n    :after {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: 2;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n`\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\n\nimport { Input } from 'components/form/Input'\nimport { useTranslation } from 'react-i18next'\nimport { TFunction } from 'i18next'\n\ninterface EmailInputProps {\n    err: string\n    placeholder?: TFunction | string\n    labelBottom?: number\n}\n\nexport const EmailInput = React.forwardRef<HTMLInputElement, EmailInputProps>(\n    ({ err, placeholder, labelBottom }, ref) => {\n        const { t } = useTranslation()\n\n        return (\n            <Input\n                type=\"email\"\n                name=\"email\"\n                labelBottom={labelBottom}\n                placeholder={placeholder || t('email')}\n                ref={ref}\n                isValid={err}\n            />\n        )\n    }\n)\n\nEmailInput.displayName = 'EmailInput'\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport BigShevronDown from 'assets/icons/BigShrvronDown.svg'\nimport { colors } from 'styles/colors'\n\nconst jump = keyframes`\n        0% {\n            transform: translate(0,-5px);\n        }\n        5% {\n            transform: translate(0,5px);\n        }\n        10% {\n            transform: translate(0,-5px);\n        }\n        15% {\n            transform: translate(0,-15px);\n        }\n        20% {\n            transform: translate(0,-5px);\n        }\n        25%{\n            transform: translate(0,0px);\n        }\n        30%{\n            transform: translate(0,-5px);\n        }\n        35%{\n            transform: translate(0,-10px);\n        }\n        40%{\n            transform: translate(0,-10px);\n        }\n        100%{\n            transform: translate(0,-10px);\n\n        }\n    `\nconst ArrowWrapper = styled.div`\n    position: relative;\n    width: 27px;\n    height: 77px;\n    animation-name: ${jump};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n`\n\nconst Arrow = styled(BigShevronDown)`\n    fill: ${colors.dark};\n    position: absolute;\n    width: 100%;\n    right: 0;\n    left: 0;\n    bottom: 20px;\n    cursor: pointer;\n`\nconst Line = styled.div`\n    position: absolute;\n    left: 13px;\n    bottom: 20px;\n    top: 0px;\n    border-left: 1px solid ${colors.dark};\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const JumpingArrow = (props: any) => {\n    return (\n        <ArrowWrapper {...props}>\n            <Line />\n            <Arrow />\n        </ArrowWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { backgroundColors, colors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport { useTranslation } from 'react-i18next'\nimport { Button } from 'components/Button'\nimport { LocalizedLink, LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { displayWidth } from 'styles/width'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\n\nconst OurServicesWrapper = styled.div`\n    width: 100%;\n    background-color: ${backgroundColors.index};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        justify-content: center;\n        outline: 1px solid ${colors.dark};\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\nconst Block = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    padding: 16px 32px;\n    box-sizing: border-box;\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 16px;\n        outline: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 32px;\n        align-items: flex-start;\n    }\n    :after {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: -1;\n        @media (min-width: ${displayWidth.tablet}) {\n            border-left: none;\n            border-right: none;\n        }\n    }\n`\nconst PromoBlock = styled(Block)`\n    background-color: ${backgroundColors.promotion};\n`\nconst CadBlock = styled(Block)`\n    background-color: ${colors.white};\n`\nconst FaqBlock = styled(Block)`\n    background-color: ${backgroundColors.project};\n`\nconst Title = styled.h2`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-size: 28px;\n    line-height: 32px;\n    letter-spacing: 1px;\n    margin-top: 24px;\n    text-align: center;\n    color: ${colors.darkText};\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 34px;\n        line-height: 39px;\n        letter-spacing: 1.68px;\n        text-align: left;\n    }\n`\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 32px;\n    line-height: 37px;\n    letter-spacing: 0.888889px;\n    padding-left: 20px;\n    color: ${colors.accentText};\n    margin: 0;\n`\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin-top: 10px;\n    strong {\n        font-weight: bold;\n    }\n    a {\n        color: ${colors.dark};\n    }\n    p,\n    li {\n        text-align: center;\n    }\n    ol,\n    ul {\n        margin-left: 1em;\n    }\n    ol {\n        list-style: decimal;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        text-align: left;\n        ul,\n        p,\n        li {\n            text-align: left;\n            margin-left: 0;\n        }\n    }\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 50px auto;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\nexport const OurServices = () => {\n    const { i18n, t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allOurServicesYaml {\n                edges {\n                    node {\n                        titlePromo\n                        pricePromo\n                        subTitlePromo\n                        buttonTextPromo\n                        titleCad\n                        subTitleCad\n                        buttonTextCad\n                        titleFaq\n                        subTitleFaq\n                        buttonTextFaq\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const allOurServicesData = getDataByLanguage(\n        data.allOurServicesYaml,\n        i18n.language\n    )\n\n    return (\n        <>\n            <OurServicesWrapper>\n                <Container columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                    <PromoBlock>\n                        <Title>\n                            {allOurServicesData.titlePromo}\n                            <Price>{allOurServicesData.pricePromo}</Price>\n                        </Title>\n                        <SubTitle>{allOurServicesData.subTitlePromo}</SubTitle>\n                        <LocalizedLink\n                            to={'/design-za-99'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'Promo',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('promo'))}>\n                                {allOurServicesData.buttonTextPromo}\n                            </ButtonStyled>\n                        </LocalizedLink>\n                    </PromoBlock>\n                    <CadBlock>\n                        <Title>{allOurServicesData.titleCad}</Title>\n                        <SubTitle\n                            dangerouslySetInnerHTML={{\n                                __html: allOurServicesData.subTitleCad,\n                            }}\n                        />\n                        <LocalizedLink\n                            to={'/editor'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'CAD',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('cad'))}>\n                                {allOurServicesData.buttonTextCad}\n                            </ButtonStyled>\n                        </LocalizedLink>\n                    </CadBlock>\n                    <FaqBlock>\n                        <Title>{allOurServicesData.titleFaq}</Title>\n                        <SubTitle>{allOurServicesData.subTitleFaq}</SubTitle>\n                        <LocalizedLinkAnchor\n                            to={'/faq'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'FAQ',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('promo'))}>\n                                {allOurServicesData.buttonTextFaq}\n                            </ButtonStyled>\n                        </LocalizedLinkAnchor>\n                    </FaqBlock>\n                </Container>\n            </OurServicesWrapper>\n        </>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\nimport { headerBg } from 'styles/headerBg'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { Logo } from 'components/Logo'\n\nconst HomeHeroWraper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    max-width: 100vw;\n    height: calc(100vh - ${headerHeight.mobile} - 50px);\n    min-height: 503px;\n    background-color: ${backgroundColors.index};\n    align-items: stretch;\n    border-bottom: 1px solid ${colors.dark};\n    :before {\n        ${headerBg}\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 600px;\n    }\n    @media (orientation: landscape) {\n        height: auto;\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n        position: relative;\n        :after {\n            position: absolute;\n            background-color: inherit;\n            top: 0;\n            bottom: 0;\n            left: 33.3333%;\n            right: 33.3333%;\n            outline: 1px solid ${colors.dark};\n            content: '';\n        }\n    }\n`\nconst HomeHeroColumn = styled.div`\n    display: flex;\n    flex-shrink: 0;\n    flex-grow: 0;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-left: none;\n        border-right: none;\n        justify-content: space-evenly;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: center;\n        align-items: flex-start;\n    }\n`\nconst HomeHeroColumnImage = styled(HomeHeroColumn)`\n    justify-content: flex-end;\n`\nconst Title = styled.h1`\n    font-size: 16px;\n    line-height: 22px;\n    word-spacing: 8px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n    letter-spacing: 6.888889px;\n    text-align: center;\n    color: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 18px;\n        line-height: 24px;\n        word-spacing: 10px;\n        margin-top: 15px;\n        margin-bottom: 0;\n        letter-spacing: 10.888889px;\n        padding-left: calc((66% - 260px) / 2);\n    }\n`\n// const SubTitle = styled.p`\n//     font-size: 16px;\n//     line-height: 26px;\n//     text-align: center;\n//     letter-spacing: 0.4px;\n//     margin: 0 16px 24px;\n//     @media (min-width: ${displayWidth.tablet}) {\n//         align-self: flex-start;\n//         z-index: 3;\n//         max-width: 66%;\n//         text-align: left;\n//         box-sizing: border-box;\n//         max-width: calc((100vw - 160px) * 0.25);\n//     }\n//     @media (min-width: ${displayWidth.desktop}) {\n//         padding: 20px 48px;\n//         max-width: 350px;\n//     }\n// `\nconst MobileImage = styled(Img)<{ fluid: FluidObject }>`\n    width: 90%;\n    height: 100%;\n    bottom: -4%;\n    z-index: 2;\n    max-height: 400px;\n    @media (min-width: 400px) {\n        width: 70%;\n        height: 90%;\n        bottom: -4%;\n    }\n    @media (min-width: 840px) {\n        max-height: 600px;\n        width: 75%;\n        height: 75%;\n        bottom: -4%;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 85%;\n        height: 95%;\n        bottom: -4%;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nconst DesktopImage = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.desktop}) {\n        display: block;\n        width: 110%;\n        height: 95.6%;\n        max-height: 90%;\n        bottom: -4.1%;\n        left: -70px;\n        z-index: 2;\n        align-self: flex-end;\n    }\n`\nconst JumpingArrowWrapper = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        align-self: flex-start;\n        justify-content: center;\n        width: 66.6%;\n        margin-top: 30px;\n    }\n`\nconst LogoS = styled(Logo)`\n    width: auto;\n    height: 20vh;\n    min-height: 120px;\n    fill: #5f7db5;\n    padding: 5px;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 250px;\n        height: 250px;\n        margin-left: calc(((100vw - 160px) * 0.33 - 260px) / 2);\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: 75px;\n    }\n`\nexport const HomeHero = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allHomeHeroYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        mobileImage\n                        desktopImage\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const homeHeroData = getDataByLanguage(data.allHomeHeroYaml, i18n.language)\n    const homeHeroImageMobile = getImageByImageName(\n        data.allImageSharp,\n        homeHeroData.mobileImage\n    )\n    const homeHeroImageDesktop = getImageByImageName(\n        data.allImageSharp,\n        homeHeroData.desktopImage\n    )\n\n    return (\n        <HomeHeroWraper>\n            <ContainerStyled columns={'1fr'} tabletColumns={'1fr 1fr'}>\n                <HomeHeroColumn>\n                    <Title>{homeHeroData.title}</Title>\n                    <LogoS />\n                    {/* <SubTitle>{homeHeroData.subTitle}</SubTitle> */}\n                    <JumpingArrowWrapper>\n                        <JumpingArrow />\n                    </JumpingArrowWrapper>\n                </HomeHeroColumn>\n                <HomeHeroColumnImage>\n                    <MobileImage\n                        fluid={homeHeroImageMobile.fluid}\n                        imgStyle={{\n                            objectFit: 'containe',\n                        }}\n                        loading=\"eager\"\n                    />\n                    <DesktopImage\n                        fluid={homeHeroImageDesktop.fluid}\n                        imgStyle={{\n                            objectFit: 'containe',\n                        }}\n                        loading=\"eager\"\n                    />\n                </HomeHeroColumnImage>\n            </ContainerStyled>\n        </HomeHeroWraper>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\n\nimport { Form, IChildrenProps } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { Button } from 'components/Button'\nimport { LocalizedLink } from 'i18n/LocalizedLink'\nimport { sendEvent } from 'tracking'\nimport { indent } from 'styles/indent'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst Wrap = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    > div {\n        min-width: 250px;\n    }\n    > form {\n        align-items: center;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        border-right: 1px solid black;\n        > div {\n            min-width: 200px;\n        }\n    }\n`\nconst Block = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    padding: 16px 32px;\n    box-sizing: border-box;\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 16px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 32px;\n        align-items: flex-start;\n    }\n    :after {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: -1;\n        @media (min-width: ${displayWidth.tablet}) {\n            border-left: none;\n            border-right: none;\n        }\n    }\n`\nconst ExampleBlock = styled(Block)`\n    background-color: ${backgroundColors.promotion};\n    flex: 0 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 32px 16px 0px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 32px 32px 0px;\n        align-items: flex-start;\n    }\n    :after {\n        display: none;\n    }\n`\nconst ExampleBlock3D = styled(Block)`\n    background-color: ${backgroundColors.index};\n    flex: 0 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 32px 16px 0px;\n        border-right: 1px solid black;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 32px 32px 0px;\n        align-items: flex-start;\n    }\n    :after {\n        display: none;\n    }\n`\nconst Title = styled.h2`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-size: 28px;\n    line-height: 32px;\n    letter-spacing: 1px;\n    margin-top: 24px;\n    text-align: center;\n    color: ${colors.darkText};\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 34px;\n        line-height: 39px;\n        letter-spacing: 1.68px;\n        text-align: left;\n    }\n`\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin-top: 10px;\n    strong {\n        font-weight: bold;\n    }\n    a {\n        color: ${colors.dark};\n    }\n    p,\n    li {\n        text-align: center;\n    }\n    ol,\n    ul {\n        margin-left: 1em;\n    }\n    ol {\n        list-style: decimal;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        text-align: left;\n        ul,\n        p,\n        li {\n            text-align: left;\n            margin-left: 0;\n        }\n    }\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 50px auto;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\n\nexport const OurServicesBottom = () => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                <ExampleBlock3D>\n                    <Title>{t('comercialForm.example3d')}</Title>\n                    <SubTitle>{t('exampleSubtitle3d')}</SubTitle>\n                    <LocalizedLink\n                        to={'example3d'}\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'ShowExampleOfProject3d',\n                                placement: 'Our Services',\n                                target: 'Example3d',\n                            })\n                        }}\n                    >\n                        <ButtonStyled\n                            aria-label={(t('goTo'), t('comercialForm.example'))}\n                        >\n                            {t('showProject')}\n                        </ButtonStyled>\n                    </LocalizedLink>\n                </ExampleBlock3D>\n                <Wrap>\n                    <FormTitle>{t('defaultFormTitle')}</FormTitle>\n                    <Form\n                        buttonText={t('send')}\n                        onFormSubmit={handleSubmitStatus}\n                        formSendStatus={formSendStatus}\n                        onFormSendStart={handleFormSendStart}\n                        conversionType={'FormIndexPageBottom'}\n                        eventCategory={'FormIndexPageBottom'}\n                    >\n                        {({ register, errors }: IChildrenProps) => (\n                            <InputBlock>\n                                <PhoneInput\n                                    ref={register({\n                                        minLength: 18,\n                                        required: true,\n                                    })}\n                                    err={errors.phone}\n                                />\n                                <MessageInput\n                                    ref={register}\n                                    err={errors.message}\n                                />\n                                <EmailInput ref={register} err={errors.email} />\n                            </InputBlock>\n                        )}\n                    </Form>\n                </Wrap>\n                <ExampleBlock>\n                    <Title>{t('comercialForm.example')}</Title>\n                    <SubTitle>{t('exampleSubtitle')}</SubTitle>\n                    <LocalizedLink\n                        to={'exapmle'}\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'ShowExampleOfProject',\n                                placement: 'Our Services',\n                                target: 'Example',\n                            })\n                        }}\n                    >\n                        <ButtonStyled\n                            aria-label={(t('goTo'), t('comercialForm.example'))}\n                        >\n                            {t('showProject')}\n                        </ButtonStyled>\n                    </LocalizedLink>\n                </ExampleBlock>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import React from 'react'\n\nimport { OurServices } from 'blocks/OurServices'\nimport { HomeHero } from 'blocks/Heros/HomeHero'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\nimport { RunningLine } from 'components/RunningLine'\nimport { useTranslation } from 'react-i18next'\nimport { OurServicesBottom } from 'blocks/OurServicesBottom'\n\nconst pageMetadata = {\n    uk: {\n        title:\n            \"Дизайн інтер'єру житлових і нежитлових приміщень від студії ClearLine\",\n        description:\n            \"Студія дизайну інтер'єру ClearLine розробляє індивідуальні проекти квартир, будинків та нежитлових приміщень\",\n    },\n    ru: {\n        title: 'Дизайн интерьера жилых и нежилых помещений',\n        description:\n            'Студия дизайна интерьера ClearLine разрабатывает индивидуальные проекты квартир, домов и нежилых помещений ',\n    },\n    en: {\n        title:\n            'Interior design of residential and non-residential premises from ClearLine studio',\n        description:\n            'ClearLine interior design studio develops individual projects for apartments, houses and non-residential premises',\n    },\n}\n\nconst IndexPage = () => {\n    const { t } = useTranslation()\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <HomeHero />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <OurServices />\n            <OurServicesBottom />\n        </Layout>\n    )\n}\n\nexport default IndexPage\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { IInputProps } from 'components/form/Types'\nimport { useTranslation } from 'react-i18next'\nimport { inputStyle } from 'styles/inputStyle'\nimport { Label } from 'components/form/Label'\nimport { useHasValue } from 'hooks/useHasValue'\n\nconst TextArea = styled.textarea<{ isValid?: string; maxheight?: string }>`\n    ${inputStyle}\n    ${(props) =>\n        props.isValid &&\n        css`\n            border-bottom-color: red;\n        `}\n    width: 100%;\n    resize: vertical;\n    min-height: 33px;\n    max-height: ${(props) => (props.maxheight ? props.maxheight : '150px')};\n    overflow-y: auto;\n`\n\nexport const MessageInput = React.forwardRef<HTMLTextAreaElement, IInputProps>(\n    ({ err, placeholder, maxHeight, labelBottom }, ref) => {\n        const { t } = useTranslation()\n        const { inputHandler, hasValue } = useHasValue()\n\n        return (\n            <Label\n                labelBottom={labelBottom}\n                hasValue={hasValue}\n                placeholder={placeholder || t('message')}\n            >\n                <TextArea\n                    maxheight={maxHeight}\n                    rows={1}\n                    name=\"message\"\n                    ref={ref}\n                    isValid={err}\n                    onChange={inputHandler}\n                />\n            </Label>\n        )\n    }\n)\n\nMessageInput.displayName = 'MessageInput'\n","import { css } from 'styled-components'\nimport { headerHeight } from 'styles/height'\nimport { displayWidth } from 'styles/width'\n\nexport const headerBg = css`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    height: ${headerHeight.mobile};\n    background-color: inherit;\n    content: '';\n    @media (min-width: ${displayWidth.tablet}) {\n        height: ${headerHeight.desktop};\n    }\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}