{"version":3,"sources":["webpack:///./src/styles/mobileAfterBorder.ts","webpack:///./src/blocks/CadBlock.tsx","webpack:///./src/pages/editor.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/styles/headerBg.ts"],"names":["mobileAfterBorder","css","indent","mobile","colors","dark","displayWidth","tablet","CadWrapper","styled","div","backgroundColors","contact","headerBg","SubTitle","p","HeroColumn","TitleStyled","Title","desktop","InstructionColumn","InstructionText","Image","Img","Cad","i18n","useTranslation","data","useStaticQuery","cadYaml","getDataByLanguage","allCadYaml","language","title","subTitle","instruction","buttonText","imageFluid","getImageByImageName","allImageSharp","Container","columns","tabletColumns","fluid","loading","dangerouslySetInnerHTML","__html","LocalizedLink","to","Button","pageMetadata","uk","description","ru","en","EditorPage","Layout","languagesList","Object","keys","languages","HelmetFunc","langData","getPagePath","usePagePath","name","content","lang","map","key","rel","hrefLang","href","headerHeight"],"mappings":"8FAAA,sFAKaA,EAAoBC,YAAH,oMAMdC,IAAOC,OACND,IAAOC,OACSC,IAAOC,KACND,IAAOC,KAGZC,IAAaC,S,qPCEpCC,EAAaC,IAAOC,IAAV,uEAAGD,CAAH,uIAIQE,IAAiBC,QAEVR,IAAOC,KAChCL,IAEIa,KAGJC,EAAWL,IAAOM,EAAV,qEAAGN,CAAH,8KAMDL,IAAOC,KAGKC,IAAaC,QAIhCS,EAAaP,IAAOC,IAAV,uEAAGD,CAAH,mNAOSH,IAAaC,OAGJH,IAAOC,MAGnCY,EAAcR,YAAOS,KAAV,wEAAGT,CAAH,iLAMQH,IAAaC,OAGbD,IAAaa,SAIhCC,EAAoBX,IAAOC,IAAV,8EAAGD,CAAH,uJAOEH,IAAaC,QA6BhCc,EAAkBZ,IAAOC,IAAV,4EAAGD,CAAH,oaAIQH,IAAaC,OAQbD,IAAaC,OAcbD,IAAaC,QASpCe,EAAQb,YAAOc,KAAV,kEAAGd,CAAH,mJAEcH,IAAaC,QAWzBiB,EAAM,WAAM,IACbC,EAASC,cAATD,KACFE,EAAOC,yBAAe,cA8BtBC,EAAUC,YAAkBH,EAAKI,WAAYN,EAAKO,UAChDC,EAA0DJ,EAA1DI,MAAOC,EAAmDL,EAAnDK,SAAuBC,EAA4BN,EAA5BM,YAAaC,EAAeP,EAAfO,WAC7CC,EAAaC,YAAoBX,EAAKY,cAAe,eAC3D,OACI,kBAAC/B,EAAD,KACI,kBAACgC,EAAA,EAAD,CAAWC,QAAS,MAAOC,cAAe,WACtC,kBAAC1B,EAAD,KACI,6BACI,kBAACC,EAAD,SAAegB,GACf,kBAACnB,EAAD,KAAWoB,IAEf,kBAACZ,EAAD,CAAOqB,MAAON,EAAWM,MAAOC,QAAQ,WAE5C,kBAACxB,EAAD,KAuBI,kBAACC,EAAD,CACIwB,wBAAyB,CACrBC,OAAQX,KAGhB,kBAACY,EAAA,EAAD,CAAeC,GAAI,QACf,kBAACC,EAAA,EAAD,KAASb,Q,wBC/N3Bc,EAAe,CACjBC,GAAI,CACAlB,MAAO,uCACPmB,YACI,qJAERC,GAAI,CACApB,MAAO,sCACPmB,YACI,wIAERE,GAAI,CACArB,MAAO,wCACPmB,YACI,0KAaGG,UATI,WACf,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAY7B,KAAMuB,IAClB,kBAAC,EAAD,S,oCC3BZ,2GAMMO,EAAgBC,OAAOC,KAAKC,KAErBC,EAAa,SAAC,GASrB,IARFlC,EAQE,EARFA,KASQF,EAASC,cAATD,KACFqC,EAAWnC,EAAKF,EAAKO,UACnB+B,EAAgBC,cAAhBD,YACR,OACI,kBAAC,IAAD,KACI,+BAAQD,EAAS7B,MAAjB,gBACA,0BAAMgC,KAAK,cAAcC,QAASJ,EAASV,cAC3C,0BAAMe,KAAM1C,EAAKO,WAChByB,EAAcW,KAAI,SAACD,GAChB,OACI,0BACIE,IAAKF,EACLG,IAAI,YACJC,SAAUJ,EACVK,KAAI,+BACiCT,EAAYI,W,oCCjCzE,0EAIatD,EAAWZ,YAAH,yIAMPwE,IAAatE,OAGFG,IAAaC,OACpBkE,IAAatD","file":"component---src-pages-editor-tsx-595185adcc93f401a564.js","sourcesContent":["import { css } from 'styled-components'\nimport { displayWidth } from 'styles/width'\nimport { colors } from './colors'\nimport { indent } from './indent'\n\nexport const mobileAfterBorder = css`\n    :after {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: 2;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n// import ReactPlayer from 'react-player'\n\n// import Frame from 'assets/icons/frame.svg'\nimport { headerBg } from 'styles/headerBg'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { Button } from 'components/Button'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { LocalizedLink } from 'i18n/LocalizedLink'\n\nconst CadWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder};\n    :before {\n        ${headerBg}\n    }\n`\nconst SubTitle = styled.p`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    text-align: center;\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 32px;\n    justify-content: space-between;\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0 32px;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\nconst TitleStyled = styled(Title)`\n    margin: 40px 0 10px;\n    font-size: 48px;\n    line-height: 55px;\n    text-align: center;\n    letter-spacing: 0.67px;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 20px 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin: 80px 0 48px;\n    }\n`\nconst InstructionColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    a {\n        margin: 0 0 32px 0;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        align-items: flex-start;\n        a {\n            margin: 0 0 80px 60px;\n        }\n    }\n`\n// const Video = styled.div`\n//     width: 100%;\n//     position: relative;\n//     padding-top: 56.25%; /* Player ratio: 100 / (1280 / 720) */\n//     div {\n//         position: absolute;\n//         top: 5%;\n//         left: 5.6%;\n//         width: 100%;\n//         height: 100%;\n//     }\n//     @media (min-width: ${displayWidth.tablet}) {\n//         margin-top: 90px;\n//     }\n// `\n// const FrameStyled = styled(Frame)`\n//     position: absolute;\n//     top: -12%;\n//     left: 6.5%;\n//     width: 87%;\n//     height: 108%;\n// `\nconst InstructionText = styled.div`\n    ol {\n        margin: 10px 58px 58px;\n        list-style: decimal;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n            margin: 60px;\n        }\n    }\n    ul {\n        margin: 32px;\n        list-style: none;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n            margin: 60px;\n        }\n    }\n    li {\n        margin-bottom: 20px;\n        position: relative;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        text-align: center;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n            margin: 0px 0 30ะทั 0;\n        }\n    }\n    strong {\n        font-weight: bold;\n    }\n`\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 100%;\n        height: auto;\n        color: transparent;\n        position: relative;\n        margin-top: 30px;\n        bottom: 0;\n        left: 0;\n    }\n`\nexport const Cad = () => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allCadYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        video\n                        instruction\n                        buttonText\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const cadYaml = getDataByLanguage(data.allCadYaml, i18n.language)\n    const { title, subTitle, /* video, */ instruction, buttonText } = cadYaml\n    const imageFluid = getImageByImageName(data.allImageSharp, 'cactus.webp')\n    return (\n        <CadWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <div>\n                        <TitleStyled> {title}</TitleStyled>\n                        <SubTitle>{subTitle}</SubTitle>\n                    </div>\n                    <Image fluid={imageFluid.fluid} loading=\"eager\" />\n                </HeroColumn>\n                <InstructionColumn>\n                    {/* <Video>\n                        <FrameStyled />\n                        <ReactPlayer\n                            width=\"80%\"\n                            height=\"80%\"\n                            controls={true}\n                            url={video}\n                            loop={true}\n                            volume={0.5}\n                            muted={true}\n                            config={{\n                                youtube: {\n                                    playerVars: {\n                                        showinfo: 0,\n                                        autoplay: 1,\n                                        color: 'white',\n                                        enablejsapi: 1,\n                                    },\n                                },\n                            }}\n                        />\n                    </Video> */}\n                    <InstructionText\n                        dangerouslySetInnerHTML={{\n                            __html: instruction,\n                        }}\n                    />\n                    <LocalizedLink to={'/cad'}>\n                        <Button>{buttonText}</Button>\n                    </LocalizedLink>\n                </InstructionColumn>\n            </Container>\n        </CadWrapper>\n    )\n}\n","import React from 'react'\nimport { Cad } from 'blocks/CadBlock'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\n\nconst pageMetadata = {\n    uk: {\n        title: 'ะกัะฒะพัะตะฝะฝั ะพะฑะผััะฝะพะณะพ ะบัะตัะปะตะฝะฝั ะพะฝะปะฐะนะฝ',\n        description:\n            'ะกัะฒะพัะตะฝะฝั ะพะฑะผััะฝะพะณะพ ะบัะตัะปะตะฝะฝั ะถะธัะปะพะฒะธั ัะฐ ะฝะตะถะธะปะธั ะฟัะธะผััะตะฝั ะฑะตะทะบะพััะพะฒะฝะพ, ะฑะตะท ัะตััััะฐััั, ะพะฝะปะฐะนะฝ, ั ัะพัะผะฐัั dxf ะฒัะด ะดะธะทะฐะนะฝะตัััะบะธั ัััะดัะน ClearLine',\n    },\n    ru: {\n        title: 'ะกะพะทะดะฐะฝะธะต ะพะฑะผะตัะพัะฝะพะณะพ ัะตััะตะถะฐ ะพะฝะปะฐะนะฝ',\n        description:\n            'ะกะพะทะดะฐะฝะธะต ะพะฑะผะตัะพัะฝัั ัะตััะตะถะตะน ะถะธะปัั ะธ ะฝะตะถะธะปัั ะฟะพะผะตัะตะฝะธะน ะฑะตัะฟะปะฐัะฝะพ, ะฑะตะท ัะตะณะธัััะฐัะธะธ, ะพะฝะปะฐะนะฝ,  ะฒ ัะพัะผะฐัะต dxf ะพั ะดะธะทะฐะนะฝ ัััะดะธะธ ClearLine',\n    },\n    en: {\n        title: 'Creating a dimensional drawing online',\n        description:\n            'Creation of dimensional drawings of residential and non-residential premises free of charge, without registration, online, in dxf format from design studio ClearLine',\n    },\n}\n\nconst EditorPage = () => {\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <Cad />\n        </Layout>\n    )\n}\n\nexport default EditorPage\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import { css } from 'styled-components'\nimport { headerHeight } from 'styles/height'\nimport { displayWidth } from 'styles/width'\n\nexport const headerBg = css`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    height: ${headerHeight.mobile};\n    background-color: inherit;\n    content: '';\n    @media (min-width: ${displayWidth.tablet}) {\n        height: ${headerHeight.desktop};\n    }\n`\n"],"sourceRoot":""}