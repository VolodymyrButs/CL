{"version":3,"sources":["webpack:///./src/styles/mobileAfterBorder.ts","webpack:///./src/blocks/DefaultFormBlock.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/components/form/EmailInput.tsx","webpack:///./src/pages/design-za-99-s.tsx","webpack:///./src/components/form/MessageInput.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/blocks/ProjectStructureQuestion.tsx","webpack:///./src/components/IconListQuestion.tsx","webpack:///./src/components/RunningLine.tsx"],"names":["mobileAfterBorder","css","indent","mobile","colors","dark","displayWidth","tablet","FormWrapper","styled","div","backgroundColors","formPromo","InputBlock","desktop","FormTitle","FormColumn","$size","Wrap","span","DefaultFormBlock","withPhoneMobile","tracking","children","textTitle","t","useTranslation","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","Boolean","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","email","languagesList","Object","keys","languages","HelmetFunc","data","i18n","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","EmailInput","React","forwardRef","placeholder","labelBottom","type","isValid","displayName","MobileHeaderWraper","isMenuOpen","white","MobileMenu","BurgerButton","headerHeight","BottomIcons","PhoneLinkStyled","PhoneLink","Desktop","WrapDesktop","iconStyles","ViberIconStyled","Viber","viber","TelegramIconStyled","Telegram","telegram","WhatsappIconStyled","Whatsapp","whatsapp","IconWrapper","accentText","PromoHeroColumn","ContainerStyled","Container","pageMetadata","uk","ru","en","Posadka","useState","setIsMenuOpen","scrolled25Send","useRef","scrolled50Send","scrolled75Send","scrolled100Send","pagePath","useEffect","current","gtag","process","page_location","document","location","onScroll","block","getElementById","scrollPosition","scrollTop","windowHeight","clientHeight","bodyHeight","scrollHeight","blockMod","scrollPositionMob","windowHeightMob","bodyHeightMob","setTimeout","scrolledRationMob","scrolledRation","Math","ceil","sendEvent","eventCategory","id","onClick","fill","sendForm","sendConversion","placement","closeMenu","onMenuItemClick","contactInformation","primaryPhone","color","text","target","aria-label","inverse","conversionType","query","TextArea","textarea","inputStyle","props","maxheight","MessageInput","maxHeight","useHasValue","inputHandler","hasValue","rows","onChange","HeroColumn","TitleStyledMobile","Title","TitleStyledDesktop","heroColumnTablet","heroColumnDesktop","Price","p","SubTitle","h3","Image","Img","DefaultFormHero","image","useStaticQuery","imageFluid","getImageByImageName","allImageSharp","formYaml","getDataByLanguage","allFormYaml","titleMobile","titleDesktop","price","fluid","loading","ProjectStructureWrapper","promotion","IconListStyled","IconListQuestion","LeftSidebar","RightSidebar","Big","TitleStyled","ProjectStructureQuestion","projectStructureData","allProjectStructureQuestionYaml","items","promo","ProjectStructureQuestionDesktop","IconListWrapper","IconItem","Text","Text2","background","restProps","item","index","dangerouslySetInnerHTML","__html","question","answer","run","keyframes","run2","RunningTextContainer","$inverse","Wrapper","RunningLine","runningLineContent","length","repeat"],"mappings":"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","file":"component---src-pages-design-za-99-s-tsx-a5c17ef58d3f80d7770d.js","sourcesContent":["import { css } from 'styled-components'\nimport { displayWidth } from 'styles/width'\nimport { colors } from './colors'\nimport { indent } from './indent'\n\nexport const mobileAfterBorder = css`\n    :after {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: 2;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n`\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: calc(100% - 150px);\n        margin-right: 150px;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst FormColumn = styled.div<{ $size: boolean }>`\n    width: 100%;\n    padding: ${({ $size }) => ($size === true ? '0' : '0 32px')};\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    box-sizing: border-box;\n    ${({ $size }) =>\n        $size === true\n            ? css`\n                  span {\n                      box-sizing: border-box;\n                      padding: 0 32px;\n                      width: 100%;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                      }\n                      div {\n                          @media (min-width: ${displayWidth.tablet}) {\n                              min-width: 200px;\n                          }\n                          form {\n                              div {\n                                  @media (min-width: ${displayWidth.tablet}) {\n                                      margin-right: 0px;\n                                      width: calc(100% - 50px);\n                                  }\n                              }\n                          }\n                      }\n                      span {\n                          padding: 0;\n                      }\n                  }\n                  > div {\n                      border-top: 1px solid #000;\n                      width: 100%;\n                      flex-shrink: 0;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                          border-top: none;\n                      }\n                  }\n              `\n            : ''}\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n    }\n`\nconst Wrap = styled.span`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const DefaultFormBlock = ({\n    withPhoneMobile,\n    tracking,\n    children = null,\n    textTitle,\n}: {\n    withPhoneMobile?: boolean\n    tracking: FormTracking\n    children?: React.ReactNode\n    textTitle?: boolean\n}) => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero withPhoneMobile={withPhoneMobile} />\n                <FormColumn $size={Boolean(children)}>\n                    <Wrap>\n                        <FormTitle>\n                            {textTitle\n                                ? t('designQuestion')\n                                : t('defaultFormTitle')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n                                    <MessageInput\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </Wrap>\n                    {children}\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\n\nimport { Input } from 'components/form/Input'\nimport { useTranslation } from 'react-i18next'\nimport { TFunction } from 'i18next'\n\ninterface EmailInputProps {\n    err: string\n    placeholder?: TFunction | string\n    labelBottom?: number\n}\n\nexport const EmailInput = React.forwardRef<HTMLInputElement, EmailInputProps>(\n    ({ err, placeholder, labelBottom }, ref) => {\n        const { t } = useTranslation()\n\n        return (\n            <Input\n                type=\"email\"\n                name=\"email\"\n                labelBottom={labelBottom}\n                placeholder={placeholder || t('email')}\n                ref={ref}\n                isValid={err}\n            />\n        )\n    }\n)\n\nEmailInput.displayName = 'EmailInput'\n","import { RunningLine } from 'components/RunningLine'\n\nimport { HelmetFunc } from 'components/PageMetaData'\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { LanguageSwitcher } from 'i18n/LanguageSwitcher'\nimport ExitSvg from 'assets/icons/Exit.svg'\nimport BurgerSvg from 'assets/icons/Burger.svg'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { Logo } from 'components/Logo'\nimport { displayWidth } from 'styles/width'\nimport { MainMenu } from 'blocks/Header/MainMenu'\nimport { contactInformation } from 'components/contactInformation'\nimport { headerHeight } from 'styles/height'\nimport Viber from 'assets/icons/Viber.svg'\nimport Telegram from 'assets/icons/Telegram.svg'\nimport Whatsapp from 'assets/icons/Whatsapp.svg'\nimport { RoundText } from 'components/RoundText'\nimport { PhoneSvgAnimated } from 'components/PhoneSvgAnimated'\nimport { useTranslation } from 'react-i18next'\nimport { sendConversion, sendEvent, gtag } from 'tracking'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { sendForm } from 'components/form/api'\n\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\n\nimport { Header } from 'blocks/Header/Header'\nimport { graphql } from 'gatsby'\nimport { imagesDataProp } from './promo'\nimport { usePagePath } from 'hooks/usePagePath'\nimport {\n    ProjectStructureQuestion,\n    ProjectStructureQuestionDesktop,\n} from 'blocks/ProjectStructureQuestion'\nimport { useFormHandler } from 'hooks/useFormHandler'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { Form, IChildrenProps } from 'components/form/Form'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { Container } from 'components/Container'\nimport { indent } from 'styles/indent'\n\nconst MobileHeaderWraper = styled.div<{ isMenuOpen: boolean }>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 65px;\n    z-index: 10;\n    background-color: ${({ isMenuOpen }) =>\n        isMenuOpen ? colors.dark : '#ebebeb'};\n\n    border-bottom: 1px solid\n        ${({ isMenuOpen }) => (isMenuOpen ? colors.white : colors.dark)};\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        height: inherit;\n        color: ${colors.dark};\n        font-size: 22px;\n        font-weight: 600;\n        letter-spacing: 0;\n        line-height: 28px;\n        margin-right: 20px;\n        white-space: nowrap;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst MobileMenu = styled.div<{ isMenuOpen: boolean }>`\n    position: fixed;\n    display: ${({ isMenuOpen }) => (isMenuOpen ? 'flex' : 'none')};\n    flex-direction: column;\n    justify-content: space-between;\n    top: 66px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    background-color: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst BurgerButton = styled.span`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    display: flex;\n    box-sizing: border-box;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    margin-right: 10px;\n    cursor: pointer;\n`\n\nconst BottomIcons = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    height: 60px;\n    width: 100%;\n    z-index: 10;\n    background-color: ${backgroundColors.formPromo};\n    display: flex;\n    align-items: center;\n    border-top: 1px solid #000;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst PhoneLinkStyled = styled(PhoneLink)`\n    display: flex;\n    flex-direction: column;\n    color: ${colors.white};\n    margin-bottom: 80px;\n    font-weight: normal;\n    svg {\n        fill: ${colors.white};\n    }\n`\n\nconst Desktop = styled.div`\n    position: relative;\n    display: none;\n    width: 100%;\n    height: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst Wrap = styled.div`\n    top: 66px;\n    height: calc(100vh - 126px);\n    left: 0;\n    right: 0;\n    bottom: 60px;\n    position: absolute;\n    overflow: auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst WrapDesktop = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        top: 80px;\n        height: calc(100vh - 20px);\n        left: 0;\n        right: 0;\n        bottom: 0px;\n        position: absolute;\n        overflow: auto;\n    }\n`\nconst iconStyles = css`\n    width: 38px;\n    height: 38px;\n    margin: 4px 13px;\n    cursor: pointer;\n    pointer-events: auto;\n`\nconst ViberIconStyled = styled(Viber)`\n    ${iconStyles};\n    fill: ${colors.viber};\n`\nconst TelegramIconStyled = styled(Telegram)`\n    ${iconStyles};\n    fill: ${colors.telegram};\n`\nconst WhatsappIconStyled = styled(Whatsapp)`\n    ${iconStyles};\n    fill: ${colors.whatsapp};\n`\nconst IconWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-end;\n    padding-right: 13px;\n`\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 16px;\n    input {\n        width: 250px;\n        margin: 10px auto;\n    }\n    textarea {\n        margin: 10px auto;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 30px;\n    line-height: 50px;\n    letter-spacing: 1px;\n    color: ${colors.accentText};\n    text-align: center;\n    margin: 10px;\n    p {\n        margin-top: 5px;\n        text-transform: uppercase;\n    }\n`\nconst PromoHeroColumn = styled.div`\n    :first-child {\n        display: flex;\n    }\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    margin-bottom: 50px;\n    flex-grow: 0;\n    button {\n        width: 68%;\n        margin: 10px auto 30px;\n        height: 60px;\n        background-color: ${colors.accentText};\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    box-sizing: border-box;\n`\n\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект квартири за $99',\n        description:\n            \"Виконаємо дизайн проект інтер'єру усієї квартири за 99 доларів США\",\n    },\n    ru: {\n        title: 'Дизайн проект квартиры за $99',\n        description:\n            'Выполним дизайн проект интерьера всей квартиры за 99 долларов США',\n    },\n    en: {\n        title: 'Apartment design for $99',\n        description:\n            'We will design the interior project of the entire apartment for 99 US dollars',\n    },\n}\n\nconst Posadka = ({ data }: { data: imagesDataProp }) => {\n    const { i18n, t } = useTranslation()\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n    const { getPagePath } = usePagePath()\n    const scrolled25Send = useRef(false)\n    const scrolled50Send = useRef(false)\n    const scrolled75Send = useRef(false)\n    const scrolled100Send = useRef(false)\n\n    const pagePath = getPagePath(i18n.language)\n\n    // Reset scroll event when page changes\n    useEffect(() => {\n        scrolled25Send.current = false\n        scrolled50Send.current = false\n        scrolled75Send.current = false\n        scrolled100Send.current = false\n        gtag('config', `${process.env.GA_ID}`, {\n            // eslint-disable-next-line camelcase\n            page_location: document.location,\n        })\n    }, [pagePath])\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n    const onScroll = () => {\n        const block = document.getElementById('blockF')\n        const scrollPosition = block!.scrollTop\n        const windowHeight = block!.clientHeight\n        const bodyHeight = block!.scrollHeight\n        const blockMod = document.getElementById('wrap')\n        const scrollPositionMob = blockMod!.scrollTop\n        const windowHeightMob = blockMod!.clientHeight\n        const bodyHeightMob = blockMod!.scrollHeight\n        setTimeout(() => {\n            const trackScroll = () => {\n                const scrolledRation = Math.ceil(\n                    ((scrollPosition + windowHeight) / bodyHeight) * 100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRation >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled75Send!.current && scrolledRation >= 75) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled50Send!.current && scrolledRation >= 50) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (block && !scrolled25Send!.current && scrolledRation >= 25) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            const trackScrollMob = () => {\n                const scrolledRationMob = Math.ceil(\n                    ((scrollPositionMob + windowHeightMob) / bodyHeightMob) *\n                        100\n                )\n                if (\n                    block &&\n                    !scrolled100Send!.current &&\n                    scrolledRationMob >= 100\n                ) {\n                    sendEvent('100', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled100Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled75Send!.current &&\n                    scrolledRationMob >= 75\n                ) {\n                    sendEvent('75', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled75Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled50Send!.current &&\n                    scrolledRationMob >= 50\n                ) {\n                    sendEvent('50', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled50Send!.current = true\n                    return\n                }\n\n                if (\n                    block &&\n                    !scrolled25Send!.current &&\n                    scrolledRationMob >= 25\n                ) {\n                    sendEvent('25', {\n                        eventCategory: 'ScrollDepth',\n                    })\n                    scrolled25Send!.current = true\n                }\n            }\n            trackScrollMob()\n            trackScroll()\n        }, 700)\n    }\n    return (\n        <div>\n            <HelmetFunc data={pageMetadata} />\n            <Wrap id=\"wrap\" onScroll={onScroll}>\n                <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                    <Logo />\n                    <BurgerButton\n                        onClick={() => {\n                            setIsMenuOpen(!isMenuOpen)\n                        }}\n                    >\n                        <BurgerSvg fill={colors.dark} />\n                    </BurgerButton>\n                    <a\n                        href={'tel:+380982117690'}\n                        onClick={() => {\n                            sendForm(`PosadkaHeaderPhoneClick`, {})\n                            sendConversion('PhoneClick')\n                            sendEvent('Phone', {\n                                eventCategory: 'PhoneClick',\n                                placement: 'PosadkaHeader',\n                            })\n                        }}\n                    >\n                        +38 098 211 76 90\n                    </a>\n                </MobileHeaderWraper>\n                <MobileMenu isMenuOpen={isMenuOpen}>\n                    <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                        <LanguageSwitcher closeMenu={setIsMenuOpen} />\n                        <BurgerButton\n                            onClick={() => {\n                                setIsMenuOpen(!isMenuOpen)\n                            }}\n                        >\n                            <ExitSvg fill={colors.white} />\n                        </BurgerButton>\n                    </MobileHeaderWraper>\n\n                    <MainMenu onMenuItemClick={() => setIsMenuOpen(false)} />\n                    <PhoneLinkStyled\n                        phone={contactInformation.primaryPhone}\n                        placement={'MobileMenuPosadka'}\n                    >\n                        <RoundText color={colors.white} text={t('callUs')}>\n                            <PhoneSvgAnimated color={colors.white} />\n                        </RoundText>\n                    </PhoneLinkStyled>\n                </MobileMenu>\n                <BottomIcons>\n                    <IconWrapper>\n                        <a\n                            href=\"viber://chat?number=%2B380982117690\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobileZa99ViberIcon`, {})\n                                sendConversion('SocialIconViber')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconViber',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <ViberIconStyled aria-label=\"ViberButton\" />\n                        </a>\n                        <a\n                            href=\"https://wa.me/+380958363420\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`PosadkaMobileZa99WhatsAppIcon`, {})\n                                sendConversion('SocialIconWhatsApp')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconWhatsApp',\n                                    placement: 'PosadkaMobile',\n                                })\n                            }}\n                        >\n                            <WhatsappIconStyled aria-label=\"Whatsapp Button\" />\n                        </a>\n                        <a\n                            href=\"tg://resolve?domain=ClearLine_bot\"\n                            target=\"blank\"\n                        >\n                            <TelegramIconStyled\n                                aria-label=\"Telegram Button\"\n                                onClick={() => {\n                                    sendForm(\n                                        `PosadkaMobileZa99TelegramIcon`,\n                                        {}\n                                    )\n                                    sendConversion('SocialIconTelegram')\n                                    sendEvent('SocialIcon', {\n                                        eventCategory: 'SocialIconTelegram',\n                                        placement: 'PosadkaMobile',\n                                    })\n                                }}\n                            />\n                        </a>\n                    </IconWrapper>\n                </BottomIcons>\n                <ProjectStructureQuestion data={data} />\n                <RunningLine inverse>{t('designProject99')}</RunningLine>\n                <ContainerStyled columns={'1fr'}>\n                    <PromoHeroColumn>\n                        <FormTitle>{t('writeToUs')}</FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            conversionType={'BottomFormMobilePosadka99'}\n                            eventCategory={'BottomFormMobilePosadka99'}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputPhone')}\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n\n                                    <EmailInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputEmail')}\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                    <MessageInput\n                                        labelBottom={-5}\n                                        placeholder={t('InputQuestion')}\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </PromoHeroColumn>\n                </ContainerStyled>\n            </Wrap>\n\n            <Desktop id=\"blockF\" onScroll={onScroll}>\n                <Header />\n                <WrapDesktop>\n                    <ProjectStructureQuestionDesktop data={data} />\n                    {/* \n                    <Connection text={t('connection.text')}>\n                        <ButtonWithModal\n                            modalTitle={t('connection.modalTitle')}\n                            modalDescription={t('connection.modalDescription')}\n                            buttonLabel={t('connection.buttonLabel')}\n                            placeholder={t('connection.placeholder')}\n                            submitLabel={t('connection.submitLabel')}\n                            tracking={{\n                                conversionType: 'CallbackFromPosadka',\n                                eventCategory: 'CallbackFromPosadka',\n                            }}\n                        />\n                    </Connection> */}\n                    <DefaultFormBlock\n                        withPhoneMobile={false}\n                        tracking={{\n                            conversionType: 'FormPosadkaPageBottom',\n                            eventCategory: 'FormPosadkaPageBottom',\n                        }}\n                    />\n                </WrapDesktop>\n            </Desktop>\n        </div>\n    )\n}\n\nexport default Posadka\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n        allProjectStructureQuestionYaml {\n            edges {\n                node {\n                    title\n                    price\n                    image\n                    promo\n                    items {\n                        question\n                        answer\n                        svg\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { IInputProps } from 'components/form/Types'\nimport { useTranslation } from 'react-i18next'\nimport { inputStyle } from 'styles/inputStyle'\nimport { Label } from 'components/form/Label'\nimport { useHasValue } from 'hooks/useHasValue'\n\nconst TextArea = styled.textarea<{ isValid?: string; maxheight?: string }>`\n    ${inputStyle}\n    ${(props) =>\n        props.isValid &&\n        css`\n            border-bottom-color: red;\n        `}\n    width: 100%;\n    resize: vertical;\n    min-height: 33px;\n    max-height: ${(props) => (props.maxheight ? props.maxheight : '150px')};\n    overflow-y: auto;\n`\n\nexport const MessageInput = React.forwardRef<HTMLTextAreaElement, IInputProps>(\n    ({ err, placeholder, maxHeight, labelBottom }, ref) => {\n        const { t } = useTranslation()\n        const { inputHandler, hasValue } = useHasValue()\n\n        return (\n            <Label\n                labelBottom={labelBottom}\n                hasValue={hasValue}\n                placeholder={placeholder || t('message')}\n            >\n                <TextArea\n                    maxheight={maxHeight}\n                    rows={1}\n                    name=\"message\"\n                    ref={ref}\n                    isValid={err}\n                    onChange={inputHandler}\n                />\n            </Label>\n        )\n    }\n)\n\nMessageInput.displayName = 'MessageInput'\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { IconListQuestion } from 'components/IconListQuestion'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\n\nimport { indent } from 'styles/indent'\n\nconst ProjectStructureWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n    ${mobileAfterBorder}\n`\nconst IconListStyled = styled(IconListQuestion)`\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n    }\n`\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid #231f20;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        justify-content: center;\n        border-right: none;\n        align-items: center;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.promotion};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\n\nconst Price = styled.span`\n    color: ${colors.accentText};\n    font-size: 28px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 36px;\n    }\n`\n\nconst Big = styled.span`\n    font-size: 30px;\n    line-height: 45px;\n    font-family: 'Open Sans', sans-serif;\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 36px;\n    }\n`\n\nconst TitleStyled = styled(Title)`\n    font-size: 26px;\n    margin: 35px 20px;\n    font-weight: bold;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: ${indent.heroColumnTablet};\n        max-width: 250px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: 1000px;\n        font-size: 32px;\n    }\n`\n\nexport const ProjectStructureQuestion = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureQuestionYaml,\n        i18n.language\n    )\n    const { title, items, price, promo } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        <Price>{promo}</Price> {title} {t('for')}{' '}\n                        <Big>{price}</Big>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n\nexport const ProjectStructureQuestionDesktop = ({\n    id,\n    data,\n}: {\n    id?: string\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    data?: any\n}) => {\n    const { i18n, t } = useTranslation()\n\n    const projectStructureData = getDataByLanguage(\n        data.allProjectStructureQuestionYaml,\n        i18n.language\n    )\n    const { title, items, price, promo } = projectStructureData\n\n    return (\n        <ProjectStructureWrapper id={id}>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        <Price>{promo}</Price> {title} {t('for')}{' '}\n                        <Big>{price}</Big>\n                    </TitleStyled>\n                </HeroColumn>\n                <IconListStyled\n                    items={items}\n                    fill={backgroundColors.promotion}\n                />\n            </Container>\n            <RightSidebar />\n        </ProjectStructureWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\n\nimport { displayWidth } from 'styles/width'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: #f7dfd7;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0px 48px 20px;\n    }\n`\nconst IconItem = styled.div`\n    /* flex-direction: column; */\n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n        align-items: flex-start;\n        padding: 10px 16px;\n    }\n    > div {\n        display: flex;\n        align-items: center;\n    }\n`\nconst Text = styled.span`\n    margin-top: 10px;\n\n    text-align: center;\n    width: 100%;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst Text2 = styled(Text)`\n    position: relative;\n    border-left: 8px solid ${colors.accentText};\n    margin-bottom: 15px;\n    p {\n        display: flex;\n        align-items: center;\n        font-size: 24px;\n        line-height: 26px;\n        margin-left: 15px;\n        min-height: 46px;\n        text-align: left;\n        box-sizing: border-box;\n    }\n    /* ::before {\n        position: absolute;\n        left: 0px;\n        top: 0;\n        color: #b75034;\n        font-size: 47px;\n        height: 40px;\n        width: 40px;\n        content: '➡';\n    } */\n`\n// const IconStyled = styled(Icon)`\n//     max-width: 45px;\n//     max-height: 45px;\n//     fill: #b75034;\n// `\ninterface IItem {\n    question: string\n    answer: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconListQuestion: React.FC<IIconListProps> = ({\n    items = [],\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        <div>\n                            <Text2\n                                dangerouslySetInnerHTML={{\n                                    __html: item.question,\n                                }}\n                            />\n                        </div>\n                        <Text\n                            dangerouslySetInnerHTML={{\n                                __html: item.answer,\n                            }}\n                        />\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n/*\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\n\nimport { displayWidth } from 'styles/width'\nimport { Icon } from './Icon'\n\nconst IconListWrapper = styled.div<{ background: string }>`\n    background-color: ${(props) => props.background};\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 16px;\n    box-sizing: border-box;\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 46px 10px 46px 30px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 48px;\n    }\n`\nconst IconItem = styled.div`\n    /* flex-direction: column; \n    width: 100%;\n    padding: 20px 16px;\n    box-sizing: border-box;\n    align-items: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 50%;\n        align-items: flex-start;\n    }\n    > div {\n        display: flex;\n        align-items: center;\n    }\n`\nconst Text = styled.span`\n    margin-top: 10px;\n    p {\n        text-align: center;\n        width: 100%;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\nconst Text2 = styled(Text)`\n    position: relative;\n    p {\n        display: flex;\n        align-items: center;\n        font-size: 18px;\n        font-weight: bold;\n        line-height: 20px;\n        padding-left: 10px;\n        min-height: 46px;\n        text-align: left;\n        box-sizing: border-box;\n        margin-bottom: 10px;\n    }\n`\nconst IconStyled = styled(Icon)`\n    min-width: 45px;\n    fill: #b75034;\n`\ninterface IItem {\n    question: string\n    answer: string\n    svg?: string\n}\n\ninterface IIconListProps {\n    items?: IItem[]\n    fill?: string\n    background?: string\n}\n\nexport const IconListQuestion: React.FC<IIconListProps> = ({\n    items = [],\n    background = colors.white,\n    ...restProps\n}) => {\n    return (\n        <IconListWrapper background={background} {...restProps}>\n            {items.map((item: IItem, index: number) => {\n                return (\n                    <IconItem key={index}>\n                        <div>\n                            {item.svg && <IconStyled iconName={'Logo.svg'} />}\n                            <Text2\n                                dangerouslySetInnerHTML={{\n                                    __html: item.question,\n                                }}\n                            />\n                        </div>\n                        <Text\n                            dangerouslySetInnerHTML={{\n                                __html: item.answer,\n                            }}\n                        />\n                    </IconItem>\n                )\n            })}\n        </IconListWrapper>\n    )\n}\n*/\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}