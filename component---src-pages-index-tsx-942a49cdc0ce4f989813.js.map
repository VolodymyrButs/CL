{"version":3,"sources":["webpack:///./src/styles/mobileAfterBorder.ts","webpack:///./src/blocks/DefaultFormBlock.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/components/form/EmailInput.tsx","webpack:///./src/components/JumpingArrow.tsx","webpack:///./src/blocks/OurServices.tsx","webpack:///./src/blocks/Heros/HomeHero.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/form/MessageInput.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/styles/headerBg.ts","webpack:///./src/components/RunningLine.tsx"],"names":["mobileAfterBorder","css","indent","mobile","colors","dark","displayWidth","tablet","FormWrapper","styled","div","backgroundColors","formPromo","InputBlock","desktop","FormTitle","FormColumn","$size","Wrap","span","DefaultFormBlock","withPhoneMobile","tracking","children","textTitle","t","useTranslation","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","Boolean","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","email","languagesList","Object","keys","languages","HelmetFunc","data","i18n","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","EmailInput","React","forwardRef","placeholder","labelBottom","type","isValid","displayName","jump","keyframes","ArrowWrapper","Arrow","BigShevronDown","Line","JumpingArrow","props","OurServicesWrapper","index","Block","PromoBlock","promotion","CadBlock","white","FaqBlock","project","ExampleBlock","Title","h2","darkText","Price","accentText","SubTitle","h3","ButtonStyled","Button","OurServices","useStaticQuery","allOurServicesData","getDataByLanguage","allOurServicesYaml","Container","titlePromo","pricePromo","subTitlePromo","LocalizedLink","to","onClick","sendEvent","eventCategory","placement","target","aria-label","buttonTextPromo","titleCad","dangerouslySetInnerHTML","__html","subTitleCad","buttonTextCad","titleFaq","subTitleFaq","buttonTextFaq","ExampleOfProject","HomeHeroWraper","headerHeight","headerBg","ContainerStyled","HomeHeroColumn","HomeHeroColumnImage","h1","MobileImage","Img","DesktopImage","JumpingArrowWrapper","LogoS","Logo","HomeHero","homeHeroData","allHomeHeroYaml","homeHeroImageMobile","getImageByImageName","allImageSharp","mobileImage","homeHeroImageDesktop","desktopImage","fluid","imgStyle","objectFit","loading","pageMetadata","uk","ru","en","IndexPage","Layout","RunningLine","conversionType","TextArea","textarea","inputStyle","maxheight","MessageInput","maxHeight","useHasValue","inputHandler","hasValue","rows","onChange","HeroColumn","TitleStyledMobile","TitleStyledDesktop","heroColumnTablet","heroColumnDesktop","p","PhoneLinkStyled","PhoneLink","Image","DefaultFormHero","image","imageFluid","formYaml","allFormYaml","titleMobile","titleDesktop","price","contactInformation","primaryPhone","run","run2","RunningTextContainer","$inverse","Wrapper","Text","Text2","inverse","runningLineContent","length","repeat"],"mappings":"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","file":"component---src-pages-index-tsx-942a49cdc0ce4f989813.js","sourcesContent":["import { css } from 'styled-components'\nimport { displayWidth } from 'styles/width'\nimport { colors } from './colors'\nimport { indent } from './indent'\n\nexport const mobileAfterBorder = css`\n    :after {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: 2;\n        @media (min-width: ${displayWidth.tablet}) {\n            display: none;\n        }\n    }\n`\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: calc(100% - 150px);\n        margin-right: 150px;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst FormColumn = styled.div<{ $size: boolean }>`\n    width: 100%;\n    padding: ${({ $size }) => ($size === true ? '0' : '0 32px')};\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    box-sizing: border-box;\n    ${({ $size }) =>\n        $size === true\n            ? css`\n                  span {\n                      box-sizing: border-box;\n                      padding: 0 32px;\n                      width: 100%;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                      }\n                      div {\n                          @media (min-width: ${displayWidth.tablet}) {\n                              min-width: 200px;\n                          }\n                          form {\n                              div {\n                                  @media (min-width: ${displayWidth.tablet}) {\n                                      margin-right: 0px;\n                                      width: calc(100% - 50px);\n                                  }\n                              }\n                          }\n                      }\n                      span {\n                          padding: 0;\n                      }\n                  }\n                  > div {\n                      border-top: 1px solid #000;\n                      width: 100%;\n                      flex-shrink: 0;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                          border-top: none;\n                      }\n                  }\n              `\n            : ''}\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n    }\n`\nconst Wrap = styled.span`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const DefaultFormBlock = ({\n    withPhoneMobile,\n    tracking,\n    children = null,\n    textTitle,\n}: {\n    withPhoneMobile?: boolean\n    tracking: FormTracking\n    children?: React.ReactNode\n    textTitle?: boolean\n}) => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero withPhoneMobile={withPhoneMobile} />\n                <FormColumn $size={Boolean(children)}>\n                    <Wrap>\n                        <FormTitle>\n                            {textTitle\n                                ? t('designQuestion')\n                                : t('defaultFormTitle')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n                                    <MessageInput\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </Wrap>\n                    {children}\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\n\nimport { Input } from 'components/form/Input'\nimport { useTranslation } from 'react-i18next'\nimport { TFunction } from 'i18next'\n\ninterface EmailInputProps {\n    err: string\n    placeholder?: TFunction | string\n    labelBottom?: number\n}\n\nexport const EmailInput = React.forwardRef<HTMLInputElement, EmailInputProps>(\n    ({ err, placeholder, labelBottom }, ref) => {\n        const { t } = useTranslation()\n\n        return (\n            <Input\n                type=\"email\"\n                name=\"email\"\n                labelBottom={labelBottom}\n                placeholder={placeholder || t('email')}\n                ref={ref}\n                isValid={err}\n            />\n        )\n    }\n)\n\nEmailInput.displayName = 'EmailInput'\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport BigShevronDown from 'assets/icons/BigShrvronDown.svg'\nimport { colors } from 'styles/colors'\n\nconst jump = keyframes`\n        0% {\n            transform: translate(0,-5px);\n        }\n        5% {\n            transform: translate(0,5px);\n        }\n        10% {\n            transform: translate(0,-5px);\n        }\n        15% {\n            transform: translate(0,-15px);\n        }\n        20% {\n            transform: translate(0,-5px);\n        }\n        25%{\n            transform: translate(0,0px);\n        }\n        30%{\n            transform: translate(0,-5px);\n        }\n        35%{\n            transform: translate(0,-10px);\n        }\n        40%{\n            transform: translate(0,-10px);\n        }\n        100%{\n            transform: translate(0,-10px);\n\n        }\n    `\nconst ArrowWrapper = styled.div`\n    position: relative;\n    width: 27px;\n    height: 77px;\n    animation-name: ${jump};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n`\n\nconst Arrow = styled(BigShevronDown)`\n    fill: ${colors.dark};\n    position: absolute;\n    width: 100%;\n    right: 0;\n    left: 0;\n    bottom: 20px;\n    cursor: pointer;\n`\nconst Line = styled.div`\n    position: absolute;\n    left: 13px;\n    bottom: 20px;\n    top: 0px;\n    border-left: 1px solid ${colors.dark};\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const JumpingArrow = (props: any) => {\n    return (\n        <ArrowWrapper {...props}>\n            <Line />\n            <Arrow />\n        </ArrowWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { backgroundColors, colors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport { useTranslation } from 'react-i18next'\nimport { Button } from 'components/Button'\nimport { LocalizedLink, LocalizedLinkAnchor } from 'i18n/LocalizedLink'\nimport { displayWidth } from 'styles/width'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\n\nconst OurServicesWrapper = styled.div`\n    width: 100%;\n    background-color: ${backgroundColors.index};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        justify-content: center;\n        outline: 1px solid ${colors.dark};\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\nconst Block = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    padding: 16px 32px;\n    box-sizing: border-box;\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    z-index: 1;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 16px;\n        outline: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 32px;\n        align-items: flex-start;\n    }\n    :after {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: ${indent.mobile};\n        right: ${indent.mobile};\n        border-left: 1px solid ${colors.dark};\n        border-right: 1px solid ${colors.dark};\n        content: '';\n        z-index: -1;\n        @media (min-width: ${displayWidth.tablet}) {\n            border-left: none;\n            border-right: none;\n        }\n    }\n`\nconst PromoBlock = styled(Block)`\n    background-color: ${backgroundColors.promotion};\n`\nconst CadBlock = styled(Block)`\n    background-color: ${colors.white};\n`\nconst FaqBlock = styled(Block)`\n    background-color: ${backgroundColors.project};\n`\nconst ExampleBlock = styled(Block)`\n    width: 50%;\n    background-color: ${backgroundColors.promotion};\n    flex-grow: 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n        border-bottom: none;\n        padding: 32px 16px 0px;\n        outline: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 32px 32px 0px;\n        align-items: flex-start;\n    }\n    :after {\n        display: none;\n    }\n`\n\nExampleBlock\nconst Title = styled.h2`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-size: 28px;\n    line-height: 32px;\n    letter-spacing: 1px;\n    margin-top: 24px;\n    text-align: center;\n    color: ${colors.darkText};\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 34px;\n        line-height: 39px;\n        letter-spacing: 1.68px;\n        text-align: left;\n    }\n`\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 32px;\n    line-height: 37px;\n    letter-spacing: 0.888889px;\n    padding-left: 20px;\n    color: ${colors.accentText};\n    margin: 0;\n`\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin-top: 10px;\n    strong {\n        font-weight: bold;\n    }\n    a {\n        color: ${colors.dark};\n    }\n    p,\n    li {\n        text-align: center;\n    }\n    ol,\n    ul {\n        margin-left: 1em;\n    }\n    ol {\n        list-style: decimal;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        text-align: left;\n        ul,\n        p,\n        li {\n            text-align: left;\n            margin-left: 0;\n        }\n    }\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 50px auto;\n    z-index: 3;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 220px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\nexport const OurServices = () => {\n    const { i18n, t } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allOurServicesYaml {\n                edges {\n                    node {\n                        titlePromo\n                        pricePromo\n                        subTitlePromo\n                        buttonTextPromo\n                        titleCad\n                        subTitleCad\n                        buttonTextCad\n                        titleFaq\n                        subTitleFaq\n                        buttonTextFaq\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const allOurServicesData = getDataByLanguage(\n        data.allOurServicesYaml,\n        i18n.language\n    )\n\n    return (\n        <>\n            <OurServicesWrapper>\n                <Container columns={'1fr'} tabletColumns={'1fr 1fr 1fr'}>\n                    <PromoBlock>\n                        <Title>\n                            {allOurServicesData.titlePromo}\n                            <Price>{allOurServicesData.pricePromo}</Price>\n                        </Title>\n                        <SubTitle>{allOurServicesData.subTitlePromo}</SubTitle>\n                        <LocalizedLink\n                            to={'/design-za-99'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'Promo',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('promo'))}>\n                                {allOurServicesData.buttonTextPromo}\n                            </ButtonStyled>\n                        </LocalizedLink>\n                    </PromoBlock>\n                    <CadBlock>\n                        <Title>{allOurServicesData.titleCad}</Title>\n                        <SubTitle\n                            dangerouslySetInnerHTML={{\n                                __html: allOurServicesData.subTitleCad,\n                            }}\n                        />\n                        <LocalizedLink\n                            to={'/editor'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'CAD',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('cad'))}>\n                                {allOurServicesData.buttonTextCad}\n                            </ButtonStyled>\n                        </LocalizedLink>\n                    </CadBlock>\n                    <FaqBlock>\n                        <Title>{allOurServicesData.titleFaq}</Title>\n                        <SubTitle>{allOurServicesData.subTitleFaq}</SubTitle>\n                        <LocalizedLinkAnchor\n                            to={'/faq'}\n                            onClick={() => {\n                                sendEvent('Click', {\n                                    eventCategory: 'ShowMoreButton',\n                                    placement: 'Our Services',\n                                    target: 'FAQ',\n                                })\n                            }}\n                        >\n                            <ButtonStyled aria-label={(t('goTo'), t('promo'))}>\n                                {allOurServicesData.buttonTextFaq}\n                            </ButtonStyled>\n                        </LocalizedLinkAnchor>\n                    </FaqBlock>\n                </Container>\n            </OurServicesWrapper>\n        </>\n    )\n}\n\nexport const ExampleOfProject = () => {\n    const { t } = useTranslation()\n    return (\n        <ExampleBlock>\n            <Title>{t('comercialForm.example')}</Title>\n            <SubTitle>{t('exampleSubtitle')}</SubTitle>\n            <LocalizedLink\n                to={'exapmle'}\n                onClick={() => {\n                    sendEvent('Click', {\n                        eventCategory: 'ShowExampleOfProject',\n                        placement: 'Our Services',\n                        target: 'Example',\n                    })\n                }}\n            >\n                <ButtonStyled\n                    aria-label={(t('goTo'), t('comercialForm.example'))}\n                >\n                    {t('showProject')}\n                </ButtonStyled>\n            </LocalizedLink>\n        </ExampleBlock>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { JumpingArrow } from 'components/JumpingArrow'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { colors, backgroundColors } from 'styles/colors'\nimport { Container } from 'components/Container'\nimport i18n from 'i18n/config'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\nimport { headerBg } from 'styles/headerBg'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { indent } from 'styles/indent'\nimport { Logo } from 'components/Logo'\n\nconst HomeHeroWraper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    max-width: 100vw;\n    height: calc(100vh - ${headerHeight.mobile} - 50px);\n    min-height: 503px;\n    background-color: ${backgroundColors.index};\n    align-items: stretch;\n    border-bottom: 1px solid ${colors.dark};\n    :before {\n        ${headerBg}\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 600px;\n    }\n    @media (orientation: landscape) {\n        height: auto;\n    }\n`\nconst ContainerStyled = styled(Container)`\n    padding: 0 ${indent.mobile};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0;\n        position: relative;\n        :after {\n            position: absolute;\n            background-color: inherit;\n            top: 0;\n            bottom: 0;\n            left: 33.3333%;\n            right: 33.3333%;\n            outline: 1px solid ${colors.dark};\n            content: '';\n        }\n    }\n`\nconst HomeHeroColumn = styled.div`\n    display: flex;\n    flex-shrink: 0;\n    flex-grow: 0;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    border-left: 1px solid ${colors.dark};\n    border-right: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-left: none;\n        border-right: none;\n        justify-content: space-evenly;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: center;\n        align-items: flex-start;\n    }\n`\nconst HomeHeroColumnImage = styled(HomeHeroColumn)`\n    justify-content: flex-end;\n`\nconst Title = styled.h1`\n    font-size: 16px;\n    line-height: 22px;\n    word-spacing: 8px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n    letter-spacing: 6.888889px;\n    text-align: center;\n    color: ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 18px;\n        line-height: 24px;\n        word-spacing: 10px;\n        margin-top: 15px;\n        margin-bottom: 0;\n        letter-spacing: 10.888889px;\n        padding-left: calc((66% - 260px) / 2);\n    }\n`\n// const SubTitle = styled.p`\n//     font-size: 16px;\n//     line-height: 26px;\n//     text-align: center;\n//     letter-spacing: 0.4px;\n//     margin: 0 16px 24px;\n//     @media (min-width: ${displayWidth.tablet}) {\n//         align-self: flex-start;\n//         z-index: 3;\n//         max-width: 66%;\n//         text-align: left;\n//         box-sizing: border-box;\n//         max-width: calc((100vw - 160px) * 0.25);\n//     }\n//     @media (min-width: ${displayWidth.desktop}) {\n//         padding: 20px 48px;\n//         max-width: 350px;\n//     }\n// `\nconst MobileImage = styled(Img)<{ fluid: FluidObject }>`\n    width: 90%;\n    height: 100%;\n    bottom: -4%;\n    z-index: 2;\n    max-height: 400px;\n    @media (min-width: 400px) {\n        width: 70%;\n        height: 90%;\n        bottom: -4%;\n    }\n    @media (min-width: 840px) {\n        max-height: 600px;\n        width: 75%;\n        height: 75%;\n        bottom: -4%;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 85%;\n        height: 95%;\n        bottom: -4%;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nconst DesktopImage = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.desktop}) {\n        display: block;\n        width: 110%;\n        height: 95.6%;\n        max-height: 90%;\n        bottom: -4.1%;\n        left: -70px;\n        z-index: 2;\n        align-self: flex-end;\n    }\n`\nconst JumpingArrowWrapper = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        align-self: flex-start;\n        justify-content: center;\n        width: 66.6%;\n        margin-top: 30px;\n    }\n`\nconst LogoS = styled(Logo)`\n    width: auto;\n    height: 20vh;\n    min-height: 120px;\n    fill: #5f7db5;\n    padding: 5px;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: 250px;\n        height: 250px;\n        margin-left: calc(((100vw - 160px) * 0.33 - 260px) / 2);\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: 75px;\n    }\n`\nexport const HomeHero = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allHomeHeroYaml {\n                edges {\n                    node {\n                        title\n                        subTitle\n                        mobileImage\n                        desktopImage\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const homeHeroData = getDataByLanguage(data.allHomeHeroYaml, i18n.language)\n    const homeHeroImageMobile = getImageByImageName(\n        data.allImageSharp,\n        homeHeroData.mobileImage\n    )\n    const homeHeroImageDesktop = getImageByImageName(\n        data.allImageSharp,\n        homeHeroData.desktopImage\n    )\n\n    return (\n        <HomeHeroWraper>\n            <ContainerStyled columns={'1fr'} tabletColumns={'1fr 1fr'}>\n                <HomeHeroColumn>\n                    <Title>{homeHeroData.title}</Title>\n                    <LogoS />\n                    {/* <SubTitle>{homeHeroData.subTitle}</SubTitle> */}\n                    <JumpingArrowWrapper>\n                        <JumpingArrow />\n                    </JumpingArrowWrapper>\n                </HomeHeroColumn>\n                <HomeHeroColumnImage>\n                    <MobileImage\n                        fluid={homeHeroImageMobile.fluid}\n                        imgStyle={{\n                            objectFit: 'containe',\n                        }}\n                        loading=\"eager\"\n                    />\n                    <DesktopImage\n                        fluid={homeHeroImageDesktop.fluid}\n                        imgStyle={{\n                            objectFit: 'containe',\n                        }}\n                        loading=\"eager\"\n                    />\n                </HomeHeroColumnImage>\n            </ContainerStyled>\n        </HomeHeroWraper>\n    )\n}\n","import React from 'react'\n\nimport { ExampleOfProject, OurServices } from 'blocks/OurServices'\nimport { HomeHero } from 'blocks/Heros/HomeHero'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { Layout } from 'layout/Layout'\nimport { RunningLine } from 'components/RunningLine'\nimport { useTranslation } from 'react-i18next'\n\n\nconst pageMetadata = {\n    uk: {\n        title:\n            \"Дизайн інтер'єру житлових і нежитлових приміщень від студії ClearLine\",\n        description:\n            \"Студія дизайну інтер'єру ClearLine розробляє індивідуальні проекти квартир, будинків та нежитлових приміщень\",\n    },\n    ru: {\n        title: 'Дизайн интерьера жилых и нежилых помещений',\n        description:\n            'Студия дизайна интерьера ClearLine разрабатывает индивидуальные проекты квартир, домов и нежилых помещений ',\n    },\n    en: {\n        title:\n            'Interior design of residential and non-residential premises from ClearLine studio',\n        description:\n            'ClearLine interior design studio develops individual projects for apartments, houses and non-residential premises',\n    },\n}\n\nconst IndexPage = () => {\n    const { t } = useTranslation()\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <HomeHero />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <OurServices />\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormIndexPageBottom',\n                    eventCategory: 'FormIndexPageBottom',\n                }}\n            >\n                <ExampleOfProject />\n            </DefaultFormBlock>\n        </Layout>\n    )\n}\n\nexport default IndexPage\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { IInputProps } from 'components/form/Types'\nimport { useTranslation } from 'react-i18next'\nimport { inputStyle } from 'styles/inputStyle'\nimport { Label } from 'components/form/Label'\nimport { useHasValue } from 'hooks/useHasValue'\n\nconst TextArea = styled.textarea<{ isValid?: string; maxheight?: string }>`\n    ${inputStyle}\n    ${(props) =>\n        props.isValid &&\n        css`\n            border-bottom-color: red;\n        `}\n    width: 100%;\n    resize: vertical;\n    min-height: 33px;\n    max-height: ${(props) => (props.maxheight ? props.maxheight : '150px')};\n    overflow-y: auto;\n`\n\nexport const MessageInput = React.forwardRef<HTMLTextAreaElement, IInputProps>(\n    ({ err, placeholder, maxHeight, labelBottom }, ref) => {\n        const { t } = useTranslation()\n        const { inputHandler, hasValue } = useHasValue()\n\n        return (\n            <Label\n                labelBottom={labelBottom}\n                hasValue={hasValue}\n                placeholder={placeholder || t('message')}\n            >\n                <TextArea\n                    maxheight={maxHeight}\n                    rows={1}\n                    name=\"message\"\n                    ref={ref}\n                    isValid={err}\n                    onChange={inputHandler}\n                />\n            </Label>\n        )\n    }\n)\n\nMessageInput.displayName = 'MessageInput'\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import { css } from 'styled-components'\nimport { headerHeight } from 'styles/height'\nimport { displayWidth } from 'styles/width'\n\nexport const headerBg = css`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    height: ${headerHeight.mobile};\n    background-color: inherit;\n    content: '';\n    @media (min-width: ${displayWidth.tablet}) {\n        height: ${headerHeight.desktop};\n    }\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}