{"version":3,"sources":["webpack:///./src/blocks/DefaultFormBlock.tsx","webpack:///./src/components/PageMetaData.tsx","webpack:///./src/blocks/DefaultFormHero.tsx","webpack:///./src/pages/exapmle.tsx","webpack:///./src/blocks/ExamplesOfProjects.tsx","webpack:///./src/components/SliderComponent.tsx","webpack:///./src/components/ModalCarousel.tsx","webpack:///./src/components/RunningLine.tsx"],"names":["FormWrapper","styled","div","backgroundColors","formPromo","mobileAfterBorder","displayWidth","tablet","colors","dark","InputBlock","desktop","FormTitle","FormColumn","$size","css","Wrap","span","DefaultFormBlock","withPhoneMobile","tracking","children","textTitle","t","useTranslation","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","columns","tabletColumns","Boolean","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","email","languagesList","Object","keys","languages","HelmetFunc","data","i18n","langData","language","getPagePath","usePagePath","title","name","content","description","lang","map","key","rel","hrefLang","href","HeroColumn","TitleStyledMobile","Title","TitleStyledDesktop","indent","heroColumnTablet","heroColumnDesktop","Price","p","accentText","SubTitle","h3","PhoneLinkStyled","PhoneLink","Image","Img","DefaultFormHero","image","useStaticQuery","imageFluid","getImageByImageName","allImageSharp","formYaml","getDataByLanguage","allFormYaml","titleMobile","titleDesktop","price","contactInformation","primaryPhone","placement","fluid","loading","pageMetadata","uk","ru","en","ExamplePage","conversionType","eventCategory","ExampleOfProjectWrapper","promotion","TitleStyled","LeftSidebar","RightSidebar","white","ImgStyled","Wrapper","WrapperMobile","WrapperDesktop","FullScreenButton","FullScreen","ExamplesOfProjects","useState","isModalOpen","setModalIsOpen","examplesOfProjectsYaml","allExamplesOfProjectsYaml","sliderSettings","infinite","responsive","breakpoint","settings","arrows","dots","onClick","sendEvent","afterChange","current","currentSlide","edges","item","index","node","childImageSharp","imgStyle","objectFit","alt","parent","mobile","closeHandler","initialSlideIndex","CarouselWrapper","SliderComponent","props","nextArrow","prevArrow","ImageModal","SliderStyled","Slider","ModalCarousel","modal","slides","photo","src","sliderRef","useRef","slider","useEffect","slickGoTo","isOpen","run","keyframes","run2","RunningTextContainer","$inverse","Text","Text2","RunningLine","inverse","runningLineContent","length","repeat"],"mappings":"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","file":"component---src-pages-exapmle-tsx-ff2f682b54a9792c6340.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { EmailInput } from 'components/form/EmailInput'\nimport { MessageInput } from 'components/form/MessageInput'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\n\nconst InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media (min-width: ${displayWidth.desktop}) {\n        width: calc(100% - 150px);\n        margin-right: 150px;\n    }\n`\nconst FormTitle = styled.div`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 30px;\n    letter-spacing: 1px;\n    color: ${colors.dark};\n    text-align: center;\n    margin: 40px 0 24px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 32px;\n        text-align: left;\n        margin: 56px 0 24px;\n    }\n`\n\nconst FormColumn = styled.div<{ $size: boolean }>`\n    width: 100%;\n    padding: ${({ $size }) => ($size === true ? '0' : '0 32px')};\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    box-sizing: border-box;\n    ${({ $size }) =>\n        $size === true\n            ? css`\n                  span {\n                      box-sizing: border-box;\n                      padding: 0 32px;\n                      width: 100%;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                      }\n                      div {\n                          @media (min-width: ${displayWidth.tablet}) {\n                              min-width: 200px;\n                          }\n                          form {\n                              div {\n                                  @media (min-width: ${displayWidth.tablet}) {\n                                      margin-right: 0px;\n                                      width: calc(100% - 50px);\n                                  }\n                              }\n                          }\n                      }\n                      span {\n                          padding: 0;\n                      }\n                  }\n                  > div {\n                      border-top: 1px solid #000;\n                      width: 100%;\n                      flex-shrink: 0;\n                      @media (min-width: ${displayWidth.tablet}) {\n                          width: 50%;\n                          border-top: none;\n                      }\n                  }\n              `\n            : ''}\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n    }\n`\nconst Wrap = styled.span`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const DefaultFormBlock = ({\n    withPhoneMobile,\n    tracking,\n    children = null,\n    textTitle,\n}: {\n    withPhoneMobile?: boolean\n    tracking: FormTracking\n    children?: React.ReactNode\n    textTitle?: boolean\n}) => {\n    const { t } = useTranslation()\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero withPhoneMobile={withPhoneMobile} />\n                <FormColumn $size={Boolean(children)}>\n                    <Wrap>\n                        <FormTitle>\n                            {textTitle\n                                ? t('designQuestion')\n                                : t('defaultFormTitle')}\n                        </FormTitle>\n                        <Form\n                            buttonText={t('send')}\n                            onFormSubmit={handleSubmitStatus}\n                            formSendStatus={formSendStatus}\n                            onFormSendStart={handleFormSendStart}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <InputBlock>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n                                    <MessageInput\n                                        ref={register}\n                                        err={errors.message}\n                                    />\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </InputBlock>\n                            )}\n                        </Form>\n                    </Wrap>\n                    {children}\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import { usePagePath } from 'hooks/usePagePath'\nimport { languages } from 'i18n/languages'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\n\nconst languagesList = Object.keys(languages)\n\nexport const HelmetFunc = ({\n    data,\n}: {\n    data: {\n        [x: string]: {\n            title: string\n            description: string\n        }\n    }\n}) => {\n    const { i18n } = useTranslation()\n    const langData = data[i18n.language]\n    const { getPagePath } = usePagePath()\n    return (\n        <Helmet>\n            <title>{langData.title} - Clearline</title>\n            <meta name=\"description\" content={langData.description} />\n            <html lang={i18n.language} />\n            {languagesList.map((lang) => {\n                return (\n                    <link\n                        key={lang}\n                        rel=\"alternate\"\n                        hrefLang={lang}\n                        href={\n                            `https://clearline.com.ua/new${  getPagePath(lang)}`\n                        }\n                    />\n                )\n            })}\n        </Helmet>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Img, { FluidObject } from 'gatsby-image'\nimport { displayWidth } from 'styles/width'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Title } from 'components/TitleComponent'\nimport { contactInformation } from 'components/contactInformation'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { indent } from 'styles/indent'\nimport { getImageByImageName } from 'utils/getImageByImageName'\n\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        padding: 0;\n        justify-content: space-between;\n        align-items: flex-start;\n        border-right: 1px solid ${colors.dark};\n    }\n`\n\nconst TitleStyledMobile = styled(Title)`\n    margin: 56px 0 30px;\n    font-size: 25px;\n    max-width: 100%;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n        padding: 0 32px;\n    }\n`\nconst TitleStyledDesktop = styled(Title)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        margin-left: ${indent.heroColumnTablet};\n        text-align: left;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        margin-left: ${indent.heroColumnDesktop};\n    }\n`\nconst Price = styled.p`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin: 0 10px;\n`\nconst SubTitle = styled.h3`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        text-align: left;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        color: ${colors.dark};\n        margin-bottom: 32px;\n        padding: 0 ${indent.heroColumnTablet};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop};\n    }\n`\n\nconst PhoneLinkStyled = styled(PhoneLink)<{ withPhoneMobile?: boolean }>`\n    flex-direction: column;\n    div {\n        margin-bottom: 24px;\n    }\n    margin-bottom: 50px;\n    align-self: center;\n    ${({ withPhoneMobile }) =>\n        withPhoneMobile ? 'display: flex;' : 'display: none;'}\n\n    @media (min-width: ${displayWidth.desktop}) {\n        flex-direction: row;\n        align-items: center;\n        margin: 0 20px 40px 0;\n        padding: 0 38px;\n        div {\n            width: 100px;\n            height: 100px;\n            margin-bottom: 0;\n        }\n        div > div > svg {\n            top: -50%;\n        }\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        width: 90%;\n        height: auto;\n        align-self: center;\n        color: transparent;\n    }\n`\nexport const DefaultFormHero = ({\n    image,\n    withPhoneMobile,\n}: {\n    withPhoneMobile?: boolean\n    image?: boolean | undefined\n}) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                edges {\n                    node {\n                        fluid(srcSetBreakpoints: [400]) {\n                            originalName\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n            allFormYaml {\n                edges {\n                    node {\n                        titleMobile\n                        titleDesktop\n                        description\n                        price\n                        formTitle\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const imageFluid = getImageByImageName(data.allImageSharp, 'fikus.webp')\n    const formYaml = getDataByLanguage(data.allFormYaml, i18n.language)\n    const { titleMobile, titleDesktop, description, price } = formYaml\n    return (\n        <HeroColumn>\n            <TitleStyledMobile>\n                {titleMobile}\n                <Price>{price}</Price>\n            </TitleStyledMobile>\n            <TitleStyledDesktop>{titleDesktop}</TitleStyledDesktop>\n            {!image && <SubTitle>{description}</SubTitle>}\n            <PhoneLinkStyled\n                phone={contactInformation.primaryPhone}\n                withPhoneMobile={withPhoneMobile}\n                placement={'Form'}\n            />\n            {image && <Image fluid={imageFluid.fluid} loading=\"eager\" />}\n        </HeroColumn>\n    )\n}\n","import React from 'react'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { ExamplesOfProjects } from 'blocks/ExamplesOfProjects'\nimport { RunningLine } from 'components/RunningLine'\nimport { useTranslation } from 'react-i18next'\nimport { Layout } from 'layout/Layout'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\n\nconst pageMetadata = {\n    uk: {\n        title: 'Зразок дизайн проекту',\n        description:\n            'Перегляд зразку проекту який ви отримаєте по закінченню роботи',\n    },\n    ru: {\n        title: 'Образец дизайн проекта ',\n        description:\n            'Просмотр образца проекта который вы получите по окончании работы',\n    },\n    en: {\n        title: 'Sample project design',\n        description:\n            'View a sample project that you will receive at the end of the work',\n    },\n}\n\nconst ExamplePage = () => {\n    const { t } = useTranslation()\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <ExamplesOfProjects />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormExample',\n                    eventCategory: 'FormExample',\n                }}\n            />\n        </Layout>\n    )\n}\n\nexport default ExamplePage\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport { indent } from 'styles/indent'\nimport FullScreen from 'assets/icons/fullScreen.svg'\nimport { ModalCarousel } from 'components/ModalCarousel'\nimport { ProjectData } from 'layout/Project'\nimport { sendEvent } from 'tracking'\n\nconst ExampleOfProjectWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\n\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin-left: 6px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 36px;\n        line-height: 42px;\n        letter-spacing: 1.77882px;\n    }\n`\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin-bottom: 32px;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n        margin-right: 0;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 ${indent.heroColumnTablet} 24px;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop} 24px;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.promotion};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nconst ImgStyled = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: 100%;\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    background-color: ${colors.white};\n    position: relative;\n`\nconst WrapperMobile = styled(Wrapper)`\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst WrapperDesktop = styled(Wrapper)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n    }\n`\nconst FullScreenButton = styled(FullScreen)`\n    fill: ${colors.white};\n    stroke: ${colors.dark};\n    stroke-width: 1px;\n    position: absolute;\n    top: 10px;\n    right: 26px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    z-index: 3;\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        right: 10px;\n    }\n`\nexport const ExamplesOfProjects = () => {\n    const { i18n } = useTranslation()\n    const [isModalOpen, setModalIsOpen] = useState(false)\n    const data = useStaticQuery(graphql`\n        query {\n            desktop: allFile(\n                filter: { relativeDirectory: { eq: \"projectExampleDesktop\" } }\n                sort: { fields: absolutePath }\n            ) {\n                edges {\n                    node {\n                        id\n                        childImageSharp {\n                            fluid(srcSetBreakpoints: [400]) {\n                                ...GatsbyImageSharpFluid\n                            }\n                            parent {\n                                ... on File {\n                                    name\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            mobile: allFile(\n                filter: { relativeDirectory: { eq: \"projectExamplesMobile\" } }\n                sort: { fields: absolutePath }\n            ) {\n                edges {\n                    node {\n                        id\n                        childImageSharp {\n                            fluid(srcSetBreakpoints: [400]) {\n                                ...GatsbyImageSharpFluid\n                            }\n                            parent {\n                                ... on File {\n                                    name\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            allExamplesOfProjectsYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        description\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const examplesOfProjectsYaml = getDataByLanguage(\n        data.allExamplesOfProjectsYaml,\n        i18n.language\n    )\n\n    const { price, description, title } = examplesOfProjectsYaml\n    const sliderSettings = {\n        infinite: true,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    arrows: false,\n                    dots: true,\n                },\n            },\n        ],\n    }\n\n    return (\n        <ExampleOfProjectWrapper>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        {title}\n                        <Price>{price}</Price>\n                    </TitleStyled>\n                    <SubTitle> {description}</SubTitle>\n                </HeroColumn>\n                <WrapperDesktop>\n                    <FullScreenButton\n                        onClick={() => {\n                            sendEvent('FullScreen', {\n                                eventCategory: 'Slider',\n                                placement: 'ExampleOfProject',\n                            })\n                            setModalIsOpen(true)\n                        }}\n                    />\n                    <SliderComponent\n                        {...sliderSettings}\n                        afterChange={(current: number) => {\n                            sendEvent('ShowSlide', {\n                                eventCategory: 'Slider',\n                                currentSlide: `${current}`,\n                                placement: 'ExampleOfProject',\n                            })\n                        }}\n                    >\n                        {data.desktop.edges.map(\n                            (\n                                item: {\n                                    node: {\n                                        childImageSharp: {\n                                            fluid: FluidObject\n                                            parent: { name: string }\n                                        }\n                                    }\n                                },\n                                index: number\n                            ) => {\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={item.node.childImageSharp.fluid}\n                                        imgStyle={{\n                                            objectFit: 'containe',\n                                        }}\n                                        alt={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                        title={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </WrapperDesktop>\n                <WrapperMobile>\n                    <SliderComponent\n                        {...sliderSettings}\n                        afterChange={(current: number) => {\n                            sendEvent('ShowSlide', {\n                                eventCategory: 'Slider',\n                                currentSlide: `${current + 1}`,\n                                placement: 'ExampleOfProject',\n                            })\n                        }}\n                    >\n                        {data.mobile.edges.map(\n                            (\n                                item: {\n                                    node: {\n                                        childImageSharp: {\n                                            fluid: FluidObject\n                                            parent: { name: string }\n                                        }\n                                    }\n                                },\n                                index: number\n                            ) => {\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={item.node.childImageSharp.fluid}\n                                        imgStyle={{\n                                            objectFit: 'containe',\n                                        }}\n                                        alt={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                        title={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </WrapperMobile>\n            </Container>\n            <RightSidebar />\n            <ModalCarousel\n                data={data.desktop.edges.map(\n                    ({ node }: { node: ProjectData }) => node\n                )}\n                isModalOpen={isModalOpen}\n                closeHandler={() => setModalIsOpen(false)}\n                initialSlideIndex={1}\n            />\n        </ExampleOfProjectWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { displayWidth } from 'styles/width'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst CarouselWrapper = styled.div`\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    height: auto;\n    padding: 16px 32px 26px;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        height: auto;\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: calc((${displayWidth.desktop} - 160px) * 0.6666);\n        max-height: 600px;\n    }\n    .slick-list {\n        margin: 0 -16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -30px;\n        }\n    }\n    img {\n        cursor: grab;\n    }\n    .slick-slide > div {\n        margin: 0 16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 30px;\n        }\n    }\n    .slick-dots {\n        bottom: -22px;\n        left: 0;\n\n        @media (min-width: ${displayWidth.tablet}) {\n            bottom: 5px;\n        }\n        li {\n            width: 10px;\n            button {\n                width: 10px;\n                ::before {\n                    width: 10px;\n                }\n            }\n        }\n    }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SliderComponent = ({ children, ...props }: any) => {\n    const settings = {\n        nextArrow: <SlickNext />,\n        prevArrow: <SlickPrevious />,\n    }\n    return (\n        <CarouselWrapper {...props}>\n            <Slider {...settings} {...props}>\n                {children}\n            </Slider>\n        </CarouselWrapper>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Img, { FluidObject } from 'gatsby-image'\nimport Slider from 'react-slick'\n\nimport { Modal } from './Modal'\nimport { ProjectImages } from 'layout/Project'\nimport { displayWidth } from 'styles/width'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ImageModal = styled(Img)<{ fluid: FluidObject }>`\n    height: 90vh;\n    @media (min-width: ${displayWidth.desktop}) {\n        height: 100%;\n    }\n`\nconst SliderStyled = styled(Slider)`\n    height: 100%;\n    .slick-list {\n        height: 100%;\n        margin: 0 -10px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -10px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            div {\n                height: 100%;\n            }\n        }\n    }\n    img {\n        cursor: grab;\n    }\n`\n\ninterface IModalProps {\n    closeHandler?: () => void\n    data: ProjectImages[]\n    isModalOpen: boolean\n    initialSlideIndex: number\n}\n\nexport const ModalCarousel: React.FC<IModalProps> = ({\n    data,\n    isModalOpen,\n    closeHandler,\n    initialSlideIndex,\n}) => {\n    const sliderSettings = {\n        infinite: true,\n        nextArrow: <SlickNext modal={true} />,\n        prevArrow: <SlickPrevious modal={true} />,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    arrows: false,\n                },\n            },\n        ],\n    }\n\n    const slides = data.map((photo) => (\n        <div key={photo.childImageSharp.fluid.src}>\n            <ImageModal\n                fluid={photo.childImageSharp.fluid}\n                imgStyle={{ objectFit: 'contain' }}\n                alt={photo.childImageSharp.parent.name}\n                title={photo.childImageSharp.parent.name}\n            />\n        </div>\n    ))\n    const sliderRef = useRef<Slider | null>(null)\n    const slider = sliderRef.current\n    useEffect(() => {\n        if (slider !== null) {\n            slider.slickGoTo(initialSlideIndex)\n        }\n    }, [initialSlideIndex, slider])\n    return (\n        <Modal isOpen={isModalOpen} closeHandler={closeHandler} image={true}>\n            <SliderStyled ref={sliderRef} {...sliderSettings}>\n                {slides}\n            </SliderStyled>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\n\nconst run = keyframes`\n0% {\n    transform:translateX(100%)\n}\n100% {\n    transform:translateX(-100%)\n}\n`\nconst run2 = keyframes`\n0% {\n    transform:translateX(0)\n}\n100% {\n    transform:translateX(-200%)\n}\n`\nconst RunningTextContainer = styled.div<{ $inverse: boolean | undefined }>`\n    width: 100%;\n    height: 50px;\n    background-color: ${({ $inverse }) =>\n        $inverse === true ? colors.dark : colors.white};\n    color: ${({ $inverse }) =>\n        $inverse === true ? colors.white : colors.dark};\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${({ $inverse }) =>\n            $inverse === true ? colors.white : colors.dark};\n        color: ${({ $inverse }) =>\n            $inverse === true ? colors.dark : colors.white};\n    }\n    overflow: hidden;\n    position: relative;\n`\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n`\nconst Text = styled.p`\n    align-self: center;\n    color: inherit;\n    font-size: 16px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-transform: uppercase;\n    animation: ${run} 240s linear infinite;\n    animation-delay: -120s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run} 120s linear infinite;\n        animation-delay: -60s;\n    }\n`\nconst Text2 = styled(Text)`\n    animation: ${run2} 240s linear infinite;\n    animation-delay: -240s;\n    @media (min-width: ${displayWidth.tablet}) {\n        animation: ${run2} 120s linear infinite;\n        animation-delay: -120s;\n    }\n`\nexport const RunningLine = ({\n    children,\n    inverse,\n}: {\n    children: string\n    inverse?: boolean\n}) => {\n    const runningLineContent =\n        children.length < 10 ? children.repeat(100) : children.repeat(20)\n    return (\n        <RunningTextContainer $inverse={inverse}>\n            <Wrapper>\n                <Text>{runningLineContent}</Text>\n                <Text2>{runningLineContent}</Text2>\n            </Wrapper>\n        </RunningTextContainer>\n    )\n}\n"],"sourceRoot":""}