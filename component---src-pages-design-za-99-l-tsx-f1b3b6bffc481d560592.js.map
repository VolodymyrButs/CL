{"version":3,"sources":["webpack:///./src/components/ButtonWithModal.tsx","webpack:///./src/pages/design-za-99-l.tsx","webpack:///./src/blocks/CommercialProposalFormBlock.tsx","webpack:///./src/blocks/Connection.tsx","webpack:///./src/blocks/ExamplesOfProjects.tsx","webpack:///./src/blocks/FAQ/FAQItem.tsx","webpack:///./src/blocks/FAQ/FAQ.tsx","webpack:///./src/assets/images/chair.svg","webpack:///./src/components/ModalCarousel.tsx"],"names":["SubTitle","styled","h3","colors","dark","displayWidth","tablet","Wrapper","div","desktop","TitleStyled","Title","ButtonStyled","Button","ButtonWithModal","modalTitle","modalDescription","buttonLabel","placeholder","submitLabel","tracking","useState","isModalOpen","setModalIsOpen","useFormHandler","handleSubmitStatus","handleFormSendStart","formSendStatus","isOpen","closeHandler","formName","buttonText","onFormSubmit","onFormSendStart","register","errors","ref","minLength","required","err","phone","message","maxHeight","email","onClick","pageMetadata","uk","title","description","ru","en","PromoLong","data","t","useTranslation","imagesData","id","text","conversionType","eventCategory","setAdvantagesServicesIsVisible","inverse","withPhoneMobile","query","FormWrapper","backgroundColors","formPromo","mobileAfterBorder","FormTitle","svgStyle","css","HandshakeS","Handshake","PensileS","Pensile","ProposalS","Proposal","FormColumn","DivS","CommercialProposalFormBlock","placement","columns","tabletColumns","image","CommunicationWrapper","props","ContainerStyle","Container","Connection","backgroundColor","children","ExampleOfProjectWrapper","promotion","Price","span","accentText","HeroColumn","indent","heroColumnTablet","heroColumnDesktop","LeftSidebar","RightSidebar","white","ImgStyled","Img","WrapperMobile","WrapperDesktop","FullScreenButton","FullScreen","ExamplesOfProjects","i18n","useStaticQuery","examplesOfProjectsYaml","getDataByLanguage","allExamplesOfProjectsYaml","language","price","sliderSettings","infinite","responsive","breakpoint","settings","arrows","dots","sendEvent","afterChange","current","currentSlide","edges","map","item","index","key","fluid","node","childImageSharp","imgStyle","objectFit","alt","parent","name","mobile","initialSlideIndex","FaqListItemWrapper","QuestionWrapper","Question","Answer","$isAnswerVisible","darkText","IconStyled","Arrow","FAQItem","question","answer","isAnswerVisible","setIsAnswerVisible","scroll","window","document","getElementById","scrollIntoView","block","behavior","setTimeout","dangerouslySetInnerHTML","__html","FaqWrapper","contact","FaqListStyled","showFaqListMobile","p","ButtonFaq","Image","CnairImg","Chair","Faq","setShowFaqListMobile","allFaqYaml","buttonTextOpen","buttonTextClose","subTitle","questions","imageLamp","getImageByImageName","allImageSharp","faqData","acceptedAnswer","Helmet","type","JSON","stringify","React","createElement","defaultProps","module","exports","default","ImageModal","SliderStyled","Slider","ModalCarousel","nextArrow","modal","prevArrow","slides","photo","src","sliderRef","useRef","slider","useEffect","slickGoTo"],"mappings":"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","file":"component---src-pages-design-za-99-l-tsx-f1b3b6bffc481d560592.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Modal } from './Modal'\nimport { Form, IChildrenProps, FormTracking } from 'components/form/Form'\nimport { PhoneInput } from 'components/form/PhoneInput'\nimport { Title } from 'components/TitleComponent'\nimport { Button } from './Button'\nimport { EmailInput } from './form/EmailInput'\nimport { MessageInput } from './form/MessageInput'\nimport { useFormHandler } from 'hooks/useFormHandler'\n\nconst SubTitle = styled.h3`\n    display: block;\n    text-align: left;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin: 16px 0;\n    text-align: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst Wrapper = styled.div`\n    display: flex;\n    width: 100%;\n    box-sizing: border-box;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    overflow-y: auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        align-items: flex-start;\n        justify-content: space-around;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 15px 50px 0;\n    }\n`\nconst TitleStyled = styled(Title)`\n    margin: 20px 0;\n    @media (orientation: landscape) {\n        margin: 16px 0;\n    }\n`\nconst ButtonStyled = styled(Button)`\n    width: 264px;\n    margin: 20px auto;\n    @media (max-width: 330px) {\n        width: 250px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        min-width: 220px;\n        width: 230px;\n        margin: 30px 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 264px;\n    }\n`\nexport const ButtonWithModal = ({\n    modalTitle,\n    modalDescription,\n    buttonLabel,\n    placeholder,\n    submitLabel,\n    tracking,\n}: {\n    modalTitle: string\n    modalDescription: string\n    buttonLabel: string\n    placeholder: string\n    submitLabel: string\n    tracking: FormTracking\n}) => {\n    const [isModalOpen, setModalIsOpen] = useState(false)\n\n    // TODO: move to Form\n    const {\n        handleSubmitStatus,\n        handleFormSendStart,\n        formSendStatus,\n    } = useFormHandler()\n    return (\n        <>\n            <Modal\n                isOpen={isModalOpen}\n                closeHandler={() => setModalIsOpen(false)}\n            >\n                <Wrapper>\n                    <>\n                        <TitleStyled>{modalTitle}</TitleStyled>\n                        <SubTitle>{modalDescription}</SubTitle>\n                        <Form\n                            formName={'Callback Form'}\n                            buttonText={submitLabel}\n                            onFormSubmit={handleSubmitStatus}\n                            onFormSendStart={handleFormSendStart}\n                            formSendStatus={formSendStatus}\n                            closeHandler={setModalIsOpen}\n                            {...tracking}\n                        >\n                            {({ register, errors }: IChildrenProps) => (\n                                <div>\n                                    <PhoneInput\n                                        ref={register({\n                                            minLength: 18,\n                                            required: true,\n                                        })}\n                                        err={errors.phone}\n                                    />\n\n                                    <MessageInput\n                                        ref={register({\n                                            required: true,\n                                        })}\n                                        err={errors.message}\n                                        placeholder={placeholder}\n                                        maxHeight={'90px'}\n                                    />\n\n                                    <EmailInput\n                                        ref={register}\n                                        err={errors.email}\n                                    />\n                                </div>\n                            )}\n                        </Form>\n                    </>\n                </Wrapper>\n            </Modal>\n\n            <ButtonStyled\n                onClick={() => {\n                    setModalIsOpen(true)\n                }}\n            >\n                {buttonLabel}\n            </ButtonStyled>\n        </>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { PromoHero } from 'blocks/Heros/PromoHero'\nimport { RunningLine } from 'components/RunningLine'\nimport { Advantages3D } from 'blocks/Advantages3D'\nimport { Visualization3d } from 'blocks/Visualization3d'\nimport { ProjectStructure } from 'blocks/ProjectStructure'\nimport { VisualizationAdvantages } from 'blocks/VisualizationAdvantages'\nimport { AdvantagesServices } from 'blocks/AdvantagesService'\nimport { Faq } from 'blocks/FAQ/FAQ'\nimport { ExamplesOfProjects } from 'blocks/ExamplesOfProjects'\nimport { Reviews } from 'blocks/Reviews'\nimport { Project3D } from 'blocks/Project3D'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { SelectionOfPaints } from 'blocks/SelectionOfPaints'\nimport { Connection } from 'blocks/Connection'\nimport { CommercialProposalFormBlock } from 'blocks/CommercialProposalFormBlock'\nimport { ButtonWithModal } from 'components/ButtonWithModal'\nimport { HelmetFunc } from 'components/PageMetaData'\nimport { graphql } from 'gatsby'\nimport { imagesDataProp } from './promo'\nimport { Layout } from 'layout/Layout'\nimport { Visualization360 } from 'blocks/Vizualization360'\n\nconst pageMetadata = {\n    uk: {\n        title: 'Дизайн проект квартири за $99',\n        description:\n            \"Виконаємо дизайн проект інтер'єру усієї квартири за 99 доларів США\",\n    },\n    ru: {\n        title: 'Дизайн проект квартиры за $99',\n        description:\n            'Выполним дизайн проект интерьера всей квартиры за 99 долларов США',\n    },\n    en: {\n        title: 'Apartment design for $99',\n        description:\n            'We will design the interior project of the entire apartment for 99 US dollars',\n    },\n}\n\nconst PromoLong = ({ data }: { data: imagesDataProp }) => {\n    const { t } = useTranslation()\n    return (\n        <Layout>\n            <HelmetFunc data={pageMetadata} />\n            <PromoHero imagesData={data} />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <div id=\"projectStructure\" />\n            <ProjectStructure imagesData={data} />\n            <ExamplesOfProjects />\n            <Reviews />\n            <CommercialProposalFormBlock />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <Project3D imagesData={data} />\n            <div id=\"project3dAdvantages\" />\n            <Advantages3D imagesData={data} />\n            <Connection text={t('connection.text')}>\n                <ButtonWithModal\n                    modalTitle={t('connection.modalTitle')}\n                    modalDescription={t('connection.modalDescription')}\n                    buttonLabel={t('connection.buttonLabel')}\n                    placeholder={t('connection.placeholder')}\n                    submitLabel={t('connection.submitLabel')}\n                    tracking={{\n                        conversionType: 'CallbackFromPromo',\n                        eventCategory: 'CallbackFromPromo',\n                    }}\n                />\n            </Connection>\n            <SelectionOfPaints\n                imagesData={data}\n                setAdvantagesServicesIsVisible={() => {}}\n            />\n            <div id=\"selectionOfPaintsAdvantages\" />\n            <AdvantagesServices imagesData={data} />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <div id=\"visualization3d\" />\n            <Visualization3d imagesData={data} />\n            <RunningLine inverse>{t('designProject99')}</RunningLine>\n            <Visualization360 />\n            <div id=\"visualization3dAdvantages\" />\n            <VisualizationAdvantages imagesData={data} />\n            <div id=\"faq\" />\n            <Faq imagesData={data} />\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormPromoPageBottom',\n                    eventCategory: 'FormPromoPageBottom',\n                }}\n            />\n        </Layout>\n    )\n}\n\nexport default PromoLong\n\nexport const query = graphql`\n    query {\n        allImageSharp {\n            edges {\n                node {\n                    fluid(srcSetBreakpoints: [400]) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                    parent {\n                        ... on File {\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { DefaultFormHero } from './DefaultFormHero'\nimport Proposal from 'assets/icons/proposal.svg'\nimport Pensile from 'assets/icons/pensile.svg'\nimport Handshake from 'assets/icons/handshake.svg'\nimport { ComercialForm } from 'components/form/CommercialForm'\n\nconst FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    background-color: ${backgroundColors.formPromo};\n    width: 100%;\n    ${mobileAfterBorder};\n    border-bottom: 1px solid ${colors.dark};\n`\n\nconst FormTitle = styled.div<{ text?: boolean }>`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n\n    line-height: 32px;\n    letter-spacing: 1px;\n    ${({ text }) =>\n        text === true\n            ? `color:${colors.dark};font-size: 24px;`\n            : `color: #437b13;font-size: 32px;`}\n\n    text-align: center;\n    margin: 40px 0 24px;\n    white-space: pre-wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n        margin: 60px 0 24px;\n        width: 350px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 100%;\n    }\n`\nconst svgStyle = css`\n    width: 20px;\n    min-width: 20px;\n    margin-right: 10px;\n`\nconst HandshakeS = styled(Handshake)`\n    ${svgStyle}\n`\nconst PensileS = styled(Pensile)`\n    ${svgStyle}\n`\nconst ProposalS = styled(Proposal)`\n    ${svgStyle}\n`\nconst FormColumn = styled.div`\n    width: 100%;\n    padding: 0 32px;\n    box-sizing: border-box;\n    h3 {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        line-height: 24px;\n        margin: 10px 0;\n    }\n`\nconst DivS = styled.div`\n    margin-bottom: 30px;\n`\n\nexport const CommercialProposalFormBlock = ({\n    text,\n    placement,\n}: {\n    text?: boolean\n    placement?: string\n}) => {\n    const { t } = useTranslation()\n\n    return (\n        <FormWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <DefaultFormHero image />\n                <FormColumn>\n                    <FormTitle text={text}>\n                        {text\n                            ? t('ComercialProposalTitle')\n                            : t('ComercialProposalFormTitle')}\n                    </FormTitle>\n                    {!text && (\n                        <DivS>\n                            <h3>\n                                <PensileS />\n                                {t('comercialForm.example')}\n                            </h3>\n                            <h3>\n                                <HandshakeS /> {t('comercialForm.conditions')}\n                            </h3>\n                            <h3>\n                                <ProposalS /> {t('comercialForm.proposal')}\n                            </h3>\n                        </DivS>\n                    )}\n                    <ComercialForm placement={placement} />\n                </FormColumn>\n            </Container>\n        </FormWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Container } from 'components/Container'\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\n\nconst CommunicationWrapper = styled.div<{ backgroundColors?: string }>`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${(props) =>\n        props.backgroundColors\n            ? props.backgroundColors\n            : backgroundColors.formPromo};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n    z-index:12;\n`\n\nconst ContainerStyle = styled(Container)`\n    margin: 30px 0;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 0;\n        outline: none;\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        justify-content: space-between;\n    }\n`\nconst TitleStyled = styled(Title)`\n    margin: 20px 50px;\n`\ninterface IConnectionProps {\n    backgroundColor?: string\n    text: string\n    children: React.ReactElement\n}\n\nexport const Connection: React.FC<IConnectionProps> = ({\n    backgroundColor,\n    text,\n    children,\n}) => {\n    return (\n        <CommunicationWrapper backgroundColors={backgroundColor}>\n            <ContainerStyle columns={'1fr'} tabletColumns={'1fr'}>\n                <TitleStyled>{text}</TitleStyled>\n                {children}\n            </ContainerStyle>\n        </CommunicationWrapper>\n    )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport { indent } from 'styles/indent'\nimport FullScreen from 'assets/icons/fullScreen.svg'\nimport { ModalCarousel } from 'components/ModalCarousel'\nimport { ProjectData } from 'layout/Project'\nimport { sendEvent } from 'tracking'\n\nconst ExampleOfProjectWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.promotion};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\n\nconst Price = styled.span`\n    font-family: 'Yeseva One', sans-serif;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 64px;\n    line-height: 74px;\n    letter-spacing: 0.888889px;\n    color: ${colors.accentText};\n    margin-left: 6px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 36px;\n        line-height: 42px;\n        letter-spacing: 1.77882px;\n    }\n`\nconst SubTitle = styled.h3`\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    text-align: center;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    margin-bottom: 32px;\n    @media (min-width: ${displayWidth.tablet}) {\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n        margin-right: 0;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 ${indent.heroColumnTablet} 24px;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 ${indent.heroColumnDesktop} 24px;\n    }\n`\nconst LeftSidebar = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-grow: 1;\n        min-width: 79px;\n        background-color: ${backgroundColors.promotion};\n        box-sizing: border-box;\n        margin-left: 1px;\n    }\n`\nconst RightSidebar = styled(LeftSidebar)`\n    @media (min-width: ${displayWidth.tablet}) {\n        background-color: ${colors.white};\n    }\n`\nconst ImgStyled = styled(Img)<{ fluid: FluidObject }>`\n    width: 100%;\n    height: 100%;\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    background-color: ${colors.white};\n    position: relative;\n`\nconst WrapperMobile = styled(Wrapper)`\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst WrapperDesktop = styled(Wrapper)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n    }\n`\nconst FullScreenButton = styled(FullScreen)`\n    fill: ${colors.white};\n    stroke: ${colors.dark};\n    stroke-width: 1px;\n    position: absolute;\n    top: 10px;\n    right: 26px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    z-index: 3;\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        right: 10px;\n    }\n`\nexport const ExamplesOfProjects = () => {\n    const { i18n } = useTranslation()\n    const [isModalOpen, setModalIsOpen] = useState(false)\n    const data = useStaticQuery(graphql`\n        query {\n            desktop: allFile(\n                filter: { relativeDirectory: { eq: \"projectExampleDesktop\" } }\n                sort: { fields: absolutePath }\n            ) {\n                edges {\n                    node {\n                        id\n                        childImageSharp {\n                            fluid(srcSetBreakpoints: [400]) {\n                                ...GatsbyImageSharpFluid\n                            }\n                            parent {\n                                ... on File {\n                                    name\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            mobile: allFile(\n                filter: { relativeDirectory: { eq: \"projectExamplesMobile\" } }\n                sort: { fields: absolutePath }\n            ) {\n                edges {\n                    node {\n                        id\n                        childImageSharp {\n                            fluid(srcSetBreakpoints: [400]) {\n                                ...GatsbyImageSharpFluid\n                            }\n                            parent {\n                                ... on File {\n                                    name\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            allExamplesOfProjectsYaml {\n                edges {\n                    node {\n                        title\n                        price\n                        description\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const examplesOfProjectsYaml = getDataByLanguage(\n        data.allExamplesOfProjectsYaml,\n        i18n.language\n    )\n\n    const { price, description, title } = examplesOfProjectsYaml\n    const sliderSettings = {\n        infinite: true,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    arrows: false,\n                    dots: true,\n                },\n            },\n        ],\n    }\n\n    return (\n        <ExampleOfProjectWrapper>\n            <LeftSidebar />\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled>\n                        {title}\n                        <Price>{price}</Price>\n                    </TitleStyled>\n                    <SubTitle> {description}</SubTitle>\n                </HeroColumn>\n                <WrapperDesktop>\n                    <FullScreenButton\n                        onClick={() => {\n                            sendEvent('FullScreen', {\n                                eventCategory: 'Slider',\n                                placement: 'ExampleOfProject',\n                            })\n                            setModalIsOpen(true)\n                        }}\n                    />\n                    <SliderComponent\n                        {...sliderSettings}\n                        afterChange={(current: number) => {\n                            sendEvent('ShowSlide', {\n                                eventCategory: 'Slider',\n                                currentSlide: `${current}`,\n                                placement: 'ExampleOfProject',\n                            })\n                        }}\n                    >\n                        {data.desktop.edges.map(\n                            (\n                                item: {\n                                    node: {\n                                        childImageSharp: {\n                                            fluid: FluidObject\n                                            parent: { name: string }\n                                        }\n                                    }\n                                },\n                                index: number\n                            ) => {\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={item.node.childImageSharp.fluid}\n                                        imgStyle={{\n                                            objectFit: 'containe',\n                                        }}\n                                        alt={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                        title={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </WrapperDesktop>\n                <WrapperMobile>\n                    <SliderComponent\n                        {...sliderSettings}\n                        afterChange={(current: number) => {\n                            sendEvent('ShowSlide', {\n                                eventCategory: 'Slider',\n                                currentSlide: `${current + 1}`,\n                                placement: 'ExampleOfProject',\n                            })\n                        }}\n                    >\n                        {data.mobile.edges.map(\n                            (\n                                item: {\n                                    node: {\n                                        childImageSharp: {\n                                            fluid: FluidObject\n                                            parent: { name: string }\n                                        }\n                                    }\n                                },\n                                index: number\n                            ) => {\n                                return (\n                                    <ImgStyled\n                                        key={index}\n                                        fluid={item.node.childImageSharp.fluid}\n                                        imgStyle={{\n                                            objectFit: 'containe',\n                                        }}\n                                        alt={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                        title={\n                                            item.node.childImageSharp.parent\n                                                .name\n                                        }\n                                    />\n                                )\n                            }\n                        )}\n                    </SliderComponent>\n                </WrapperMobile>\n            </Container>\n            <RightSidebar />\n            <ModalCarousel\n                data={data.desktop.edges.map(\n                    ({ node }: { node: ProjectData }) => node\n                )}\n                isModalOpen={isModalOpen}\n                closeHandler={() => setModalIsOpen(false)}\n                initialSlideIndex={1}\n            />\n        </ExampleOfProjectWrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Arrow from 'assets/icons/close.svg'\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { IFAQItem } from './FAQ'\nimport { sendEvent } from 'tracking'\n\nconst FaqListItemWrapper = styled.div`\n    border-bottom: 1px solid ${colors.dark};\n`\nconst QuestionWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n    margin-top: 36px;\n    text-decoration: none;\n    cursor: pointer;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-top: 24px;\n    }\n`\nconst Question = styled.div`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 22px;\n    color: ${colors.dark};\n    margin-right: 30px;\n    padding-bottom: 8px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-weight: normal;\n    }\n`\nconst Answer = styled(Question)<{ $isAnswerVisible: boolean }>`\n    display: ${({ $isAnswerVisible }) => ($isAnswerVisible ? 'block' : 'none')};\n    color: ${colors.darkText};\n    margin-top: 2px;\n    opacity: 0.7;\n    font-weight: normal;\n    strong {\n        font-weight: bold;\n    }\n    a {\n        color: ${colors.dark};\n    }\n    p,\n    li {\n        margin: 1em 0;\n    }\n    ol,\n    ul {\n        margin-left: 1em;\n    }\n    ol {\n        list-style: decimal;\n    }\n`\nconst IconStyled = styled(Arrow)<{ $isAnswerVisible: boolean }>`\n    position: absolute;\n    bottom: 8px;\n    right: 0;\n    transform: ${({ $isAnswerVisible }) =>\n        !$isAnswerVisible && 'rotate(180deg)'};\n    cursor: pointer;\n`\n\nexport const FAQItem = ({\n    question,\n    answer,\n    isAnswerVisible,\n    setIsAnswerVisible,\n    name,\n}: IFAQItem) => {\n    const scroll = () => {\n        window!.document!.getElementById(`${name}faq`)!.scrollIntoView({\n            block: 'center',\n            behavior: 'auto',\n        })\n    }\n    return (\n        <FaqListItemWrapper>\n            <QuestionWrapper\n                id={`${name}faq`}\n                onClick={() => {\n                    setTimeout(scroll, 40)\n                    isAnswerVisible === name\n                        ? setIsAnswerVisible(-1)\n                        : setIsAnswerVisible(name)\n                    sendEvent('Click', {\n                        eventCategory: 'FAQItem',\n                        question,\n                    })\n                }}\n            >\n                <Question\n                    dangerouslySetInnerHTML={{\n                        __html: question,\n                    }}\n                />\n\n                <IconStyled $isAnswerVisible={isAnswerVisible === name} />\n            </QuestionWrapper>\n            <Answer\n                $isAnswerVisible={isAnswerVisible === name}\n                dangerouslySetInnerHTML={{\n                    __html: answer,\n                }}\n            />\n        </FaqListItemWrapper>\n    )\n}\n","import React, { useState } from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet'\n\nimport { colors, backgroundColors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { Container } from 'components/Container'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Button } from 'components/Button'\nimport { FAQItem } from './FAQItem'\nimport Chair from 'assets/images/chair.svg'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { getImageByImageName } from 'utils/getImageByImageName'\nimport { sendEvent } from 'tracking'\nimport { imagesDataProp } from 'pages/promo'\n\nconst FaqWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: 1px solid ${colors.dark};\n    }\n`\nconst FaqListStyled = styled.div<{ showFaqListMobile: boolean }>`\n    display: ${({ showFaqListMobile }) =>\n        showFaqListMobile ? 'flex' : 'none'};\n    flex-direction: column;\n    padding: 28px 33px 64px;\n    box-sizing: border-box;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        outline: 1px solid ${colors.dark};\n        padding: 40px 48px 64px;\n        border-bottom: none;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 56px 48px;\n    }\n`\n\nconst SubTitle = styled.p`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 22px;\n    text-align: center;\n    color: ${colors.dark};\n    margin: 0 30px;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst ButtonFaq = styled(Button)`\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 24px;\n    text-transform: uppercase;\n    background: transparent;\n    color: ${colors.darkText};\n    margin: 40px 28px 58px;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n    :focus {\n        outline: none;\n    }\n`\n\nconst Image = styled(Img)<{ fluid: FluidObject }>`\n    display: none;\n    width: 100%;\n    height: auto;\n    color: transparent;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n    @media (min-width: ${displayWidth.tablet}) {\n        border-bottom: none;\n        position: relative;\n        align-items: flex-start;\n    }\n`\nconst CnairImg = styled(Chair)`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: block;\n        position: absolute;\n        width: 40%;\n        height: auto;\n        bottom: 0;\n        right: 10%;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        width: 40%;\n    }\n`\nexport interface IFAQItem {\n    question: string\n    answer: string\n    isAnswerVisible: number\n    setIsAnswerVisible: (arg: number) => void\n    name: number\n}\n\nexport const Faq = ({ imagesData }: { imagesData: imagesDataProp }) => {\n    const { i18n } = useTranslation()\n    const [showFaqListMobile, setShowFaqListMobile] = useState(false)\n    const [isAnswerVisible, setIsAnswerVisible] = useState(-1)\n    const data = useStaticQuery(graphql`\n        query {\n            allFaqYaml {\n                edges {\n                    node {\n                        title\n                        image\n                        subTitle\n                        buttonTextOpen\n                        buttonTextClose\n                        questions {\n                            question\n                            answer\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    const {\n        image,\n        buttonTextOpen,\n        buttonTextClose,\n        subTitle,\n        title,\n        questions,\n    } = getDataByLanguage(data.allFaqYaml, i18n.language)\n\n    const imageLamp = getImageByImageName(imagesData.allImageSharp, image)\n\n    const faqData = questions.map((item: IFAQItem) => {\n        return {\n            '@type': 'Question',\n            name: `${item.question}`,\n            acceptedAnswer: {\n                '@type': 'Answer',\n                text: `${item.answer}`,\n            },\n        }\n    })\n    return (\n        <FaqWrapper>\n            <Helmet>\n                <script type=\"application/ld+json\">\n                    {`{\n                        \"@context\": \"https://schema.org\",\n                        \"@type\": \"FAQPage\",\n                        \"mainEntity\": ${JSON.stringify(faqData)}\n                    }`}\n                </script>\n            </Helmet>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <Title>{title}</Title>\n                    <SubTitle>{subTitle}</SubTitle>\n                    <ButtonFaq\n                        onClick={() => {\n                            setShowFaqListMobile(!showFaqListMobile)\n                            sendEvent('Click', {\n                                eventCategory: 'ShowMoreButtonFAQ',\n                            })\n                        }}\n                    >\n                        {!showFaqListMobile ? buttonTextOpen : buttonTextClose}\n                    </ButtonFaq>\n                    <Image fluid={imageLamp.fluid} />\n                    <CnairImg />\n                </HeroColumn>\n\n                <FaqListStyled showFaqListMobile={showFaqListMobile} id=\"faq\">\n                    {questions.map((item: IFAQItem, index: number) => {\n                        return (\n                            <FAQItem\n                                key={index}\n                                question={item.question}\n                                answer={item.answer}\n                                isAnswerVisible={isAnswerVisible}\n                                setIsAnswerVisible={setIsAnswerVisible}\n                                name={index}\n                            />\n                        )\n                    })}\n                </FaqListStyled>\n            </Container>\n        </FaqWrapper>\n    )\n}\n","var React = require('react');\n\nfunction Chair (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M31.8 207.717H25.4031V273.811H31.8V207.717Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M128.228 207.717H121.831V273.811H128.228V207.717Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M138.415 202.487H15.2154V211.997H138.415V202.487Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M33.5032 203.242L33.5032 149.273H24.0263L24.0263 203.242H33.5032Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M129.644 203.293V149.324H120.168L120.168 203.293H129.644Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M141 1H11V162H141V1Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeMiterlimit\":\"10\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M41.8154 111H111.004\",\"stroke\":\"#231F20\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M42 78H111.188\",\"stroke\":\"#231F20\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M42 45H111.188\",\"stroke\":\"#231F20\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M152.868 176.81H1V205.577H152.868V176.81Z\",\"fill\":\"#FFEDB9\",\"stroke\":\"#231F20\",\"strokeWidth\":\"0.9502\",\"strokeMiterlimit\":\"10\",\"key\":9})]);\n}\n\nChair.defaultProps = {\"width\":\"154\",\"height\":\"273\",\"viewBox\":\"0 0 154 273\",\"fill\":\"none\"};\n\nmodule.exports = Chair;\n\nChair.default = Chair;\n","import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Img, { FluidObject } from 'gatsby-image'\nimport Slider from 'react-slick'\n\nimport { Modal } from './Modal'\nimport { ProjectImages } from 'layout/Project'\nimport { displayWidth } from 'styles/width'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ImageModal = styled(Img)<{ fluid: FluidObject }>`\n    height: 90vh;\n    @media (min-width: ${displayWidth.desktop}) {\n        height: 100%;\n    }\n`\nconst SliderStyled = styled(Slider)`\n    height: 100%;\n    .slick-list {\n        height: 100%;\n        margin: 0 -10px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -10px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            div {\n                height: 100%;\n            }\n        }\n    }\n    img {\n        cursor: grab;\n    }\n`\n\ninterface IModalProps {\n    closeHandler?: () => void\n    data: ProjectImages[]\n    isModalOpen: boolean\n    initialSlideIndex: number\n}\n\nexport const ModalCarousel: React.FC<IModalProps> = ({\n    data,\n    isModalOpen,\n    closeHandler,\n    initialSlideIndex,\n}) => {\n    const sliderSettings = {\n        infinite: true,\n        nextArrow: <SlickNext modal={true} />,\n        prevArrow: <SlickPrevious modal={true} />,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    arrows: false,\n                },\n            },\n        ],\n    }\n\n    const slides = data.map((photo) => (\n        <div key={photo.childImageSharp.fluid.src}>\n            <ImageModal\n                fluid={photo.childImageSharp.fluid}\n                imgStyle={{ objectFit: 'contain' }}\n                alt={photo.childImageSharp.parent.name}\n                title={photo.childImageSharp.parent.name}\n            />\n        </div>\n    ))\n    const sliderRef = useRef<Slider | null>(null)\n    const slider = sliderRef.current\n    useEffect(() => {\n        if (slider !== null) {\n            slider.slickGoTo(initialSlideIndex)\n        }\n    }, [initialSlideIndex, slider])\n    return (\n        <Modal isOpen={isModalOpen} closeHandler={closeHandler} image={true}>\n            <SliderStyled ref={sliderRef} {...sliderSettings}>\n                {slides}\n            </SliderStyled>\n        </Modal>\n    )\n}\n"],"sourceRoot":""}