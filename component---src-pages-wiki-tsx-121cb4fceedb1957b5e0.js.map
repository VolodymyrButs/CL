{"version":3,"sources":["webpack:///./src/pages/wiki.tsx","webpack:///./src/components/StarRating.tsx","webpack:///./src/blocks/Reviews.tsx","webpack:///./src/utils/getRandomArray.tsx","webpack:///./src/components/SliderComponent.tsx"],"names":["pageMetadata","uk","title","description","ru","en","ServicesPage","t","useTranslation","data","withPhoneMobile","tracking","conversionType","eventCategory","Wrapper","styled","div","StarRating","rating","quantity","arr","Array","from","_","i","map","key","viewBox","width","height","fill","className","d","percent","Math","round","id","url","x1","y1","x2","y2","offset","stopColor","ReviewsWrapper","backgroundColors","contact","colors","dark","mobileAfterBorder","RankTextWrapper","displayWidth","tablet","desktop","Rank","p","accentText","RankStarWrapper","GoogleIcon","Google","TextWrapper","Text","SubTitle","a","BottomText","TitleStyled","Title","SliderStyled","SliderComponent","Review","HeroColumn","indent","heroColumnTablet","heroColumnDesktop","SlideWrapper","Reviews","arrows","i18n","useStaticQuery","commonData","allReviewsYaml","edges","find","elem","node","parent","name","reviewsQuantity","link","reviewsArr","reviewsYaml","getDataByLanguage","language","ourRank","quantity1","quantity2","sliderSettings","dots","infinite","speed","nextArrow","bottom","prevArrow","RandomList","randLength","min","max","randArray","rand","floor","random","includes","push","createRand","length","Container","columns","tabletColumns","href","target","onClick","sendEvent","background","author","dangerouslySetInnerHTML","__html","text","location","CarouselWrapper","children","props","settings"],"mappings":"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","file":"component---src-pages-wiki-tsx-121cb4fceedb1957b5e0.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { Services } from 'blocks/Services/Services'\nimport { RunningLine } from 'components/RunningLine'\nimport { Reviews } from 'blocks/Reviews'\nimport { DefaultFormBlock } from 'blocks/DefaultFormBlock'\nimport { HelmetFunc } from 'components/PageMetaData'\n\nconst pageMetadata = {\n    uk: { title: 'lalaU', description: 'desc' },\n    ru: { title: 'lalaR', description: 'desc' },\n    en: { title: 'lalaE', description: 'desc' },\n}\n\nconst ServicesPage = () => {\n    const { t } = useTranslation()\n\n    return (\n        <div>\n            <HelmetFunc data={pageMetadata} />\n            <Services />\n            <RunningLine>{t('designProject99')}</RunningLine>\n            <Reviews />\n            <DefaultFormBlock\n                withPhoneMobile\n                tracking={{\n                    conversionType: 'FormServicesPageBottom',\n                    eventCategory: 'FormServicesPageBottom',\n                }}\n            />\n        </div>\n    )\n}\n\nexport default ServicesPage\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    svg {\n        padding: 0 6px;\n    }\n`\n\ninterface IStarRatingProps {\n    rating: number\n    quantity: number\n}\n\nexport const StarRating: React.FC<IStarRatingProps> = ({\n    rating,\n    quantity,\n}) => {\n    const arr = Array.from(Array(quantity), (_, i) => i + 1)\n    return (\n        <Wrapper>\n            {arr.map((i) => {\n                if (i <= rating) {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"#E24C1A\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else if (i > rating && i - rating < 1) {\n                    const ratio = Math.round((1 - (i - rating)) * 100)\n                    const percent = `${ratio}%`\n                    const id = `widgetGrad${i}`\n                    const url = `url(#${id})`\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <defs>\n                                <linearGradient\n                                    id={id}\n                                    x1=\"0%\"\n                                    y1=\"0%\"\n                                    x2=\"100%\"\n                                    y2=\"0%\"\n                                >\n                                    <stop\n                                        offset=\"0%\"\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(35, 31, 32)\"\n                                    ></stop>\n                                    <stop\n                                        offset={percent}\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                    <stop\n                                        offset=\"100%\"\n                                        stopColor=\"rgb(203, 211, 227)\"\n                                    ></stop>\n                                </linearGradient>\n                            </defs>\n                            <path\n                                fill={url}\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                } else {\n                    return (\n                        <svg\n                            key={i}\n                            viewBox=\"0 0 51 48\"\n                            width=\"18px\"\n                            height=\"18px\"\n                        >\n                            <path\n                                fill=\"rgb(203, 211, 227)\"\n                                className=\"widget\"\n                                d=\"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\"\n                            ></path>\n                        </svg>\n                    )\n                }\n            })}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { StarRating } from 'components/StarRating'\nimport { Container } from 'components/Container'\nimport { backgroundColors, colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { mobileAfterBorder } from 'styles/mobileAfterBorder'\nimport { Title } from 'components/TitleComponent'\nimport { getDataByLanguage } from 'utils/getDataByLanguage'\nimport { SliderComponent } from 'components/SliderComponent'\nimport Google from 'assets/icons/google.svg'\nimport { createRand } from 'utils/getRandomArray'\nimport { indent } from 'styles/indent'\nimport { sendEvent } from 'tracking'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst ReviewsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background-color: ${backgroundColors.contact};\n    position: relative;\n    border-bottom: 1px solid ${colors.dark};\n    ${mobileAfterBorder}\n`\nconst RankTextWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    color: ${colors.dark};\n    span {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 24px;\n        line-height: 33px;\n        align-self: flex-end;\n        @media (min-width: ${displayWidth.tablet}) {\n            font-size: 20px;\n            line-height: 24px;\n        }\n        @media (min-width: ${displayWidth.desktop}) {\n            font-size: 24px;\n            line-height: 33px;\n        }\n    }\n`\nconst Rank = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 32px;\n    line-height: 38px;\n    margin-left: 5px;\n    color: ${colors.accentText};\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 24px;\n        line-height: 28px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 32px;\n        line-height: 38px;\n    }\n`\nconst RankStarWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 14px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 14px 0;\n    }\n`\nconst GoogleIcon = styled(Google)`\n    margin-right: 18px;\n`\nconst TextWrapper = styled.div`\n    display: flex;\n    overflow: hidden;\n`\nconst Text = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    p {\n        padding-top: 10px;\n        text-align: center;\n        font-style: normal;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 26px;\n        letter-spacing: 0.4px;\n        @media (min-width: ${displayWidth.tablet}) {\n            text-align: left;\n        }\n        strong {\n            font-weight: 700;\n        }\n    }\n`\n\nconst SubTitle = styled.a`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    text-decoration: underline;\n    text-underline-position: under;\n    color: ${colors.dark};\n    margin-bottom: 20px;\n`\nconst BottomText = styled.div`\n    font-style: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.4px;\n    color: ${colors.dark};\n    text-align: center;\n    font-weight: bold;\n    margin: 25px auto;\n    @media (min-width: ${displayWidth.tablet}) {\n        margin: 25px 0 0px;\n        text-align: left;\n    }\n`\nconst TitleStyled = styled(Title)`\n    @media (min-width: ${displayWidth.tablet}) {\n        margin-left: 0;\n    }\n`\nconst SliderStyled = styled(SliderComponent)`\n    background-color: ${backgroundColors.contact};\n`\nconst Review = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 8px;\n    box-sizing: border-box;\n    border: 1px solid ${colors.dark};\n    border-radius: 40px;\n    height: 430px;\n    @media (min-width: 500px) {\n        height: 330px;\n    }\n    @media (min-width: ${displayWidth.tablet}) {\n        height: 330px;\n        padding: 30px;\n        align-items: flex-start;\n        margin: 40px;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 10px 50px;\n        height: 280px;\n    }\n    :focus {\n        outline: none;\n    }\n`\nconst HeroColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${colors.dark};\n    @media (min-width: ${displayWidth.tablet}) {\n        padding: 0 10px 56px ${indent.heroColumnTablet};\n        align-items: flex-start;\n        border-bottom: none;\n        border-right: 1px solid ${colors.dark};\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        padding: 0 10px 26px ${indent.heroColumnDesktop};\n    }\n`\n\nconst SlideWrapper = styled.div``\n\nexport const Reviews = ({ arrows }: { arrows?: boolean; bottom?: boolean }) => {\n    const { i18n } = useTranslation()\n    const data = useStaticQuery(graphql`\n        query {\n            allReviewsYaml {\n                edges {\n                    node {\n                        title\n                        ourRank\n                        rating\n                        quantity1\n                        quantity2\n                        link\n                        reviewsQuantity\n                        reviewsArr {\n                            text\n                            name\n                            location\n                        }\n                        parent {\n                            ... on File {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const commonData = data.allReviewsYaml.edges.find(\n        (elem: { node: { parent: { name: string } } }) => {\n            return elem.node.parent.name === 'reviews'\n        }\n    ).node\n    const { rating, reviewsQuantity, link, reviewsArr } = commonData\n    const reviewsYaml = getDataByLanguage(data.allReviewsYaml, i18n.language)\n    const { title, ourRank, quantity1, quantity2 } = reviewsYaml\n    const arr = arrows ? true : false\n    const sliderSettings = {\n        dots: true,\n        infinite: true,\n        speed: 100,\n        arrows: arr,\n        nextArrow: <SlickNext bottom />,\n        prevArrow: <SlickPrevious bottom />,\n    }\n\n    const RandomList = createRand(5, 0, reviewsArr.length - 1)\n    return (\n        <ReviewsWrapper>\n            <Container columns={'1fr'} tabletColumns={'1fr 2fr'}>\n                <HeroColumn>\n                    <TitleStyled> {title}</TitleStyled>\n                    <RankTextWrapper>\n                        <span>{ourRank}: </span>\n                        <Rank>{rating}</Rank>\n                        <span>/5</span>\n                    </RankTextWrapper>\n                    <RankStarWrapper>\n                        <GoogleIcon />\n                        <StarRating rating={rating} quantity={5} />\n                    </RankStarWrapper>\n                    <SubTitle\n                        href={link}\n                        target=\"blank\"\n                        onClick={() => {\n                            sendEvent('Click', {\n                                eventCategory: 'GoogleRewiews',\n                            })\n                        }}\n                    >\n                        {quantity1}&nbsp;\n                        {reviewsQuantity}&nbsp;\n                        {quantity2}\n                    </SubTitle>\n                </HeroColumn>\n                <SliderStyled\n                    {...sliderSettings}\n                    background={backgroundColors.contact}\n                >\n                    {RandomList.map((i) => {\n                        return (\n                            <SlideWrapper\n                                key={i}\n                                onClick={() => {\n                                    sendEvent('Click', {\n                                        eventCategory: 'ReviewItem',\n                                        author: reviewsArr[i].name,\n                                    })\n                                }}\n                            >\n                                <Review>\n                                    <p />\n                                    <TextWrapper>\n                                        <Text\n                                            dangerouslySetInnerHTML={{\n                                                __html: reviewsArr[i].text,\n                                            }}\n                                        />\n                                    </TextWrapper>\n                                    <BottomText>\n                                        {reviewsArr[i].name},&nbsp;\n                                        {reviewsArr[i].location}\n                                    </BottomText>\n                                </Review>\n                            </SlideWrapper>\n                        )\n                    })}\n                </SliderStyled>\n            </Container>\n        </ReviewsWrapper>\n    )\n}\n","export const createRand = (\n    randLength: number,\n    min: number,\n    max: number\n): number[] => {\n    let randArray: number[] = []\n    let i = 0\n    if (randLength > max - min + 1) {\n        return []\n    }\n    while (i < randLength) {\n        let rand = Math.floor(Math.random() * (max - min + 1)) + min\n        if (!randArray.includes(rand)) {\n            i++\n            randArray.push(rand)\n        }\n    }\n    return randArray\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { displayWidth } from 'styles/width'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport { SlickNext, SlickPrevious } from 'components/SlickNavigation'\n\nconst CarouselWrapper = styled.div`\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    height: auto;\n    padding: 16px 32px 26px;\n    @media (min-width: ${displayWidth.tablet}) {\n        max-width: calc((100vw - 160px) * 0.6666);\n        height: auto;\n        padding: 0;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        max-width: calc((${displayWidth.desktop} - 160px) * 0.6666);\n        max-height: 600px;\n    }\n    .slick-list {\n        margin: 0 -16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 -30px;\n        }\n    }\n    img {\n        cursor: grab;\n    }\n    .slick-slide > div {\n        margin: 0 16px;\n        @media (min-width: ${displayWidth.tablet}) {\n            margin: 0 30px;\n        }\n    }\n    .slick-dots {\n        bottom: -22px;\n        left: 0;\n\n        @media (min-width: ${displayWidth.tablet}) {\n            bottom: 5px;\n        }\n        li {\n            width: 10px;\n            button {\n                width: 10px;\n                ::before {\n                    width: 10px;\n                }\n            }\n        }\n    }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SliderComponent = ({ children, ...props }: any) => {\n    const settings = {\n        nextArrow: <SlickNext />,\n        prevArrow: <SlickPrevious />,\n    }\n    return (\n        <CarouselWrapper {...props}>\n            <Slider {...settings} {...props}>\n                {children}\n            </Slider>\n        </CarouselWrapper>\n    )\n}\n"],"sourceRoot":""}