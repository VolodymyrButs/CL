{"version":3,"sources":["webpack:///./src/i18n/LanguageSwitcher.tsx","webpack:///./src/blocks/Header/MobileHeader.tsx","webpack:///./src/blocks/Header/Header.tsx","webpack:///./src/i18n/LocalizedLink.tsx","webpack:///./src/components/SocialIcons.tsx","webpack:///./src/components/Logo.tsx","webpack:///./src/blocks/Header/MainMenu.tsx"],"names":["languagesList","Object","keys","languages","LanguageList","styled","div","headerHeight","mobile","colors","white","displayWidth","tablet","props","open","css","dark","desktop","IconStyled","ShevronIcon","FakeLink","span","LinkStyled","Link","attrs","activeClassName","LangItem","button","Wrapper","LanguageSwitcher","closeMenu","useState","isOpen","setIsOpen","i18n","useTranslation","getPagePath","usePagePath","onClick","language","label","filter","lang","map","langLabel","path","key","to","sendEvent","eventCategory","MobileHeaderWraper","isMenuOpen","MobileMenu","BurgerButton","PhoneLinkStyled","PhoneLink","iconStyles","ViberIconStyled","Viber","viber","TelegramIconStyled","Telegram","telegram","WhatsappIconStyled","Whatsapp","whatsapp","IconWrapper","MobileHeader","showSocialIcons","t","setIsMenuOpen","Logo","href","target","sendForm","sendConversion","placement","aria-label","fill","MainMenu","onMenuItemClick","phone","contactInformation","primaryPhone","RoundText","color","text","PhoneSvgAnimated","HeaderWraper","ContactLinks","SocialIconsWrapper","Header","Container","tabletColumns","desktopColunms","SocialIcons","LocalizedLink","isDefault","pathPrefix","pathIsDefault","join","pathNotDefault","pathTo","LocalizedLinkAnchor","ViberIconS","ViberIcon","TelegramIconS","TelegramIcon","WhatsappIconS","WhatsappIcon","InstagramIconS","InstagramIcon","insta","FacebookIconS","FacebookIcon","facebook","showAllIcons","LogoStyled","LogoIcon","MenuWraper","menu","MenuItem","MenuWraperTablet","Div"],"mappings":"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","file":"a501f4c228f09ed1ff106aaf8c6486caef82a50c-a21a94a6dd40ec5b7ee9.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\n\nimport { languages } from 'i18n/languages'\nimport ShevronIcon from 'assets/icons/ShevronDown.svg'\nimport { usePagePath } from 'hooks/usePagePath'\nimport { headerHeight } from 'styles/height'\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { sendEvent } from 'tracking'\n\nconst languagesList = Object.keys(languages)\n\nconst LanguageList = styled.div<{ open: boolean }>`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: ${headerHeight.mobile};\n    height: 100%;\n    box-sizing: border-box;\n    border-right: 1px solid ${colors.white};\n    @media (min-width: ${displayWidth.tablet}) {\n        ${(props) =>\n            props.open\n                ? css`\n                      color: ${colors.white};\n                      background: ${colors.dark};\n                  `\n                : css`\n                      color: ${colors.dark};\n                      background: transparent;\n                  `}\n        width:${headerHeight.desktop};\n        height: 79px;\n        border-right: none;\n        margin-bottom: 0px;\n        z-index: 1;\n    }\n`\nconst IconStyled = styled(ShevronIcon)<{ open: boolean }>`\n    width: 10px;\n    fill: ${colors.white};\n    ${({ open }) => (open ? 'padding-right:6px;' : 'padding-left: 6px;')};\n    transform: ${({ open }) => open && 'rotate(180deg)'};\n    cursor: pointer;\n    @media (min-width: ${displayWidth.tablet}) {\n        fill: ${colors.dark};\n    }\n`\nconst FakeLink = styled.span<{ open: boolean }>`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${colors.white};\n    text-decoration: none;\n    font-size: 16px;\n    font-weight: 600;\n    letter-spacing: 0;\n    line-height: 19px;\n    cursor: pointer;\n    box-sizing: border-box;\n    @media (min-width: ${displayWidth.tablet}) {\n        color: ${colors.dark};\n        width: ${headerHeight.desktop};\n        height: 100%;\n        background-color: ${({ open }) =>\n            open ? colors.white : 'transparent'};\n        border: ${({ open }) => (open ? `1px solid ${colors.dark}` : 'none')};\n        border-bottom: none;\n        border-top: none;\n        box-sizing: border-box;\n        :hover {\n            background-color: ${({ open }) => open && colors.dark};\n            color: ${({ open }) => open && colors.white};\n            ${IconStyled} {\n                fill: ${({ open }) => (open ? colors.white : colors.dark)};\n            }\n        }\n    }\n`\nconst activeClassName = 'active'\nconst LinkStyled = styled(Link).attrs({\n    activeClassName,\n})<{ open: boolean }>`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${colors.white};\n    text-decoration: none;\n    font-size: 16px;\n    font-weight: 600;\n    letter-spacing: 0;\n    line-height: 19px;\n    @media (min-width: ${displayWidth.tablet}) {\n        color: ${({ open }) => (open ? colors.white : colors.dark)};\n    }\n`\n\nconst LangItem = styled.button<{ open: boolean }>`\n    display: flex;\n    list-style: none;\n    width: 100%;\n    box-sizing: border-box;\n    height: ${headerHeight.mobile};\n    background-color: transparent;\n    border: none;\n    border-right: 1px solid ${colors.white};\n    border-bottom: 1px solid ${colors.white};\n    @media (min-width: ${displayWidth.tablet}) {\n        height: ${headerHeight.desktop};\n        background-color: ${({ open }) =>\n            open ? colors.white : 'transparent'};\n        border: ${({ open }) => (open ? `1px solid ${colors.dark}` : 'none')};\n        border-bottom: ${({ open }) => open && 'none'};\n    }\n    :hover {\n        cursor: pointer;\n        background-color: ${({ open }) => open && colors.dark};\n        ${LinkStyled} {\n            color: ${colors.white};\n        }\n    }\n`\n\nconst Wrapper = styled.div<{ open: boolean }>`\n    position: absolute;\n    left: 0;\n    top: 66px;\n    width: ${headerHeight.mobile};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    @media (min-width: ${displayWidth.tablet}) {\n        width: ${headerHeight.desktop};\n        top: 79px;\n        display: ${({ open }) => (open ? `flex` : 'none')};\n    }\n\n    :last-child {\n        border-bottom: ${({ open }) =>\n            open ? `1px solid ${colors.dark}` : 'none'};\n    }\n`\n\nexport const LanguageSwitcher = ({\n    closeMenu = () => {},\n}: {\n    closeMenu?: (arg: boolean) => void\n}) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const { i18n } = useTranslation()\n    const { getPagePath } = usePagePath()\n    return (\n        <LanguageList open={isOpen}>\n            <FakeLink open={isOpen} onClick={() => setIsOpen(!isOpen)}>\n                {languages[i18n.language].label}\n                <IconStyled open={isOpen} />\n            </FakeLink>\n\n            <Wrapper open={isOpen}>\n                {languagesList\n                    .filter((lang) => lang !== i18n.language)\n                    .map((lang) => {\n                        const langLabel = languages[lang].label\n                        const path = getPagePath(lang)\n\n                        return (\n                            <LangItem open={isOpen} key={lang}>\n                                <LinkStyled\n                                    open={!isOpen}\n                                    to={`${path}`}\n                                    onClick={() => {\n                                        closeMenu(false)\n                                        setIsOpen(!isOpen)\n                                        sendEvent('Click', {\n                                            eventCategory: 'LanguageChange',\n                                            to: `${lang}`,\n                                        })\n                                    }}\n                                >\n                                    {langLabel}\n                                </LinkStyled>\n                            </LangItem>\n                        )\n                    })}\n            </Wrapper>\n        </LanguageList>\n    )\n}\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { LanguageSwitcher } from 'i18n/LanguageSwitcher'\nimport ExitSvg from 'assets/icons/Exit.svg'\nimport BurgerSvg from 'assets/icons/Burger.svg'\nimport { colors } from 'styles/colors'\nimport { Logo } from 'components/Logo'\nimport { displayWidth } from 'styles/width'\nimport { MainMenu } from './MainMenu'\nimport { contactInformation } from 'components/contactInformation'\nimport { headerHeight } from 'styles/height'\nimport Viber from 'assets/icons/Viber.svg'\nimport Telegram from 'assets/icons/Telegram.svg'\nimport Whatsapp from 'assets/icons/Whatsapp.svg'\nimport { RoundText } from 'components/RoundText'\nimport { PhoneSvgAnimated } from 'components/PhoneSvgAnimated'\nimport { useTranslation } from 'react-i18next'\nimport { sendConversion, sendEvent } from 'tracking'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { sendForm } from 'components/form/api'\n\nconst MobileHeaderWraper = styled.div<{ isMenuOpen: boolean }>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 65px;\n    border-bottom: 1px solid\n        ${({ isMenuOpen }) => (isMenuOpen ? colors.white : colors.dark)};\n    z-index: 2;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: none;\n    }\n`\nconst MobileMenu = styled.div<{ isMenuOpen: boolean }>`\n    position: absolute;\n    display: ${({ isMenuOpen }) => (isMenuOpen ? 'flex' : 'none')};\n    flex-direction: column;\n    justify-content: space-between;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    background-color: ${colors.dark};\n`\nconst BurgerButton = styled.span`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    display: flex;\n    box-sizing: border-box;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    cursor: pointer;\n`\nconst PhoneLinkStyled = styled(PhoneLink)`\n    display: flex;\n    flex-direction: column;\n    color: ${colors.white};\n    margin-bottom: 80px;\n    font-weight: normal;\n    svg {\n        fill: ${colors.white};\n    }\n`\nconst iconStyles = css`\n    width: 38px;\n    height: 38px;\n    margin: 4px 13px;\n    cursor: pointer;\n    pointer-events: auto;\n`\nconst ViberIconStyled = styled(Viber)`\n    ${iconStyles};\n    fill: ${colors.viber};\n`\nconst TelegramIconStyled = styled(Telegram)`\n    ${iconStyles};\n    fill: ${colors.telegram};\n`\nconst WhatsappIconStyled = styled(Whatsapp)`\n    ${iconStyles};\n    fill: ${colors.whatsapp};\n`\nconst IconWrapper = styled.div`\n    display: flex;\n`\n\ninterface MobileHeaderProps {\n    showSocialIcons?: boolean\n}\n\nexport const MobileHeader: React.FC<MobileHeaderProps> = ({\n    showSocialIcons,\n}) => {\n    const { t } = useTranslation()\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    return (\n        <>\n            <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                <Logo />\n                {showSocialIcons && (\n                    <IconWrapper>\n                        <a\n                            href=\"viber://pa?chatURI=clearline_com_ua\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`HeaderMobileViberIcon`, {})\n                                sendConversion('SocialIconViber')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconViber',\n                                    placement: 'MobileHeader',\n                                })\n                            }}\n                        >\n                            <ViberIconStyled aria-label=\"ViberButton\" />\n                        </a>\n                        <a\n                            href=\"https://wa.me/+380958363420\"\n                            target=\"blank\"\n                            onClick={() => {\n                                sendForm(`HeaderMobileWhatsAppIcon`, {})\n                                sendConversion('SocialIconWhatsApp')\n                                sendEvent('SocialIcon', {\n                                    eventCategory: 'SocialIconWhatsApp',\n                                    placement: 'MobileHeader',\n                                })\n                            }}\n                        >\n                            <WhatsappIconStyled aria-label=\"Whatsapp Button\" />\n                        </a>\n                        <a\n                            href=\"tg://resolve?domain=ClearLine_bot\"\n                            target=\"blank\"\n                        >\n                            <TelegramIconStyled\n                                aria-label=\"Telegram Button\"\n                                onClick={() => {\n                                    sendForm(`HeaderMobileTelegramIcon`, {})\n                                    sendConversion('SocialIconTelegram')\n                                    sendEvent('SocialIcon', {\n                                        eventCategory: 'SocialIconTelegram',\n                                        placement: 'MobileHeader',\n                                    })\n                                }}\n                            />\n                        </a>\n                    </IconWrapper>\n                )}\n                <BurgerButton\n                    onClick={() => {\n                        setIsMenuOpen(!isMenuOpen)\n                    }}\n                >\n                    <BurgerSvg fill={colors.dark} />\n                </BurgerButton>\n            </MobileHeaderWraper>\n            <MobileMenu isMenuOpen={isMenuOpen}>\n                <MobileHeaderWraper isMenuOpen={isMenuOpen}>\n                    <LanguageSwitcher closeMenu={setIsMenuOpen} />\n                    <BurgerButton\n                        onClick={() => {\n                            setIsMenuOpen(!isMenuOpen)\n                        }}\n                    >\n                        <ExitSvg fill={colors.white} />\n                    </BurgerButton>\n                </MobileHeaderWraper>\n\n                <MainMenu onMenuItemClick={() => setIsMenuOpen(false)} />\n                <PhoneLinkStyled\n                    phone={contactInformation.primaryPhone}\n                    placement={'MobileHeader'}\n                >\n                    <RoundText color={colors.white} text={t('callUs')}>\n                        <PhoneSvgAnimated color={colors.white} />\n                    </RoundText>\n                </PhoneLinkStyled>\n            </MobileMenu>\n        </>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { MainMenu } from 'blocks/Header/MainMenu'\nimport { LanguageSwitcher } from 'i18n/LanguageSwitcher'\nimport { Container } from 'components/Container'\nimport { SocialIcons } from 'components/SocialIcons'\nimport { contactInformation } from 'components/contactInformation'\nimport { PhoneLink } from 'components/PhoneLink'\nimport { colors } from 'styles/colors'\nimport { Logo } from 'components/Logo'\nimport { displayWidth } from 'styles/width'\nimport { MobileHeader } from './MobileHeader'\n\nconst HeaderWraper = styled.div`\n    display: none;\n    justify-content: center;\n    width: 100%;\n    max-height: 80px;\n    border-bottom: 1px solid ${colors.dark};\n    z-index: 10;\n    box-sizing: border-box;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n    }\n`\n\nconst ContactLinks = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n`\nconst SocialIconsWrapper = styled.div`\n    margin: 0 45px;\n    width: 100%;\n`\n\ninterface HeaderProps {\n    showSocialIcons?: boolean\n}\n\nexport const Header: React.FC<HeaderProps> = ({ showSocialIcons = true }) => {\n    return (\n        <>\n            <MobileHeader showSocialIcons={showSocialIcons} />\n            <HeaderWraper>\n                <Logo />\n                <Container tabletColumns={'7fr 5fr'} desktopColunms={'7fr 5fr'}>\n                    <MainMenu />\n                    <ContactLinks>\n                        <PhoneLink\n                            phone={contactInformation.primaryPhone}\n                            placement={'Header'}\n                        />\n                        {showSocialIcons && (\n                            <SocialIconsWrapper>\n                                <SocialIcons\n                                    fill={colors.dark}\n                                    placement={'Header'}\n                                />\n                            </SocialIconsWrapper>\n                        )}\n                    </ContactLinks>\n                </Container>\n                <LanguageSwitcher />\n            </HeaderWraper>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { useTranslation } from 'react-i18next'\nimport path from 'path-browserify'\nimport { languages } from 'i18n/languages'\n\ninterface ILocalizedLinkProps {\n    to: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any\n}\n\nexport const LocalizedLink: React.FC<ILocalizedLinkProps> = ({\n    to,\n    ...props\n}) => {\n    const { i18n } = useTranslation()\n    const { isDefault, pathPrefix } = languages[i18n.language]\n    const pathIsDefault = path.join('/', to, '/')\n    const pathNotDefault = path.join('/', pathPrefix, to, '/')\n    const pathTo = isDefault ? pathIsDefault : pathNotDefault\n    return <Link {...props} to={pathTo} />\n}\nexport const LocalizedLinkAnchor: React.FC<ILocalizedLinkProps> = ({\n    to,\n    ...props\n}) => {\n    const { i18n } = useTranslation()\n    const { isDefault, pathPrefix } = languages[i18n.language]\n    const pathIsDefault = path.join('/', to)\n    const pathNotDefault = path.join('/', pathPrefix, to)\n    const pathTo = isDefault ? pathIsDefault : pathNotDefault\n    return <Link {...props} to={pathTo} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport ViberIcon from 'assets/icons/Viber.svg'\nimport TelegramIcon from 'assets/icons/Telegram.svg'\nimport WhatsappIcon from 'assets/icons/Whatsapp.svg'\nimport InstagramIcon from 'assets/icons/Instagram.svg'\nimport FacebookIcon from 'assets/icons/Facebook.svg'\nimport { displayWidth } from 'styles/width'\nimport { sendConversion, sendEvent } from 'tracking'\nimport { sendForm } from './form/api'\nimport { colors } from 'styles/colors'\n\nconst SocialIconsWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    box-sizing: border-box;\n    @media (min-width: ${displayWidth.desktop}) {\n        justify-content: space-between;\n    }\n`\nconst ViberIconS = styled(ViberIcon)<{ fill: string }>`\n    fill: ${(props) => props.fill};\n    margin: 0 5px;\n    :hover {\n        fill: ${colors.viber};\n    }\n`\nconst TelegramIconS = styled(TelegramIcon)<{ fill: string }>`\n    fill: ${(props) => props.fill};\n    margin: 0 5px;\n    :hover {\n        fill: ${colors.telegram};\n    }\n`\nconst WhatsappIconS = styled(WhatsappIcon)<{ fill: string }>`\n    fill: ${(props) => props.fill};\n    margin: 0 5px;\n    :hover {\n        fill: ${colors.whatsapp};\n    }\n`\nconst InstagramIconS = styled(InstagramIcon)<{ fill: string }>`\n    fill: ${(props) => props.fill};\n    margin: 0 5px;\n    :hover {\n        fill: ${colors.insta};\n    }\n`\nconst FacebookIconS = styled(FacebookIcon)<{ fill: string }>`\n    fill: ${(props) => props.fill};\n    margin: 0 5px;\n    :hover {\n        fill: ${colors.facebook};\n    }\n`\ninterface ISocialIconsProps {\n    fill: string\n    showAllIcons?: Boolean\n    placement: string\n}\n\nexport const SocialIcons: React.FC<ISocialIconsProps> = ({\n    fill,\n    showAllIcons,\n    placement,\n}) => {\n    return (\n        <SocialIconsWrapper>\n            <a\n                href=\"viber://pa?chatURI=clearline_com_ua\"\n                target=\"blank\"\n                onClick={() => {\n                    sendForm(`${placement}ViberIcon`, {})\n                    sendConversion('SocialIconViber')\n                    sendEvent('SocialIcon', {\n                        eventCategory: 'SocialIconViber',\n                        placement,\n                    })\n                }}\n            >\n                <ViberIconS aria-label=\"ViberButton\" fill={fill} />\n            </a>\n            <a\n                href=\"tg://resolve?domain=ClearLine_bot\"\n                target=\"blank\"\n                onClick={() => {\n                    sendForm(`${placement}TelegramIcon`, {})\n                    sendConversion('SocialIconTelegram')\n                    sendEvent('SocialIcon', {\n                        eventCategory: 'SocialIconTelegram',\n                        placement,\n                    })\n                }}\n            >\n                <TelegramIconS aria-label=\"Telegram Button\" fill={fill} />\n            </a>\n            <a\n                href=\"https://wa.me/+380958363420\"\n                target=\"blank\"\n                onClick={() => {\n                    sendForm(`${placement}WhatsappIcon`, {})\n                    sendConversion('SocialIconWhatsApp')\n                    sendEvent('SocialIcon', {\n                        eventCategory: 'SocialIconWhatsApp',\n                        placement,\n                    })\n                }}\n            >\n                <WhatsappIconS aria-label=\"Whatsapp Button\" fill={fill} />\n            </a>\n            {showAllIcons && (\n                <>\n                    <a\n                        href=\"https://www.instagram.com/clear_line/\"\n                        target=\"blank\"\n                        onClick={() => {\n                            sendForm(`${placement}InstagramIcon`, {})\n                            sendConversion('SocialIconInstagram')\n                            sendEvent('SocialIcon', {\n                                eventCategory: 'SocialIconInstagram',\n                                placement,\n                            })\n                        }}\n                    >\n                        <InstagramIconS\n                            aria-label=\"Instagram Button\"\n                            fill={fill}\n                        />\n                    </a>\n                    <a\n                        href=\"https://www.facebook.com/clearline.com.ua/\"\n                        target=\"blank\"\n                        onClick={() => {\n                            sendForm(`${placement}FacebookIcon`, {})\n                            sendConversion('SocialIconFacebook')\n                            sendEvent('SocialIcon', {\n                                eventCategory: 'SocialIconFacebook',\n                                placement,\n                            })\n                        }}\n                    >\n                        <FacebookIconS\n                            aria-label=\"Facebook Button\"\n                            fill={fill}\n                        />\n                    </a>\n                </>\n            )}\n        </SocialIconsWrapper>\n    )\n}\n","import styled from 'styled-components'\nimport React from 'react'\nimport { LocalizedLink } from 'i18n/LocalizedLink'\n\nimport LogoIcon from 'assets/icons/Logo.svg'\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nimport { headerHeight } from 'styles/height'\n\nconst paddingMobile = '11px'\nconst paddingDesktop = '12px'\n\nconst LogoStyled = styled(LogoIcon)`\n    width: ${headerHeight.mobile};\n    height: ${headerHeight.mobile};\n    padding: ${paddingMobile};\n    fill: ${colors.dark};\n    box-sizing: border-box;\n    @media (min-width: ${displayWidth.tablet}) {\n        min-width: ${headerHeight.desktop};\n        min-height: ${headerHeight.desktop};\n        padding: ${paddingDesktop};\n    }\n`\nexport const Logo = ({ ...props }) => {\n    return (\n        <LocalizedLink to=\"/\" aria-label=\"logo\">\n            <LogoStyled {...props} />\n        </LocalizedLink>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { LocalizedLink } from 'i18n/LocalizedLink'\nimport { colors } from 'styles/colors'\nimport { displayWidth } from 'styles/width'\nconst MenuWraper = styled.menu`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 50%;\n    flex-wrap: wrap;\n    @media (min-width: ${displayWidth.tablet}) {\n        flex-direction: row;\n        border-right: 1px solid ${colors.dark};\n        height: 100%;\n        display: none;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: flex;\n    }\n`\n\nconst activeClassName = 'active'\nconst MenuItem = styled(LocalizedLink).attrs({\n    activeClassName,\n})`\n    position: relative;\n    color: ${colors.white};\n    font-weight: 600;\n    letter-spacing: 0.8px;\n    line-height: 19px;\n    text-transform: uppercase;\n    text-decoration: none;\n    margin: 0 10px;\n    @media (min-width: ${displayWidth.tablet}) {\n        font-size: 14px;\n        color: ${colors.dark};\n        :nth-child(2) {\n            margin: 0 9%;\n        }\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        font-size: 16px;\n        :nth-child(2) {\n            margin: 0 10px;\n        }\n    }\n    &::after {\n        width: 0;\n        transition: all 0.35s ease;\n        position: absolute;\n        bottom: -6px;\n        width: 0;\n        left: 0;\n        border-top: 2px solid ${colors.white};\n        content: '';\n        @media (min-width: ${displayWidth.tablet}) {\n            border-top: 2px solid ${colors.dark};\n        }\n    }\n\n    &:hover,\n    &.${activeClassName} {\n        ::after {\n            width: 100%;\n        }\n    }\n`\nconst MenuWraperTablet = styled.div`\n    display: none;\n    @media (min-width: ${displayWidth.tablet}) {\n        display: flex;\n        flex-direction: column;\n        border-right: 1px solid ${colors.dark};\n        align-items: center;\n        justify-content: center;\n    }\n    @media (min-width: ${displayWidth.desktop}) {\n        display: none;\n    }\n`\nconst Div = styled.div`\n    width: 90%;\n    height: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\ninterface IMainMenuProps {\n    onMenuItemClick?: (\n        event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) => void\n}\n\nexport const MainMenu: React.FC<IMainMenuProps> = ({\n    onMenuItemClick = () => {},\n}) => {\n    const { t } = useTranslation()\n    return (\n        <>\n            <MenuWraper>\n                <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), t('home'))}\n                    to=\"/\"\n                >\n                    {t('home')}\n                </MenuItem>\n                <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), t('promo'))}\n                    to=\"/promo\"\n                >\n                    {t('promo')}\n                </MenuItem>\n                <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), t('works'))}\n                    to=\"/works\"\n                >\n                    {t('works')}\n                </MenuItem>\n                <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), t('contacts'))}\n                    to=\"/contacts\"\n                >\n                    {t('contacts')}\n                </MenuItem>\n                <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), t('services'))}\n                    to=\"/services\"\n                >\n                    {t('services')}\n                </MenuItem>\n                {/* <MenuItem\n                    onClick={onMenuItemClick}\n                    aria-label={(t('goTo'), 'wiki')}\n                    to=\"/promo-color\"\n                >\n                    {t('wiki')}\n                </MenuItem> */}\n            </MenuWraper>\n            <MenuWraperTablet>\n                <Div>\n                    <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), t('home'))}\n                        to=\"/\"\n                    >\n                        {t('home')}\n                    </MenuItem>\n                    <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), t('promo'))}\n                        to=\"/promo\"\n                    >\n                        {t('promo')}\n                    </MenuItem>\n                    <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), t('works'))}\n                        to=\"/works\"\n                    >\n                        {t('works')}\n                    </MenuItem>\n                </Div>\n                <Div>\n                    <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), t('contacts'))}\n                        to=\"/contacts\"\n                    >\n                        {t('contacts')}\n                    </MenuItem>\n                    <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), t('services'))}\n                        to=\"/services\"\n                    >\n                        {t('services')}\n                    </MenuItem>\n                    {/* <MenuItem\n                        onClick={onMenuItemClick}\n                        aria-label={(t('goTo'), 'wiki')}\n                        to=\"/wiki\"\n                    >\n                        {t('wiki')}\n                    </MenuItem> */}\n                </Div>\n            </MenuWraperTablet>\n        </>\n    )\n}\n"],"sourceRoot":""}